{
  "Name": "LoadVolume",
  "_id": "6e8fb94b-b45f-46f6-9811-e82de620fa21",
  "Namespace": "lib.image.load",
  "Description": "Loads an raw 16bit luminance volume.",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "d3d27a3b-119b-4af1-952b-1963c20da4e5",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "float3 DataSize;",
          "float3 Size;",
          "float3 Offset;",
          "float2 Window;",
          "float3 Rotate;",
          "//<<< _parameters\r",
          "Texture3D imageData;\r",
          "float4x4 rotationMatrix;\r",
          " \r",
          "//>>> setup\r",
          "SamplerState samLinear\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_LINEAR;\r",
          "    AddressU = Border;\r",
          "    AddressV = Border;\r",
          "    AddressW = Border;\r",
          "};\r",
          "//<<< setup\r",
          "\r",
          "//>>> declarations\r",
          "struct VS_IN\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "};\r",
          "\r",
          "struct PS_IN\r",
          "{\r",
          "    float4 pos : SV_POSITION;\r",
          "    float4 texCoord  : WORLD_POS;\r",
          "};\r",
          "//<<< declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.texCoord = mul(input.pos, objectToWorldMatrix);",
          "    output.texCoord = mul(output.texCoord, rotationMatrix);",
          "    output.pos = mul(input.pos, objectToWorldMatrix);",
          "    output.pos = mul(output.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "",
          "    return output;",
          "}",
          "//<<< VS\r",
          "\r",
          "//>>> PS\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float v = 16*imageData.SampleLevel(samLinear, input.texCoord.xyz/Size - Offset, 0);\r",
          "    float level = Window.x;\r",
          "    float size = Window.y;\r",
          "    v = clamp((v - level)/size + 0.5, 0.0, 1.0);\r",
          "    return float4(v, v, v, 1);\r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "FilePath",
      "MetaInstanceID": "3d0edc15-dec6-4f50-9d7f-0840092f772f",
      "DefaultValue": {
        "Type": "Text",
        "Value": "imagedata.raw"
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "DataSize.X",
      "MetaInstanceID": "184ee0e0-e513-434a-89e5-0e1cc4f1703a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "512"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "DataSize.Y",
      "MetaInstanceID": "d8f06060-d6fd-4833-8926-82246c7ca59a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "512"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "DataSize.Z",
      "MetaInstanceID": "e106adba-a191-4368-8c20-fc73bf6d53a0",
      "DefaultValue": {
        "Type": "Float",
        "Value": "100"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Size.X",
      "MetaInstanceID": "16c85337-3cfd-4733-bb2f-637db752444a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Size.Y",
      "MetaInstanceID": "b4a0e0d4-028e-48ea-9e83-68f7e634ad67",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Size.Z",
      "MetaInstanceID": "f55ebe00-7b77-4479-99e5-35b93cd082c4",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Offset.X",
      "MetaInstanceID": "ffe2ce2a-31ed-432b-a7a2-789a45295f8a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Offset.Y",
      "MetaInstanceID": "2cd3bf7d-40d1-43c8-a931-4bb08def1233",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Offset.Z",
      "MetaInstanceID": "b4bf27cf-14d8-4224-8d00-0b1a47b5118d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Rotate.X",
      "MetaInstanceID": "00ccce17-d70e-4700-9241-7d83546694c6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Rotate.Y",
      "MetaInstanceID": "2e51f153-dab2-4ae7-baaf-4a7e51486163",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Rotate.Z",
      "MetaInstanceID": "e7d7df8e-6d5b-421c-80e2-fb6205c6a840",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Window.Level",
      "MetaInstanceID": "b423e836-e70d-42b3-9dc3-e6a1d7a28fa4",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Window.Size",
      "MetaInstanceID": "28d85e45-f5ad-4799-9280-22d24e95082d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scene",
      "MetaInstanceID": "70d72839-6fb5-422a-ad80-4112f0786301",
      "DefaultValue": {
        "Type": "Scene",
        "Value": "Framefield.Core.Scene"
      },
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Output",
      "MetaInstanceID": "9860ff5f-50ef-4555-8222-e03eff39c584",
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "21880abb-af44-461a-bde6-67ac5ffa18df",
      "MetaID": "af6a1a59-1913-445a-8314-befc14c1cdcd",
      "Name": "LoadVolumeFunc",
      "Version": "df0e3ed1-2a63-45a0-ae7b-02a393fd8fb6",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "using SharpDX.DXGI;",
        "using System.IO;",
        "using Framefield.Core.Rendering;",
        "",
        "namespace Framefield.Core.IDaf6a1a59_1913_445a_8314_befc14c1cdcd",
        "{",
        "    public class Class_LoadVolume : FXSourceCodeFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            FilePath = 1,",
        "            DataSizeX = 2,",
        "            DataSizeY = 3,",
        "            DataSizeZ = 4,",
        "            SizeX = 5,",
        "            SizeY = 6,",
        "            SizeZ = 7,",
        "            OffsetX = 8,",
        "            OffsetY = 9,",
        "            WindowLevel = 10,",
        "            WindowSize = 11,",
        "            RotateX = 12,",
        "            RotateY = 13,",
        "            RotateZ = 14,",
        "            OffsetZ = 15,",
        "            Scene = 16",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override void Dispose() {",
        "            base.Dispose();",
        "            Utilities.DisposeObj(ref _imageData);",
        "            Utilities.DisposeObj(ref _imageDataSRV);",
        "        }",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) ",
        "        {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var FilePath = inputs[(int)InputId.FilePath].Eval(context).Text;",
        "            var DataSizeX = inputs[(int)InputId.DataSizeX].Eval(context).Value;",
        "            var DataSizeY = inputs[(int)InputId.DataSizeY].Eval(context).Value;",
        "            var DataSizeZ = inputs[(int)InputId.DataSizeZ].Eval(context).Value;",
        "            var DataSize = new Vector3(DataSizeX, DataSizeY, DataSizeZ);",
        "            var SizeX = inputs[(int)InputId.SizeX].Eval(context).Value;",
        "            var SizeY = inputs[(int)InputId.SizeY].Eval(context).Value;",
        "            var SizeZ = inputs[(int)InputId.SizeZ].Eval(context).Value;",
        "            var Size = new Vector3(SizeX, SizeY, SizeZ);",
        "            var OffsetX = inputs[(int)InputId.OffsetX].Eval(context).Value;",
        "            var OffsetY = inputs[(int)InputId.OffsetY].Eval(context).Value;",
        "            var OffsetZ = inputs[(int)InputId.OffsetZ].Eval(context).Value;",
        "            var Offset = new Vector3(OffsetX, OffsetY, OffsetZ);",
        "            var WindowLevel = inputs[(int)InputId.WindowLevel].Eval(context).Value;",
        "            var WindowSize = inputs[(int)InputId.WindowSize].Eval(context).Value;",
        "            var Window = new Vector2(WindowLevel, WindowSize);",
        "            var RotateX = inputs[(int)InputId.RotateX].Eval(context).Value;",
        "            var RotateY = inputs[(int)InputId.RotateY].Eval(context).Value;",
        "            var RotateZ = inputs[(int)InputId.RotateZ].Eval(context).Value;",
        "            var Rotate = new Vector3(RotateX, RotateY, RotateZ);",
        "            var Scene = inputs[(int)InputId.Scene];",
        "            //<<< _params",
        "",
        "            if (TryUpdateVolumeTexture(FilePath, DataSize))",
        "                Changed = true;",
        "",
        "            if (_firstEval) {",
        "                for (int i = 0; i < NumCodes(); ++i)",
        "                    Compile(i);",
        "                _firstEval = false;",
        "                Changed = true;",
        "            }",
        "",
        "            if (_imageDataSRV != null) {",
        "                var rotation = Quaternion.RotationYawPitchRoll(RotateY / 360.0f * (float)(2.0 * Math.PI),",
        "                                                               RotateX / 360.0f * (float)(2.0 * Math.PI),",
        "                                                               RotateZ / 360.0f * (float)(2.0 * Math.PI));",
        "                var rotTransform = Matrix.RotationQuaternion(rotation);",
        "",
        "                _effect.GetVariableByName(\"Size\").AsVector().Set(Size);",
        "                _effect.GetVariableByName(\"Offset\").AsVector().Set(Offset);",
        "                _effect.GetVariableByName(\"rotationMatrix\").AsMatrix().SetMatrix(rotTransform);",
        "                _effect.GetVariableByName(\"Window\").AsVector().Set(Window);",
        "                _effect.GetVariableByName(\"imageData\").AsShaderResource().SetResource(_imageDataSRV);",
        "",
        "                using (new PropertyStasher<OperatorPartContext>(context, \"Effect\")) {",
        "                    context.Effect = _effect;",
        "                    Scene.Eval(context);",
        "                }",
        "            }",
        "",
        "            return context;",
        "        }",
        "",
        "        private bool TryUpdateVolumeTexture(string filename, Vector3 size) {",
        "            if (_fileName == filename && _size == size)",
        "                return false;",
        "",
        "            Utilities.DisposeObj(ref _imageData);",
        "            Utilities.DisposeObj(ref _imageDataSRV);",
        "",
        "            try {",
        "                var immediateContext = D3DDevice.Device.ImmediateContext;",
        "",
        "                var descStaging = new Texture3DDescription() {",
        "                    BindFlags = BindFlags.None,",
        "                    Format = Format.R16_UNorm,",
        "                    Width = (int)size.X,",
        "                    Height = (int)size.Y,",
        "                    Depth = (int)size.Z,",
        "                    MipLevels = 0,",
        "                    Usage = ResourceUsage.Staging,",
        "                    OptionFlags = ResourceOptionFlags.None,",
        "                    CpuAccessFlags = CpuAccessFlags.Write",
        "                };",
        "                var imageTexStaging = new Texture3D(D3DDevice.Device, descStaging);",
        "",
        "                DataStream dataStream;",
        "                immediateContext.MapSubresource(imageTexStaging, 0, 0, MapMode.Write, SharpDX.Direct3D11.MapFlags.None, out dataStream);",
        "                using (dataStream)",
        "                {",
        "                    dataStream.Position = 0;",
        "",
        "                    var fs = new FileStream(filename, FileMode.Open);",
        "                    if (fs.Length <= dataStream.Length)",
        "                        fs.CopyTo(dataStream);",
        "                    fs.Close();",
        "                }",
        "                immediateContext.UnmapSubresource(imageTexStaging, 0);",
        "",
        "",
        "                Texture3DDescription desc = descStaging;",
        "                desc.BindFlags = BindFlags.ShaderResource;",
        "                desc.Usage = ResourceUsage.Default;",
        "                desc.CpuAccessFlags = CpuAccessFlags.None;",
        "",
        "                _imageData = new Texture3D(D3DDevice.Device, desc);",
        "                _imageDataSRV = new ShaderResourceView(D3DDevice.Device, _imageData);",
        "                immediateContext.CopyResource(imageTexStaging, _imageData);",
        "                Utilities.DisposeObj(ref imageTexStaging);",
        "",
        "                _fileName = filename;",
        "                _size = size;",
        "                return true;",
        "            }",
        "            catch (Exception) {",
        "                Logger.Error(this,\"Error loading volume {0}\", filename);",
        "            }",
        "            return false;;",
        "        }",
        "",
        "        bool _firstEval = true;",
        "        string _fileName;",
        "        Vector3 _size;",
        "        Texture3D _imageData;",
        "        ShaderResourceView _imageDataSRV;",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "21880abb-af44-461a-bde6-67ac5ffa18df",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "9860ff5f-50ef-4555-8222-e03eff39c584"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d3d27a3b-119b-4af1-952b-1963c20da4e5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "21880abb-af44-461a-bde6-67ac5ffa18df"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "3d0edc15-dec6-4f50-9d7f-0840092f772f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "21880abb-af44-461a-bde6-67ac5ffa18df"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "184ee0e0-e513-434a-89e5-0e1cc4f1703a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "21880abb-af44-461a-bde6-67ac5ffa18df"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d8f06060-d6fd-4833-8926-82246c7ca59a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "21880abb-af44-461a-bde6-67ac5ffa18df"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e106adba-a191-4368-8c20-fc73bf6d53a0",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "21880abb-af44-461a-bde6-67ac5ffa18df"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "16c85337-3cfd-4733-bb2f-637db752444a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "21880abb-af44-461a-bde6-67ac5ffa18df"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b4a0e0d4-028e-48ea-9e83-68f7e634ad67",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "21880abb-af44-461a-bde6-67ac5ffa18df"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f55ebe00-7b77-4479-99e5-35b93cd082c4",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "21880abb-af44-461a-bde6-67ac5ffa18df"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ffe2ce2a-31ed-432b-a7a2-789a45295f8a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "21880abb-af44-461a-bde6-67ac5ffa18df"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2cd3bf7d-40d1-43c8-a931-4bb08def1233",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "21880abb-af44-461a-bde6-67ac5ffa18df"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b423e836-e70d-42b3-9dc3-e6a1d7a28fa4",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "21880abb-af44-461a-bde6-67ac5ffa18df"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "28d85e45-f5ad-4799-9280-22d24e95082d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "21880abb-af44-461a-bde6-67ac5ffa18df"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "00ccce17-d70e-4700-9241-7d83546694c6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "21880abb-af44-461a-bde6-67ac5ffa18df"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2e51f153-dab2-4ae7-baaf-4a7e51486163",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "21880abb-af44-461a-bde6-67ac5ffa18df"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e7d7df8e-6d5b-421c-80e2-fb6205c6a840",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "21880abb-af44-461a-bde6-67ac5ffa18df"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b4bf27cf-14d8-4224-8d00-0b1a47b5118d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "21880abb-af44-461a-bde6-67ac5ffa18df"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "70d72839-6fb5-422a-ad80-4112f0786301",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "21880abb-af44-461a-bde6-67ac5ffa18df"
    }
  ]
}