{
  "Name": "EarlyTests",
  "_id": "18cf88a1-e750-4ac0-b731-8a87071c2529",
  "Namespace": "projects.square.research",
  "Description": "",
  "Inputs": [],
  "Outputs": [],
  "OperatorParts": [],
  "Operators": [
    {
      "Name": "ReduceNoise",
      "MetaInstanceID": "ce15c29a-095c-4e3b-9e63-8f0c806a1c80",
      "MetaID": "fadbd6c7-6479-485a-8cdd-b3892ce1f165",
      "OperatorProperties": {
        "Name": "",
        "PosX": "1130.66960849164",
        "PosY": "1239.11400862346",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "46db2506-6a86-4f46-b447-17aa6a5c01ec",
            "Type": "Text",
            "Value": [
              "//>>> _common parameters\r",
              "float4x4 objectToWorldMatrix;",
              "float4x4 worldToCameraMatrix;",
              "float4x4 projMatrix;",
              "Texture2D txDiffuse;",
              "float2 RenderTargetSize;",
              "//<<< _common parameters\r",
              "\r",
              "//>>> _parameters\r",
              "Texture2D Image;",
              "float Strength;",
              "float Size;",
              "float Contrast;",
              "//<<< _parameters\r",
              "float4x4 ViewToWorld;\r",
              " \r",
              "//>>> setup\r",
              "SamplerState samLinear\r",
              "{\r",
              "    Filter = MIN_MAG_MIP_POINT;\r",
              "    AddressU = Clamp;\r",
              "    AddressV = Clamp;\r",
              "};\r",
              "//<<< setup\r",
              "\r",
              "//>>> declarations\r",
              "struct VS_IN\r",
              "{\r",
              "    float4 pos : POSITION;\r",
              "    float2 texCoord : TEXCOORD;\r",
              "};\r",
              "\r",
              "struct PS_IN\r",
              "{\r",
              "    float4 pos : SV_POSITION;\r",
              "    float2 texCoord: TEXCOORD0;\t    \r",
              "    float3 worldTViewPos: TEXCOORD1;\r",
              "    float3 worldTViewDir: TEXCOORD2;\r",
              "};\r",
              "//<<< declarations\r",
              "\r",
              "//>>> _GS\r",
              "",
              "//<<< _GS\r",
              "\r",
              "//>>> _VS \r",
              "PS_IN VS( VS_IN input )",
              "{",
              "    PS_IN output = (PS_IN)0;",
              "",
              "    output.pos = mul(input.pos, worldToCameraMatrix);",
              "    output.pos = mul(output.pos, projMatrix);",
              "    output.texCoord = input.texCoord;",
              "",
              "    return output;",
              "}",
              "//<<< _VS\r",
              "\r",
              "//>>> PS\r",
              "float4 PS( PS_IN input ) : SV_Target\r",
              "{\r",
              "    float width, height;\r",
              "    Image.GetDimensions(width, height);\r",
              "    \r",
              "    float sx = Size / width;\r",
              "    float sy = Size / height;\r",
              "\r",
              "    float4 y1= Image.Sample(samLinear, float2(input.texCoord.x, input.texCoord.y + sy));\r",
              "    float4 y2= Image.Sample(samLinear, float2(input.texCoord.x, input.texCoord.y - sy));\r",
              "    float4 x1= Image.Sample(samLinear, float2(input.texCoord.x + sx, input.texCoord.y));\r",
              "    float4 x2= Image.Sample(samLinear, float2(input.texCoord.x - sx, input.texCoord.y)); \r",
              "    float4 c =  Image.Sample(samLinear, float2(input.texCoord.x, input.texCoord.y)); \r",
              "\r",
              "    float4 average = (y1+y2+x1+x2)*0.25;\r",
              "    float ag = (average.r + average.g + average.b)/3;\r",
              "    float cg = (c.r+c.g+c.b)/3;\r",
              "    \r",
              "    if( (ag < Contrast && cg > 1-Contrast) || (ag > Contrast && cg < 1.0-Contrast)   ) {\r",
              "        c=average;\r",
              "    }    \r",
              "    return c;    \r",
              "}\r",
              "//<<< PS\r",
              "\r",
              "//>>> _technique\r",
              "technique10 Render",
              "{",
              "    pass P0",
              "    {",
              "        SetGeometryShader( 0 );",
              "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
              "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
              "    }",
              "}",
              "//<<< _technique\r",
              ""
            ]
          },
          {
            "ID": "ff56c6af-b171-4825-98d3-63d04314d62a",
            "Type": "Image",
            "Value": [
              ""
            ]
          },
          {
            "ID": "08ba17ae-691c-4ccd-a5eb-2eb2d8ff3331",
            "Type": "Float",
            "Value": [
              "1.38"
            ]
          },
          {
            "ID": "b1b5be6c-07e9-44ad-b3a9-dffcd467efcd",
            "Type": "Float",
            "Value": [
              "1.502999"
            ]
          },
          {
            "ID": "687ffd13-710d-4463-8082-6c844f4a772c",
            "Type": "Float",
            "Value": [
              "0.4800001"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "MotionBlur",
      "MetaInstanceID": "8cebf734-8c9a-4ad6-af82-3289734c5148",
      "MetaID": "9bc662e6-9346-4bd3-9a81-bbe173205ab3",
      "OperatorProperties": {
        "Name": "",
        "PosX": "916.339110558069",
        "PosY": "1261.29476552234",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "a21cdf02-1f17-43eb-95d1-c5f24108adf1",
            "Type": "Image",
            "Value": [
              ""
            ]
          },
          {
            "ID": "8fff9174-f632-4be0-a780-1d06d0f5e90e",
            "Type": "Float",
            "Value": [
              "0.29"
            ]
          },
          {
            "ID": "3e5e3181-8052-4ae9-9272-d7de1c1bb419",
            "Type": "Float",
            "Value": [
              "1.04"
            ]
          },
          {
            "ID": "b500817e-853a-4dd3-84b8-06bc8fab11d9",
            "Type": "Float",
            "Value": [
              "9"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "TimeClip",
      "MetaInstanceID": "b3e7d0ec-556e-4264-8ad9-4570a407dcf0",
      "MetaID": "4dcda918-2e61-47df-8a61-24e9edb73d07",
      "OperatorProperties": {
        "Name": "",
        "PosX": "1193.07740149713",
        "PosY": "1190.1619659231",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "c1a978ae-8e6c-4866-8a1f-6f06ca9e073b",
            "Type": "Generic",
            "Value": [
              ""
            ]
          },
          {
            "ID": "e5125df7-71ba-403d-b8a2-370703cc374f",
            "Type": "Float",
            "Value": [
              "289.5502"
            ]
          },
          {
            "ID": "2d7f567b-3556-49af-b0ff-46fcbf00ec80",
            "Type": "Float",
            "Value": [
              "294.888"
            ]
          },
          {
            "ID": "16177efe-bc1e-4242-a9e7-583aff3f5f9b",
            "Type": "Float",
            "Value": [
              "91.32438"
            ]
          },
          {
            "ID": "76b8f048-4843-4bcf-ac3d-16f726efc8dc",
            "Type": "Float",
            "Value": [
              "104.9198"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "Layer2d",
      "MetaInstanceID": "fabee12e-387d-48fc-9da4-c2bccdf1c31e",
      "MetaID": "c6e1c4b9-28a8-41fb-a9fa-74591a1239f0",
      "OperatorProperties": {
        "Name": "#Stripes",
        "PosX": "1727.61058584545",
        "PosY": "1291.97557922596",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "558a0362-3802-4278-82b5-c5149223034b",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "00edfeb2-e957-4aae-b31e-02e855933669",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "338288cf-ed05-4316-9444-bf58077dc42b",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "ebbd3da8-4e99-4619-99da-51b9bbe0e085",
            "Type": "Float",
            "Value": [
              "1"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "Canvas",
      "MetaInstanceID": "e8ac2446-eaee-475a-9a31-525992b69eeb",
      "MetaID": "65ee8537-143f-44f1-a167-b9339fdf551e",
      "OperatorProperties": {
        "Name": "",
        "PosX": "1652.61058584544",
        "PosY": "1491.97557922594",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "592f4695-f4db-4c89-9f84-ed37e64fec12",
            "Type": "Float",
            "Value": [
              "32"
            ]
          },
          {
            "ID": "0f9f1e93-3f75-4458-916c-3d3fc8571666",
            "Type": "Float",
            "Value": [
              "32"
            ]
          },
          {
            "ID": "caf5144d-7da7-482a-8c8b-ea35c88509cc",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "daa22902-6de3-4146-bb07-0c6964872336",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "2f3b6b5e-99f8-4e3e-b115-427313d507db",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "a82fb75a-f132-4ea6-8050-ae94f586577b",
            "Type": "Float",
            "Value": [
              "1"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "EnergiePhysik",
      "MetaInstanceID": "57519acc-33eb-467b-81ab-9ed94fd5922f",
      "MetaID": "16f57db6-4a6d-48e0-a633-46e55ac20fe8",
      "OperatorProperties": {
        "Name": "",
        "PosX": "1652.61058584544",
        "PosY": "1466.97557922592",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "5ac55c8f-d6c5-43ad-bb6e-2bcab52e10ff",
            "Type": "Text",
            "Value": [
              "//>>> _common parameters\r",
              "float4x4 objectToWorldMatrix;",
              "float4x4 worldToCameraMatrix;",
              "float4x4 projMatrix;",
              "Texture2D txDiffuse;",
              "float2 RenderTargetSize;",
              "//<<< _common parameters\r",
              "\r",
              "//>>> _parameters\r",
              "float4 Color1;",
              "float4 Color2;",
              "float Minrad;",
              "float Farrad;",
              "float Scale;",
              "float StepCount;",
              "float StepSize;",
              "float3 LightPos;",
              "float2 Specular;",
              "float FogDistance;",
              "float2 AmbientOcclusion;",
              "float4 AOColor;",
              "float FogDecay;",
              "Texture2D Image;",
              "float aoSteps;",
              "float MinDist;",
              "Texture2D Image2;",
              "float3 Clamping;",
              "float2 Fold;",
              "float3 Increment;",
              "float3 Sphere;",
              "float SphereRadius;",
              "float4 BackgroundColor;",
              "float DistToColor;",
              "float4 GlowColor;",
              "float GlowStrength;",
              "//<<< _parameters\r",
              "float4x4 ViewToWorld;\r",
              " \r",
              "//>>> setup\r",
              "SamplerState samLinear\r",
              "{\r",
              "    Filter = MIN_MAG_MIP_LINEAR;\r",
              "    AddressU = Clamp;\r",
              "    AddressV = Clamp;\r",
              "};\r",
              "//<<< setup\r",
              "\r",
              "//>>> declarations\r",
              "struct VS_IN\r",
              "{\r",
              "    float4 pos : POSITION;\r",
              "    float2 texCoord : TEXCOORD;\r",
              "};\r",
              "\r",
              "struct PS_IN\r",
              "{\r",
              "    float4 pos : SV_POSITION;\r",
              "    float2 texCoord: TEXCOORD0;\t    \r",
              "    float3 worldTViewPos: TEXCOORD1;\r",
              "    float3 worldTViewDir: TEXCOORD2;\r",
              "};\r",
              "//<<< declarations\r",
              "\r",
              "//>>> _GS\r",
              "",
              "//<<< _GS\r",
              "\r",
              "//>>> VS \r",
              "PS_IN VS( VS_IN input )\r",
              "{\r",
              "    PS_IN output = (PS_IN)0;\r",
              "    input.pos = mul(input.pos, objectToWorldMatrix); \r",
              "    output.pos = mul(input.pos, worldToCameraMatrix);\r",
              "    output.pos = mul(output.pos, projMatrix);\r",
              "    output.texCoord = input.texCoord;\r",
              "\r",
              "    float4 viewTNearFragPos = float4(input.texCoord.x*2.0 - 1.0, -input.texCoord.y*2.0 + 1.0, 0.0, 1.0);\r",
              "    float4 worldTNearFragPos = mul(viewTNearFragPos, ViewToWorld);\r",
              "    worldTNearFragPos /= worldTNearFragPos.w;\r",
              "\r",
              "    float4 viewTFarFragPos = float4(input.texCoord.x*2.0 - 1.0, -input.texCoord.y*2.0 + 1.0, 1.0, 1.0);\r",
              "    float4 worldTFarFragPos = mul(viewTFarFragPos, ViewToWorld);\r",
              "    worldTFarFragPos /= worldTFarFragPos.w;\r",
              "\r",
              "    output.worldTViewDir = normalize(worldTFarFragPos.xyz - worldTNearFragPos.xyz);\r",
              "\r",
              "    output.worldTViewPos = worldTNearFragPos;\r",
              "    return output;\r",
              "}\r",
              "//<<< VS\r",
              "\r",
              "//>>> PS\r",
              "float getDistance2(float3 c)\r",
              "{\r",
              "    float sc=Scale;\t// ; scale darf nicht kleiner 1\r",
              "    float de=1;\r",
              "    float fr2=Farrad;\t// farrad*farrad\r",
              "    float mr2=Minrad;\t// ;minrad*minrad\r",
              "    float3 p=0;\r",
              "\r",
              "    int i;\r",
              "    [rollout(12)] for(i=0;i<12;i++)\r",
              "    {\r",
              "        p=sign(p)*(1-abs(abs(p)-1));\r",
              "        float r2=dot(p,p);\r",
              "        if(r2<mr2) {\r",
              "            p*=fr2/mr2;\r",
              "            de*=fr2/mr2;\r",
              "        }\r",
              "        else if(r2<fr2)\r",
              "        {\r",
              "            p*=fr2/r2;\r",
              "            de*=fr2/r2;\r",
              "        }\r",
              "        p*=sc;\r",
              "        p+=c;\r",
              "        de*=sc;\r",
              "        de+=1;\r",
              "    }\r",
              "    return(length(p)-sc+1)/de-pow(sc,1-i);\r",
              "}\r",
              "\r",
              "int iters = 8;\r",
              "\r",
              "\r",
              "float sphereD(float3 p0) {\r",
              "return length(p0+float4(Sphere.xyz,1))-SphereRadius;\r",
              "}\r",
              "\r",
              "// Compute the distance from |pos| to the Mandelbox.\r",
              "float getDistance(float3 pos) {\r",
              "\r",
              "    // precomputed constants\r",
              "    float minRad2 = clamp(Minrad, 1.0e-9, 1.0);\r",
              "    float4 scale = float4(Scale, Scale, Scale, abs(Scale)) / minRad2 ;\r",
              "    float absScalem1 = abs(Scale - 1.0);\r",
              "    float AbsScaleRaisedTo1mIters = pow(abs(Scale), float(1-iters));\r",
              "    float DIST_MULTIPLIER = StepSize;\r",
              "\r",
              "  float4 p = float4(pos,1);\r",
              "  float4 p0 = p;  // p.w is the distance estimate\r",
              "  \r",
              "\r",
              "  for (int i=0; i<iters; i++) {\r",
              "     //box folding: \r",
              "     //if (p>1) p = 2-p; else if (p<-1) p = -2-p;\r",
              "    p.xyz = abs(1+p.xyz) - p.xyz - abs(1.0-p.xyz);  // add;add;abs.add;abs.add (130.4%)\r",
              "    p.xyz = clamp(p.xyz*0.5+0.5, 0.0, 1.0) * 4.0 - 2.0 - p.xyz;  // mad.sat;mad;add (102.3%)    \r",
              "    p.xyz = clamp(p.xyz, -1.0, 1.0) * 2.0 - p.xyz;  // min;max;mad\r",
              "    \r",
              "    p.xyz = clamp(p.xyz, Clamping.x, Clamping.y) * Clamping.z - p.xyz;  // min;max;mad\r",
              "    \r",
              "\r",
              "    // sphere folding: if (r2 < minRad2) p /= minRad2; else if (r2 < 1.0) p /= r2;\r",
              "    float r2 = dot(p.xyz, p.xyz);\r",
              "    p *= clamp(max(minRad2/r2, minRad2), Fold.x, Fold.y);  // dp3,div,max.sat,mul\r",
              "    p.xyz+= float3(Increment.x,Increment.y,Increment.z);\r",
              "    // scale, translate\r",
              "    p = p*scale + p0;\r",
              "  }\r",
              "  float d=((length(p.xyz) - absScalem1) / p.w - AbsScaleRaisedTo1mIters) * DIST_MULTIPLIER;\r",
              "  \r",
              "  return max(sphereD(p0),d );\r",
              "}\r",
              "\r",
              "\r",
              "\r",
              "// Blinn-Phong shading model with rim lighting (diffuse light bleeding to the other side).\r",
              "// |normal|, |view| and |light| should be normalized.\r",
              "float3 blinn_phong(float3 normal, float3 view, float3 light, float3 diffuseColor) {\r",
              "  float3 halfLV = normalize(light + view);\r",
              "  float spe = pow(max( dot(normal, halfLV), Specular.x ), Specular.y);\r",
              "  float dif = dot(normal, light) * 0.1 + 0.15;\r",
              "  return dif*diffuseColor + spe*Color1;\r",
              "}\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "float3 getNormal(float3 p, float offset)\r",
              "{\r",
              "    float dt=.0001;\r",
              "    float3 n=float3(getDistance(p+float3(dt,0,0)),\r",
              "                    getDistance(p+float3(0,dt,0)),\r",
              "                    getDistance(p+float3(0,0,dt)))-getDistance(p);\r",
              "    return normalize(n);\r",
              "}\r",
              "\r",
              "\r",
              "float getAO(float3 aoposition, float3 aonormal, float aodistance, float aoiterations, float aofactor)\r",
              "{\r",
              "    float ao = 0.0;\r",
              "    float k = aofactor;\r",
              "    aodistance /= aoiterations;\r",
              "    for (float i=1; i < aoiterations; i += 1)\r",
              "    {\r",
              "        ao += (i * aodistance - getDistance(aoposition + aonormal * i * aodistance)) / pow(2,i);\r",
              "    }\r",
              "    return 1.0 - k * ao;\r",
              "}\r",
              "\r",
              "float4 getTexture2(float3 p, float3 n) \r",
              "{\r",
              "    float s = 1.3;\r",
              "    float dx = abs(n.x);\r",
              "    float dy = abs(n.y);\r",
              "    float dz = abs(n.z);\r",
              "    if (dx > dy  > dz) return  Image.Sample(samLinear, float2(frac(p.z*s), frac(p.y * s))); \r",
              "    if (dy > dz) return  Image.Sample(samLinear, float2(frac(p.x*s), frac(p.z * s)));\r",
              "    return  Image.Sample(samLinear, float2(frac(p.x*s), frac(p.y * s)));\r",
              "}\r",
              "\r",
              "float MAX_DIST=300;\r",
              "\r",
              "float3 surfaceColor1 = float3(0.95, 0.64, 0.1);\r",
              "float3 surfaceColor2 = float3(0.89, 0.95, 0.75);\r",
              "float3 surfaceColor3 = float3(0.55, 0.06, 0.03);\r",
              "\r",
              "// Compute the color at |pos|.\r",
              "float3 color(float3 pos) {\r",
              "  float3 p = pos, p0 = p;\r",
              "  float trap = 1.0;\r",
              "\r",
              "  for (int i=0; i<3; i++) {\r",
              "    p.xyz = clamp(p.xyz, -1.0, 1.0) * 2.0 - p.xyz;\r",
              "    float r2 = dot(p.xyz, p.xyz);\r",
              "    p *= clamp(max(Minrad/r2, Minrad), 0.0, 1.0);\r",
              "    p = p*Scale + p0.xyz;\r",
              "    trap = min(trap, r2);\r",
              "  }\r",
              "  // |c.x|: log final distance (fractional iteration count)\r",
              "  // |c.y|: spherical orbit trap at (0,0,0)\r",
              "  float2 c = clamp(float2( 0.33*log(dot(p,p))-1.0, sqrt(trap) ), 0.0, 1.0);\r",
              "\r",
              "  return lerp(lerp(surfaceColor1, surfaceColor2, c.y), surfaceColor3, c.x);\r",
              "}\r",
              "\r",
              "\r",
              "float4 PS( PS_IN input ) : SV_Target\r",
              "{\r",
              "\r",
              "\r",
              "    float4 filter= Image2.Sample(samLinear, input.texCoord);\r",
              "    //Scale*=;\r",
              "    //if(filter.r> 0.5) {\r",
              "    //    discard;\r",
              "    //}\r",
              "        //return float4(1,0,0,0);\r",
              "\r",
              "    //float3 d = normalize(input.worldTViewDir);\r",
              "    //float3 p = input.worldTViewPos ;\r",
              "\r",
              "    float3 p = input.worldTViewPos;\r",
              "    float3 dp = normalize(input.worldTViewDir);\r",
              "\r",
              "  float totalD = 0.0;\r",
              "  float D = 3.4e38;\r",
              "  float extraD = 0.0;\r",
              "  float lastD;\r",
              "\r",
              "  // Intersect the view ray with the Mandelbox using raymarching.\r",
              "  int steps;\r",
              "  for (steps=0; steps<StepCount; steps++) {\r",
              "    lastD = D;\r",
              "    D = getDistance(p + totalD * dp);\r",
              "\r",
              "    // Overstepping: have we jumped too far? Cancel last step.\r",
              "    if (extraD > 0.0 && D < extraD) {\r",
              "      totalD -= extraD;\r",
              "      extraD = 0.0;\r",
              "      D = 3.4e38;\r",
              "      steps--;\r",
              "      continue;\r",
              "    }\r",
              "\r",
              "    if (D < MinDist) break;\r",
              "\r",
              "    totalD += D;\r",
              "\r",
              "    // Overstepping is based on the optimal length of the last step.\r",
              "    totalD += extraD = 0.096 * D*(D+extraD)/lastD;\r",
              "  }\r",
              "\r",
              "  p += totalD * dp;\r",
              "\r",
              "  // Color the surface with Blinn-Phong shading, ambient occlusion and glow.\r",
              "  float3 col = BackgroundColor;\r",
              "\r",
              "  // We've got a hit or we're not sure.\r",
              "  if (D < MAX_DIST) {\r",
              "    float3 n = getNormal(p, D);\r",
              "    col = color(p);\r",
              "    //col = blinn_phong(n, -dp, normalize(input.worldTViewPos+float3(10,1,0)+dp), col);\r",
              "    col = blinn_phong(n, -dp, LightPos, col);\r",
              "    col = lerp(AOColor, col, getAO(p,n,AmbientOcclusion.x,aoSteps, AmbientOcclusion.y));\r",
              "\r",
              "    // We've gone through all steps, but we haven't hit anything.\r",
              "    // Mix in the background color.\r",
              "    if (D > MinDist) {\r",
              "      col = lerp(col, BackgroundColor, clamp(log(D/MinDist) * DistToColor, 0.0, 1.0));\r",
              "    }\r",
              "  }\r",
              "\r",
              "  // Glow is based on the number of steps.\r",
              "  col = lerp(col, GlowColor, float(steps)/float(StepCount) * GlowStrength);\r",
              "  col = lerp(col, BackgroundColor, clamp(log( length(p- input.worldTViewPos)/FogDistance), 0,1));\r",
              "\r",
              "  return float4(col, 1);\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "/*\r",
              "    float3 d = normalize(input.worldTViewDir);\r",
              "    float3 p = input.worldTViewPos ;\r",
              "    float3 sp = p;\r",
              "    float k = 1.0;\r",
              "    \r",
              "    float offset=filter.r*0.2+0.8;\r",
              "    for(int i=0;i<StepCount && abs(k)>Twirl/1000;i++)\r",
              "    {\r",
              "\r",
              "        k=getDistance(p);\r",
              "        p+=d*k;\t\r",
              "    }\r",
              "    float3 n=getNormal(p, offset);\r",
              "    //n-=  getTexture2(p,n)*1.8;\r",
              "    float h=dot(n,LightPos)*Specular.x+Specular.y;\r",
              "    float specular=pow(saturate(dot(n,normalize(normalize(sp-p)+LightPos))),FogDecay);\r",
              "    h*=FogDistance-length(p-sp);\r",
              "    float4 outColor = clamp(Color1*h,0,1)+ clamp(Color2*(1-h)*0.12+specular,0,1);\r",
              "    \r",
              "    float t = i/StepCount;\r",
              "    \r",
              "    //ambient occlusion    \r",
              "    //float ao= clamp(k*AmbientOcclusion.x*100,0,1)*AmbientOcclusion.y;    \r",
              "    float ao= getAO(p,n,AmbientOcclusion.x,aoSteps, AmbientOcclusion.y);    \r",
              "    outColor.rgb= lerp(AOColor.rgb,outColor.rgb, ao); \r",
              " \r",
              "    if(k>Farrad) {\r",
              "        outColor.rgb=0.0;\r",
              "    }\r",
              "    outColor.a=1;\r",
              "    return outColor;\r",
              "*/\r",
              "}\r",
              "//<<< PS\r",
              "\r",
              "//>>> _technique\r",
              "technique10 Render",
              "{",
              "    pass P0",
              "    {",
              "        SetGeometryShader( 0 );",
              "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
              "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
              "    }",
              "}",
              "//<<< _technique\r",
              ""
            ]
          },
          {
            "ID": "a1c31ee8-3d14-46b9-bc02-213a3426c135",
            "Type": "Float",
            "Value": [
              "0.1846807"
            ]
          },
          {
            "ID": "f15a7466-50bc-4829-b1bc-fcbd68156a31",
            "Type": "Float",
            "Value": [
              "0.3316069"
            ]
          },
          {
            "ID": "bde9a625-4e41-47b7-a43a-3be079c5ffe6",
            "Type": "Float",
            "Value": [
              "0.3195442"
            ]
          },
          {
            "ID": "d592faa5-abdc-4f55-9316-bda0695fd27b",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "0d583b5c-eaa6-4eaa-8dfc-0ee60629e75e",
            "Type": "Float",
            "Value": [
              "0.1605246"
            ]
          },
          {
            "ID": "0952d87c-0300-4cda-8e33-fac8e1456f0d",
            "Type": "Float",
            "Value": [
              "0.2976206"
            ]
          },
          {
            "ID": "2e08d1ba-dc61-4bb1-a7b3-cfc02db040bb",
            "Type": "Float",
            "Value": [
              "0.2230161"
            ]
          },
          {
            "ID": "f4d140d7-50e8-462f-9211-d35ec2b628ec",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "e7a051f3-d8da-4d07-98d9-ca916ce16795",
            "Type": "Float",
            "Value": [
              "0.71"
            ]
          },
          {
            "ID": "d0f64eff-23ea-418b-b179-16e58e8c9e27",
            "Type": "Float",
            "Value": [
              "0.85"
            ]
          },
          {
            "ID": "07a44140-3b44-4908-9d75-026ede2b843e",
            "Type": "Float",
            "Value": [
              "1.882"
            ]
          },
          {
            "ID": "90ef2441-bd59-42a2-9095-333e777868aa",
            "Type": "Float",
            "Value": [
              "20.3"
            ]
          },
          {
            "ID": "38da14cb-768d-4a0c-b7c2-82796822e80e",
            "Type": "Float",
            "Value": [
              "0.9689499"
            ]
          },
          {
            "ID": "10069a68-f2ac-47e8-9789-ae59c2719fa4",
            "Type": "Float",
            "Value": [
              "9.300001"
            ]
          },
          {
            "ID": "c23edb6c-a167-4375-bc81-afe06f0d0cf7",
            "Type": "Float",
            "Value": [
              "-2.514942"
            ]
          },
          {
            "ID": "e1a71bb6-d666-40c5-b7cc-17afcc238026",
            "Type": "Float",
            "Value": [
              "0.8999996"
            ]
          },
          {
            "ID": "336da307-da53-4fc7-a21b-b2b665c039b7",
            "Type": "Float",
            "Value": [
              "0.2310002"
            ]
          },
          {
            "ID": "15a42d56-dda4-4e74-afab-aff97b633899",
            "Type": "Float",
            "Value": [
              "-0.01999989"
            ]
          },
          {
            "ID": "4084070e-bbf2-4447-ab21-c1e0b29308a4",
            "Type": "Float",
            "Value": [
              "-4.969999"
            ]
          },
          {
            "ID": "97d4a5a2-aa1f-4130-be10-8d968e545264",
            "Type": "Float",
            "Value": [
              "0.07599899"
            ]
          },
          {
            "ID": "eb225795-4483-423c-8341-7bcff5029dbd",
            "Type": "Float",
            "Value": [
              "0.8299999"
            ]
          },
          {
            "ID": "79484dbc-5f28-4cef-95a9-b365271f25ca",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "adc7b129-06b8-427e-88b7-d93bfd0d4d7b",
            "Type": "Float",
            "Value": [
              "0.03879701"
            ]
          },
          {
            "ID": "240155cc-2225-4bb1-a5ce-4330f60f75dc",
            "Type": "Float",
            "Value": [
              "0.008714487"
            ]
          },
          {
            "ID": "497dd0f6-a508-48ab-93ac-31d085aa0df5",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "e6fd515e-e24e-4c25-8692-830b0c23bee2",
            "Type": "Float",
            "Value": [
              "8.9"
            ]
          },
          {
            "ID": "8ff0ee70-f60c-40fa-ac10-987b2fcb97c9",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "c7d1b59a-e8fa-49b1-86e7-568342b0a0d2",
            "Type": "Float",
            "Value": [
              "2.981003"
            ]
          },
          {
            "ID": "39efe0cb-565a-40af-84f4-a1669d3d6690",
            "Type": "Image",
            "Value": [
              ""
            ]
          },
          {
            "ID": "f8d4cf91-5e61-4dda-8864-549641893a1d",
            "Type": "Float",
            "Value": [
              "-1"
            ]
          },
          {
            "ID": "c3901c00-b1f6-484e-82da-759a242b76d7",
            "Type": "Float",
            "Value": [
              "0.39"
            ]
          },
          {
            "ID": "f3242327-e6bc-49ec-be8d-e69f76b066ea",
            "Type": "Float",
            "Value": [
              "1.16"
            ]
          },
          {
            "ID": "f91f5271-89a4-4c01-a79c-46a35be3255f",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "d30a6ac6-e177-4ae6-8ebe-a9c66771e526",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "0126f17b-627e-4327-8a2d-19935c6c2c49",
            "Type": "Float",
            "Value": [
              "0.076"
            ]
          },
          {
            "ID": "b6540290-162f-4a35-8d56-ff1492be8539",
            "Type": "Float",
            "Value": [
              "0.04"
            ]
          },
          {
            "ID": "b575c932-5dfa-482b-be93-8dde9a29dc7f",
            "Type": "Float",
            "Value": [
              "-0.75"
            ]
          },
          {
            "ID": "58378943-6629-4412-be32-ad072ff46a7a",
            "Type": "Float",
            "Value": [
              "-2.2"
            ]
          },
          {
            "ID": "f3c6473e-636c-4f29-9513-89c7fc443f37",
            "Type": "Float",
            "Value": [
              "-1.65"
            ]
          },
          {
            "ID": "afd07910-50e7-4695-b7ac-d6c42b4e0b83",
            "Type": "Float",
            "Value": [
              "0.26"
            ]
          },
          {
            "ID": "a384769b-fb63-44b9-8d8e-2679bc0a8628",
            "Type": "Float",
            "Value": [
              "6.499996"
            ]
          },
          {
            "ID": "8c097519-c755-4c94-9256-ec27827b5961",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "e6f290c3-7bae-4d9d-be4f-caeca035af5a",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "14227324-d98f-468d-bc83-70254f968cd7",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "1cd4a51b-6ed1-440c-8cc2-888608cddc3a",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "4f0de180-1f72-4373-ba53-3a1df8a8c37e",
            "Type": "Float",
            "Value": [
              "-1.3"
            ]
          },
          {
            "ID": "fcf54fd9-f993-490e-986c-2b415cd2042d",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "0bb7a8f0-e8e2-45f2-a00b-9dc093e1a3bb",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "90067ceb-8103-4682-bbb5-0011381529cf",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "f991d26c-c47f-4426-b5f8-ee9c5cb78920",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "bc53a0a6-6529-47be-a438-330d7f93f1ed",
            "Type": "Float",
            "Value": [
              "5.4"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "Layer2d",
      "MetaInstanceID": "566812ed-c186-402a-9b18-246a95550581",
      "MetaID": "c6e1c4b9-28a8-41fb-a9fa-74591a1239f0",
      "OperatorProperties": {
        "Name": "",
        "PosX": "1652.61058584544",
        "PosY": "1441.97557922594",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "558a0362-3802-4278-82b5-c5149223034b",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "00edfeb2-e957-4aae-b31e-02e855933669",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "338288cf-ed05-4316-9444-bf58077dc42b",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "ebbd3da8-4e99-4619-99da-51b9bbe0e085",
            "Type": "Float",
            "Value": [
              "1"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "Camera",
      "MetaInstanceID": "b1c552e7-eacc-442b-affe-582f84b761c8",
      "MetaID": "43403a8d-9c87-414a-89e2-9393b87d9e47",
      "OperatorProperties": {
        "Name": "",
        "PosX": "1652.61058584544",
        "PosY": "1416.97557922592",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "85c9b855-49ac-4e01-a28f-6e78623790e6",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "af457538-0d01-44c1-8517-6cc44cf9139a",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "da7097f3-8251-4dcc-8c6a-0efdb78c3a30",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "796f5b32-395f-4d8c-bce2-4c3c69ca7d7b",
            "Type": "Float",
            "Value": [
              "-1"
            ]
          },
          {
            "ID": "f8cfff94-5eac-4970-a093-2398cbe1811d",
            "Type": "Float",
            "Value": [
              "0.1"
            ]
          },
          {
            "ID": "e6b3f27b-b21e-429b-99fb-f1e591b672ce",
            "Type": "Float",
            "Value": [
              "1000"
            ]
          },
          {
            "ID": "0ccdda43-9ffb-4e32-9056-13b081866cfc",
            "Type": "Float",
            "Value": [
              "45"
            ]
          },
          {
            "ID": "e56ef057-a4c7-46a1-a6a0-6dbf76eeafcb",
            "Type": "Float",
            "Value": [
              "0"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "RenderToImageNoAA",
      "MetaInstanceID": "07e01411-c80b-46d5-a166-7f0eb30e286d",
      "MetaID": "f8193223-7a2b-4680-a391-9f2a92e2c995",
      "OperatorProperties": {
        "Name": "",
        "PosX": "1652.61058584548",
        "PosY": "1391.97557922595",
        "Width": "175",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "c19111a6-ae13-4e37-97be-7c000b2178b3",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "1b01205d-5de2-418e-a4c8-39ae8bbf6d04",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "1668bd55-1e2c-4135-a643-a4074c24d3fe",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "ec11fe2f-74bd-43f7-a175-665bba626442",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "a9e8898a-d89e-4dd3-8d1f-fb35ad97cb32",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "5dbfca62-73f9-43ad-ab02-707d3f84912d",
            "Type": "Float",
            "Value": [
              "0"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "GaussBlur",
      "MetaInstanceID": "4e050cd4-2e82-417a-b9b2-bc750106760f",
      "MetaID": "61560c16-3643-426a-ade5-f8e33ef51e78",
      "OperatorProperties": {
        "Name": "",
        "PosX": "1727.61058584545",
        "PosY": "1366.97557922596",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "08a555a3-b28d-4830-aeb3-eaac33c50e69",
            "Type": "Float",
            "Value": [
              "-0.03000001"
            ]
          },
          {
            "ID": "a4d48e86-c687-4533-8d09-5fb5682a3456",
            "Type": "Float",
            "Value": [
              "2.399999"
            ]
          },
          {
            "ID": "9d6b3b96-87f8-4959-9786-3da31b481a0f",
            "Type": "Float",
            "Value": [
              "16"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "BlendImagesAdd",
      "MetaInstanceID": "f6009268-7f50-4de2-a03e-4cca9ee25a15",
      "MetaID": "65ef8dd3-1075-4e0e-b83f-8e083e027099",
      "OperatorProperties": {
        "Name": "",
        "PosX": "1652.61058584545",
        "PosY": "1341.97557922595",
        "Width": "175",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "35d31711-3711-4174-9fee-20cdfadb1276",
            "Type": "Text",
            "Value": [
              "//>>> _common parameters\r",
              "float4x4 objectToWorldMatrix;",
              "float4x4 worldToCameraMatrix;",
              "float4x4 projMatrix;",
              "Texture2D txDiffuse;",
              "float2 RenderTargetSize;",
              "//<<< _common parameters\r",
              "\r",
              "//>>> _parameters\r",
              "Texture2D Image1;",
              "Texture2D Image2;",
              "//<<< _parameters\r",
              "float4x4 ViewToWorld;\r",
              " \r",
              "//>>> setup\r",
              "SamplerState samNearest\r",
              "{\r",
              "    Filter = MIN_MAG_MIP_POINT;\r",
              "    AddressU = Clamp;\r",
              "    AddressV = Clamp;\r",
              "};\r",
              "//<<< setup\r",
              "\r",
              "//>>> declarations\r",
              "struct VS_IN\r",
              "{\r",
              "    float4 pos : POSITION;\r",
              "    float2 texCoord : TEXCOORD;\r",
              "};\r",
              "\r",
              "struct PS_IN\r",
              "{\r",
              "    float4 pos : SV_POSITION;\r",
              "    float2 texCoord: TEXCOORD0;\t    \r",
              "    float3 worldTViewPos: TEXCOORD1;\r",
              "    float3 worldTViewDir: TEXCOORD2;\r",
              "};\r",
              "//<<< declarations\r",
              "\r",
              "//>>> _GS\r",
              "",
              "//<<< _GS\r",
              "\r",
              "//>>> _VS \r",
              "PS_IN VS( VS_IN input )",
              "{",
              "    PS_IN output = (PS_IN)0;",
              "",
              "    output.pos = mul(input.pos, worldToCameraMatrix);",
              "    output.pos = mul(output.pos, projMatrix);",
              "    output.texCoord = input.texCoord;",
              "",
              "    return output;",
              "}",
              "//<<< _VS\r",
              "\r",
              "//>>> PS\r",
              "float4 PS( PS_IN input ) : SV_Target\r",
              "{\r",
              "    float4 col1=Image1.Sample(samNearest, input.texCoord); \r",
              "    float4 col2=Image2.Sample(samNearest, input.texCoord);       \r",
              "    return float4(col1.rgb+col2.rgb,1);\r",
              "    //return col1+col2;\r",
              "    \r",
              "}\r",
              "//<<< PS\r",
              "\r",
              "//>>> _technique\r",
              "technique10 Render",
              "{",
              "    pass P0",
              "    {",
              "        SetGeometryShader( 0 );",
              "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
              "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
              "    }",
              "}",
              "//<<< _technique\r",
              ""
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "ChannelMixer",
      "MetaInstanceID": "932f6abb-0c77-4ab8-a580-499cd211c3f6",
      "MetaID": "d18c4dd5-41b7-4b21-a23b-8b711c124eb8",
      "OperatorProperties": {
        "Name": "",
        "PosX": "1727.61058584545",
        "PosY": "1316.97557922595",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "6539e55c-15c3-454e-9a02-53013b27490e",
            "Type": "Float",
            "Value": [
              "0.54"
            ]
          },
          {
            "ID": "e00c7d52-e012-4f17-93c2-6d08e3708a59",
            "Type": "Float",
            "Value": [
              "0.3"
            ]
          },
          {
            "ID": "4a8a6485-dd61-43ff-9a39-730e6c6a9545",
            "Type": "Float",
            "Value": [
              "0.15"
            ]
          },
          {
            "ID": "e3483e4d-2875-4e03-9d6d-160224b01df7",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "3f95edff-005f-479d-b1a0-c85bdb0fe6a4",
            "Type": "Float",
            "Value": [
              "0.41"
            ]
          },
          {
            "ID": "b07cb0ba-647a-4f0e-942d-7d1107b0bf90",
            "Type": "Float",
            "Value": [
              "0.45"
            ]
          },
          {
            "ID": "1333a7c7-5855-4b8b-abfb-310418ec50da",
            "Type": "Float",
            "Value": [
              "0.49"
            ]
          },
          {
            "ID": "996b4e3c-7182-4394-9b3a-019fabf71c13",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "1cb17929-e72b-4ec1-9567-beb9a6ce7e67",
            "Type": "Float",
            "Value": [
              "0.3"
            ]
          },
          {
            "ID": "edf88db7-665e-42d6-89c1-4ab95d4ee09a",
            "Type": "Float",
            "Value": [
              "0.3"
            ]
          },
          {
            "ID": "555e6e93-f4e2-4fc8-a71f-3ec42c155272",
            "Type": "Float",
            "Value": [
              "0.84"
            ]
          },
          {
            "ID": "617a0b1d-d2b1-4a67-8037-6087ee907db9",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "6e9b29db-8da9-4762-b51d-15dba6e359e7",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "212a747d-17e7-4318-a589-6a8a3a3fdef7",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "3d4bb1c4-882e-427f-ac6e-db61560a58a0",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "c3ffc190-45fd-4616-be32-61d88f3ddc31",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "fc57f8b7-0df9-4c72-a2ba-ef604e9206dd",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "4d08d264-aca0-45a5-94cf-b5d59763b4b3",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "4d45236e-99a4-4e8c-b2ba-7d79f5f2daae",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "280b3505-b285-4f12-ad19-97b872fa1991",
            "Type": "Float",
            "Value": [
              "0"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "Camera",
      "MetaInstanceID": "541f8621-0ccf-4b07-a403-6e8b7a99794e",
      "MetaID": "43403a8d-9c87-414a-89e2-9393b87d9e47",
      "OperatorProperties": {
        "Name": "",
        "PosX": "1616.23844200091",
        "PosY": "1215.56809891151",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "810e1039-99f0-401c-a106-3e87bd2811fb",
            "Type": "Float",
            "Value": [
              "3.664105"
            ]
          },
          {
            "ID": "465c0f09-2564-4d74-97e5-f16e4a168bcf",
            "Type": "Float",
            "Value": [
              "-0.2579042"
            ]
          },
          {
            "ID": "db7fa71f-f8fd-4c13-b1a7-716a32ddb7c5",
            "Type": "Float",
            "Value": [
              "3.599703"
            ]
          },
          {
            "ID": "cd55616a-d11d-4b9b-ad6d-6071cac5e87b",
            "Type": "Float",
            "Value": [
              "-4.31096"
            ]
          },
          {
            "ID": "28827d15-597c-4214-8be9-72762d229578",
            "Type": "Float",
            "Value": [
              "1.112127"
            ]
          },
          {
            "ID": "7dcec0b7-d396-406c-9291-c6a82a371e47",
            "Type": "Float",
            "Value": [
              "-1.518432"
            ]
          },
          {
            "ID": "85c9b855-49ac-4e01-a28f-6e78623790e6",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "af457538-0d01-44c1-8517-6cc44cf9139a",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "da7097f3-8251-4dcc-8c6a-0efdb78c3a30",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "796f5b32-395f-4d8c-bce2-4c3c69ca7d7b",
            "Type": "Float",
            "Value": [
              "-1"
            ]
          },
          {
            "ID": "f8cfff94-5eac-4970-a093-2398cbe1811d",
            "Type": "Float",
            "Value": [
              "0.1"
            ]
          },
          {
            "ID": "e6b3f27b-b21e-429b-99fb-f1e591b672ce",
            "Type": "Float",
            "Value": [
              "1000"
            ]
          },
          {
            "ID": "0ccdda43-9ffb-4e32-9056-13b081866cfc",
            "Type": "Float",
            "Value": [
              "63"
            ]
          },
          {
            "ID": "e56ef057-a4c7-46a1-a6a0-6dbf76eeafcb",
            "Type": "Float",
            "Value": [
              "0"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "Layer2d",
      "MetaInstanceID": "64158800-7831-43cc-9f92-b11e824322f3",
      "MetaID": "c6e1c4b9-28a8-41fb-a9fa-74591a1239f0",
      "OperatorProperties": {
        "Name": "",
        "PosX": "1616.23844200091",
        "PosY": "1240.56809891151",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "558a0362-3802-4278-82b5-c5149223034b",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "00edfeb2-e957-4aae-b31e-02e855933669",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "338288cf-ed05-4316-9444-bf58077dc42b",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "ebbd3da8-4e99-4619-99da-51b9bbe0e085",
            "Type": "Float",
            "Value": [
              "1"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "StillLogoDF",
      "MetaInstanceID": "388fa374-fa98-43e5-b3ef-b168d0fe2d69",
      "MetaID": "481939c8-42d5-4808-bbaf-f2eff0893797",
      "OperatorProperties": {
        "Name": "Cubes",
        "PosX": "1616.23844200092",
        "PosY": "1265.56809891152",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "79994f7d-5d4c-40eb-b043-efec2ef2b05c",
            "Type": "Text",
            "Value": [
              "//>>> _common parameters\r",
              "float4x4 objectToWorldMatrix;",
              "float4x4 worldToCameraMatrix;",
              "float4x4 projMatrix;",
              "Texture2D txDiffuse;",
              "float2 RenderTargetSize;",
              "//<<< _common parameters\r",
              "\r",
              "//>>> _parameters\r",
              "float Minrad;",
              "float Scale;",
              "float3 Clamping;",
              "float2 Fold;",
              "float3 Increment;",
              "float MaxSteps;",
              "float StepSize;",
              "float MinDistance;",
              "float MaxDistance;",
              "float DistToColor;",
              "float4 Surface1;",
              "float4 Surface2;",
              "float4 Surface3;",
              "float4 Diffuse;",
              "float4 Specular;",
              "float2 Spec;",
              "float4 Glow;",
              "float4 AmbientOcclusion;",
              "float AODistance;",
              "float4 Background;",
              "float Fog;",
              "float3 LightPos;",
              "float3 SpherePos;",
              "float SphereRadius;",
              "//<<< _parameters\r",
              "float4x4 ViewToWorld;\r",
              " \r",
              "//>>> setup\r",
              "SamplerState samLinear\r",
              "{\r",
              "    Filter = MIN_MAG_MIP_LINEAR;\r",
              "    AddressU = Clamp;\r",
              "    AddressV = Clamp;\r",
              "};\r",
              "//<<< setup\r",
              "\r",
              "//>>> declarations\r",
              "struct VS_IN\r",
              "{\r",
              "    float4 pos : POSITION;\r",
              "    float2 texCoord : TEXCOORD;\r",
              "};\r",
              "\r",
              "struct PS_IN\r",
              "{\r",
              "    float4 pos : SV_POSITION;\r",
              "    float2 texCoord: TEXCOORD0;\t    \r",
              "    float3 worldTViewPos: TEXCOORD1;\r",
              "    float3 worldTViewDir: TEXCOORD2;\r",
              "};\r",
              "//<<< declarations\r",
              "\r",
              "//>>> _GS\r",
              "",
              "//<<< _GS\r",
              "\r",
              "//>>> VS \r",
              "PS_IN VS( VS_IN input )\r",
              "{\r",
              "    PS_IN output = (PS_IN)0;\r",
              "    input.pos = mul(input.pos, objectToWorldMatrix); \r",
              "    output.pos = mul(input.pos, worldToCameraMatrix);\r",
              "    output.pos = mul(output.pos, projMatrix);\r",
              "    output.texCoord = input.texCoord;\r",
              "\r",
              "    float4 viewTNearFragPos = float4(input.texCoord.x*2.0 - 1.0, -input.texCoord.y*2.0 + 1.0, 0.0, 1.0);\r",
              "    float4 worldTNearFragPos = mul(viewTNearFragPos, ViewToWorld);\r",
              "    worldTNearFragPos /= worldTNearFragPos.w;\r",
              "\r",
              "    float4 viewTFarFragPos = float4(input.texCoord.x*2.0 - 1.0, -input.texCoord.y*2.0 + 1.0, 1.0, 1.0);\r",
              "    float4 worldTFarFragPos = mul(viewTFarFragPos, ViewToWorld);\r",
              "    worldTFarFragPos /= worldTFarFragPos.w;\r",
              "\r",
              "    output.worldTViewDir = normalize(worldTFarFragPos.xyz - worldTNearFragPos.xyz);\r",
              "\r",
              "    output.worldTViewPos = worldTNearFragPos;\r",
              "    return output;\r",
              "}\r",
              "//<<< VS\r",
              "\r",
              "//>>> PS\r",
              "\r",
              "\r",
              "float dSphere(float3 p0) {\r",
              "    return length(p0+float4(SpherePos.xyz,1))-SphereRadius;\r",
              "}\r",
              "\r",
              "float udCubes(float3 p) {\r",
              "    float3 b= float3(1,10,0.2);\r",
              "    float3 c= float3(SpherePos.x,SpherePos.y,SpherePos.z);\r",
              "    float3 q = fmod(p,c)-0.5*c;\r",
              "    float3  di = abs(p) - b;\r",
              "    //float mc = maxcomp(di);\r",
              "    //return min(mc,length(max(di,0.0)));  \r",
              "    float rad=SphereRadius;\r",
              "    return length( max( abs(q) - b + float3(rad,rad,rad), 0.0 ) ) - rad;\r",
              "    //return length(max(abs(p)-b,0.0));\r",
              "    \r",
              "}\r",
              "\r",
              "float BOX_RADIUS= 0.03;\r",
              "float dBox(float3 p, float3 b) {\r",
              "    return length( max( abs(p) - b + float3(BOX_RADIUS,BOX_RADIUS,BOX_RADIUS), 0.0 ) ) - BOX_RADIUS;\r",
              "}\r",
              "\r",
              "float dRotatedPlanes(float3 p, float frequency) {\r",
              "    float angle= SphereRadius;\r",
              "    float3 pRotated= float3(p.x * cos(angle) - p.y * sin(angle), \r",
              "                            p.x * sin(angle) + p.y * cos(angle),\r",
              "                            p.z);\r",
              "    return sin(pRotated.x * frequency )-0.4;\r",
              "}\r",
              "\r",
              "\r",
              "float3 H_BAR=float3(1, 0.2, 0.2);\r",
              "float3 I_BAR=float3(0.2, 1.0, 0.2);\r",
              "float3 S_BAR=float3(0.2, 0.5, 0.2);\r",
              "\r",
              "float mod (float a, float b) {\r",
              "    return  a - b * floor(a/b);\r",
              "}\r",
              "\r",
              "float maxcomp(float3 v) {\r",
              "    if(v.x > v.y && v.x > v.z) return v.x;\r",
              "    if(v.y > v.z) return v.y;\r",
              "    return v.z;\r",
              "}\r",
              "\r",
              "float sdBox( float3 p, float3 b )\r",
              "{\r",
              "  float3  di = abs(p) - b;\r",
              "  float mc = maxcomp(di);\r",
              "  return min(mc,length(max(di,0.0)));\r",
              "}\r",
              "\r",
              "float sdBox2(float2 p, float2 b) {\r",
              "  float2  di = abs(p) - b;\r",
              "  float mc = max(di.x, di.y);\r",
              "  return min(mc,length(max(di,0.0)));\r",
              "}\r",
              "\r",
              "float sdCross( in float3 p, float d )\r",
              "{\r",
              "  float da = sdBox2(p.xy, float2(d, 1.0));\r",
              "  float db = sdBox2(p.yz,float2(d, 1.0));\r",
              "  float dc = sdBox2(p.zx,float2(d, 1.0));\r",
              "  return min(da,min(db,dc));\r",
              "}\r",
              "\r",
              "\r",
              "float dStillLogo(float3 p) {\r",
              "    p+=SpherePos;\r",
              "    float d;\r",
              "    \r",
              "    d    =  dBox(p- float3(-4,-0.8,0), H_BAR);\r",
              "    d=min(d,dBox(p- float3(-4,0,0), H_BAR));\r",
              "    d=min(d,dBox(p- float3(-4,+0.80,0), H_BAR));    \r",
              "    d=min(d,dBox(p- float3(-4.8,+0.40,0), S_BAR));    \r",
              "    d=min(d,dBox(p- float3(-3.2,-0.40,0), S_BAR));    \r",
              "    \r",
              "    d=min(d,dBox(p- float3(-1.5,+0.80,0), H_BAR));    \r",
              "    d=min(d,dBox(p- float3(-1.5, 0,0), I_BAR));    \r",
              "    \r",
              "    d=min(d,dBox(p- float3(0, 0,0), I_BAR));    \r",
              "    \r",
              "    d=min(d,dBox(p- float3(+0.7, 0,0), I_BAR));  \r",
              "    d=min(d,dBox(p- float3(+1.5,-0.80,0), H_BAR));    \r",
              "    \r",
              "    d=min(d,dBox(p- float3(+3., 0,0), I_BAR));  \r",
              "    d=min(d,dBox(p- float3(+4,-0.80,0), H_BAR));    \r",
              "    \r",
              "    return d;\r",
              "}\r",
              "\r",
              "float3 rep(float3 p, float3 c) {\r",
              "    return float3( \r",
              "            mod(p.x,c.x),  \r",
              "            mod(p.y,c.y), \r",
              "            mod(p.z,c.z)) - 0.5*c;\r",
              "    \r",
              "\r",
              "}\r",
              "\r",
              "float dRepeatedXBars(float3 p, float3 r, float h, float w) {\r",
              "    float3 p1= rep(p, r);\r",
              "    return sdBox2(p1.xy, float2(h, w));;\r",
              "}\r",
              "\r",
              "float dRepeatedYBars(float3 p, float3 r, float h, float w) {\r",
              "    float3 p1= rep(p, r);\r",
              "    return sdBox2(p1.xz, float2(h, w));;\r",
              "}\r",
              "float dRepeatedZBars(float3 p, float3 r, float h, float w) {\r",
              "    float3 p1= rep(p, r);\r",
              "    return sdBox2(p1.yz, float2(h, w));;\r",
              "}\r",
              "\r",
              "\r",
              "int iters = 6;\r",
              "\r",
              "// Compute the distance from |pos| to the Mandelbox.\r",
              "float sdMandelBox(float3 pos) {\r",
              "    float4 pN = float4(pos,1);\r",
              "    // precomputed constants\r",
              "    float minRad2 = clamp(Minrad, 1.0e-9, 1.0);\r",
              "    float4 scale = float4(Scale, Scale, Scale, abs(Scale)) / minRad2 ;\r",
              "    float absScalem1 = abs(Scale - 1.0);\r",
              "    float AbsScaleRaisedTo1mIters = pow(abs(Scale), float(1-iters));\r",
              "    float DIST_MULTIPLIER = StepSize;\r",
              "\r",
              "    float4 p = float4(pos,1);\r",
              "    float4 p0 = p;  // p.w is the distance estimate\r",
              "  \r",
              "\r",
              "  for (int i=0; i<iters; i++) {\r",
              "     //box folding: \r",
              "     //if (p>1) p = 2-p; else if (p<-1) p = -2-p;\r",
              "    p.xyz = abs(1+p.xyz) - p.xyz - abs(1.0-p.xyz);  // add;add;abs.add;abs.add (130.4%)\r",
              "    //p.xyz = clamp(p.xyz*0.5+0.5, 0.0, 1.0) * 4.0 - 2.0 - p.xyz;  // mad.sat;mad;add (102.3%)    \r",
              "    //p.xyz = clamp(p.xyz, -1.0, 1.0) * 2.0 - p.xyz;  // min;max;mad    \r",
              "    p.xyz = clamp(p.xyz, Clamping.x, Clamping.y) * Clamping.z - p.xyz;  // min;max;mad\r",
              "    \r",
              "\r",
              "    // sphere folding: if (r2 < minRad2) p /= minRad2; else if (r2 < 1.0) p /= r2;\r",
              "    float r2 = dot(p.xyz, p.xyz);\r",
              "    p *= clamp(max(minRad2/r2, minRad2), Fold.x, Fold.y);  // dp3,div,max.sat,mul\r",
              "    p.xyz+= float3(Increment.x,Increment.y,Increment.z);\r",
              "    // scale, translate\r",
              "    p = p*scale + p0;\r",
              "  }\r",
              "  float d=((length(p.xyz) - absScalem1) / p.w - AbsScaleRaisedTo1mIters) * DIST_MULTIPLIER;\r",
              "  return d;\r",
              "  //d=0.1;\r",
              "  //return max(udCubes(p0),d );\r",
              "  //return max( udCubes(p0), dStillLogo(p0));\r",
              "  //return min(dStillLogo(pN), d);\r",
              "}\r",
              "\r",
              "\r",
              "\r",
              "float getDistance(float3 p) {\r",
              "    //float dPlanes = dRotatedPlanes(p, 5);\r",
              "    //float dColumns= dBox( float3( mod(p.x,0),mod(p.y,3.2),mod(p.z,2))  - float3( 1,0,0), float3(10.5,2.5,0.5));\r",
              "    \r",
              "    //return max(dPlanes , dColumns);\r",
              "    //return dPlanes;\r",
              "    //return max(dPlanes, dBox(p, float3(4,4,4)));\r",
              "    //p= float3( mod(p.x,3),  mod(p.y,5), mod(p.z,6));\r",
              "    //p= rep(p, float3(SpherePos.x/p.y,SpherePos.y*p.x,SpherePos.z*p.x/p.y));\r",
              "    float3 p1= rep(p, float3(SpherePos.x,SpherePos.y, SpherePos.z));\r",
              "    float dBars= sdCross(p1, float3(20,16,7));\r",
              "    \r",
              "    //float3 p2= rep(p, float3(2,10, 1));\r",
              "    //float dBox= sdBox(p2, float3(1,10,14));\r",
              "    float d=10000;\r",
              "    \r",
              "    \r",
              "    //d= max(d, sdBox(p, SpherePos)); //limit to big block\r",
              "    d=min(d,sdMandelBox(p));\r",
              "    d= max(d, dRepeatedYBars(p, 0.2, 0.72,1.8));  //big blocks\r",
              "    //d= min(d, dSphere(p));\r",
              "    \r",
              "    // surface ace offeset\r",
              "    //d+= clamp(dRepeatedYBars(p, SpherePos, 0.1,1) , \r",
              "    //    0,0.001);\r",
              "        \r",
              "    d+= clamp( sdBox(\r",
              "                   rep(p,  float3(0.22, 0.23, 0.46)), \r",
              "                    float3(0.1, 0.1, 0.2)) , \r",
              "         0,0.006);\r",
              "    \r",
              "    //streetx\r",
              "    d= min(d, dRepeatedXBars(p, float3(5.1,1.1,0.1) , 0.05,0.01));\r",
              "    d= min(d, dRepeatedZBars(p - float3(10.4,0.30,3.0) , float3(4.1,2.1,3.1) , 0.05,0.01));\r",
              "    \r",
              "    d= min(d, sdBox( p+float3(0,7,0), float3(1000,1,1000)));\r",
              "    return d;\r",
              "    \r",
              "}\r",
              "\r",
              "\r",
              "// Blinn-Phong shading model with rim lighting (diffuse light bleeding to the other side).\r",
              "// |normal|, |view| and |light| should be normalized.\r",
              "float3 blinn_phong(float3 normal, float3 view, float3 light, float3 diffuseColor) {\r",
              "  float3 halfLV = normalize(light + view);\r",
              "  float spe = pow(max( dot(normal, halfLV), Spec.x ), Spec.y);\r",
              "  float dif = dot(normal, light) * 0.1 + 0.15;\r",
              "  return dif*diffuseColor + spe*Specular;\r",
              "}\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "float3 getNormal(float3 p, float offset)\r",
              "{\r",
              "    float dt=.0001;\r",
              "    float3 n=float3(getDistance(p+float3(dt,0,0)),\r",
              "                    getDistance(p+float3(0,dt,0)),\r",
              "                    getDistance(p+float3(0,0,dt)))-getDistance(p);\r",
              "    return normalize(n);\r",
              "}\r",
              "\r",
              "\r",
              "float getAO(float3 aoposition, float3 aonormal, float aodistance, float aoiterations, float aofactor)\r",
              "{\r",
              "    float ao = 0.0;\r",
              "    float k = aofactor;\r",
              "    aodistance /= aoiterations;\r",
              "    for (float i=1; i < 4; i += 1)\r",
              "    {\r",
              "        ao += (i * aodistance - getDistance(aoposition + aonormal * i * aodistance)) / pow(2,i);\r",
              "    }\r",
              "    return 1.0 - k * ao;\r",
              "}\r",
              "/*\r",
              "float4 getTexture2(float3 p, float3 n) \r",
              "{\r",
              "    float s = 1.3;\r",
              "    float dx = abs(n.x);\r",
              "    float dy = abs(n.y);\r",
              "    float dz = abs(n.z);\r",
              "    if (dx > dy  > dz) return  Image.Sample(samLinear, float2(frac(p.z*s), frac(p.y * s))); \r",
              "    if (dy > dz) return  Image.Sample(samLinear, float2(frac(p.x*s), frac(p.z * s)));\r",
              "    return  Image.Sample(samLinear, float2(frac(p.x*s), frac(p.y * s)));\r",
              "}*/\r",
              "\r",
              "float MAX_DIST=300;\r",
              "\r",
              "float3 surfaceColor1 = float3(0.95, 0.64, 0.1);\r",
              "float3 surfaceColor2 = float3(0.89, 0.95, 0.75);\r",
              "float3 surfaceColor3 = float3(0.55, 0.06, 0.03);\r",
              "\r",
              "// Compute the color at |pos|.\r",
              "float3 color(float3 pos) {\r",
              "  float3 p = pos, p0 = p;\r",
              "  float trap = 1.0;\r",
              "\r",
              "  for (int i=0; i<3; i++) {\r",
              "    p.xyz = clamp(p.xyz, -1.0, 1.0) * 2.0 - p.xyz;\r",
              "    float r2 = dot(p.xyz, p.xyz);\r",
              "    p *= clamp(max(Minrad/r2, Minrad), 0.0, 1.0);\r",
              "    p = p*Scale + p0.xyz;\r",
              "    trap = min(trap, r2);\r",
              "  }\r",
              "  // |c.x|: log final distance (fractional iteration count)\r",
              "  // |c.y|: spherical orbit trap at (0,0,0)\r",
              "  float2 c = clamp(float2( 0.33*log(dot(p,p))-1.0, sqrt(trap) ), 0.0, 1.0);\r",
              "\r",
              "  return lerp(lerp(Surface1, Surface2, c.y), Surface3, c.x);\r",
              "}\r",
              "\r",
              "\r",
              "float4 PS( PS_IN input ) : SV_Target\r",
              "{\r",
              "\r",
              "    //float4 filter= Image2.Sample(samLinear, input.texCoord);\r",
              "    float3 p = input.worldTViewPos;\r",
              "    float3 dp = normalize(input.worldTViewDir);\r",
              "\r",
              "  float totalD = 0.0;\r",
              "  float D = 3.4e38;\r",
              "  D=StepSize;\r",
              "  float extraD = 0.0;\r",
              "  float lastD;\r",
              "  \r",
              "  int steps;\r",
              "\r",
              "    /*  \r",
              "    // Intersect the view ray with the Mandelbox using raymarching.\r",
              "    for (steps=0; steps<MaxSteps; steps++) {\r",
              "        lastD = D;\r",
              "        D = getDistance(p + totalD * dp);\r",
              "\r",
              "        // Overstepping: have we jumped too far? Cancel last step.    \r",
              "        if (extraD > 0.0 && D < extraD) {\r",
              "            totalD -= extraD;\r",
              "            extraD = 0.0; \r",
              "            D = 3.4e38;\r",
              "            steps--;\r",
              "            continue;\r",
              "        }\r",
              "\r",
              "        if (D < MinDistance/1000) break;\r",
              "\r",
              "        totalD += D;\r",
              "\r",
              "        // Overstepping is based on the optimal length of the last step.\r",
              "        totalD += extraD = 0.096 * D*(D+extraD)/lastD;\r",
              "    }\r",
              "    */\r",
              "\r",
              "\r",
              "    // SImple iterator\r",
              "    \r",
              "    \r",
              "    for(steps=0;steps<MaxSteps && abs(D)>MinDistance/1000;steps++)\r",
              "    {\r",
              "        D=getDistance(p);\r",
              "        p+=dp*D;\t\r",
              "    }\r",
              "    \r",
              "    \r",
              "    p += totalD * dp;\r",
              "\r",
              "\r",
              "  // Color the surface with Blinn-Phong shading, ambient occlusion and glow.\r",
              "  float3 col = Background;\r",
              "\r",
              "  // We've got a hit or we're not sure.\r",
              "  if (D < MAX_DIST) {\r",
              "    float3 n = normalize( getNormal(p, D));\r",
              "    //n*=float3(1,1,10);\r",
              "    n= normalize(n);\r",
              "    col = color(p);\r",
              "    //col = blinn_phong(n, -dp, normalize(input.worldTViewPos+float3(10,1,0)+dp), col);\r",
              "    col = blinn_phong(n, -dp, LightPos, col);\r",
              "    \r",
              "    //float getAO(float3 aoposition, float3 aonormal, float aodistance, float aoiterations, float aofactor)\r",
              "    float distanceLight = pow(Diffuse.a, length(p-LightPos));\r",
              "\r",
              "    col = lerp(AmbientOcclusion, col + distanceLight*Diffuse, getAO(p,n,AODistance, 5, AmbientOcclusion.a));\r",
              "\r",
              "    // We've gone through all steps, but we haven't hit anything.\r",
              "    // Mix in the background color.\r",
              "    if (D > MinDistance) {\r",
              "      col = lerp(col, Background, clamp(log(D/MinDistance) * DistToColor, 0.0, 1.0));\r",
              "    }\r",
              "  }\r",
              "\r",
              "  // Glow is based on the number of steps.\r",
              "  col = lerp(col, Glow, float(steps)/float(MaxSteps) * Glow.a);\r",
              "  col = lerp(col, Background, clamp(log( length(p- input.worldTViewPos)/Fog), 0,1));\r",
              "    //col = float3(1,1,0);\r",
              "  return float4(col, 1);\r",
              "\r",
              "\r",
              "\r",
              "}\r",
              "//<<< PS\r",
              "\r",
              "//>>> _technique\r",
              "technique10 Render",
              "{",
              "    pass P0",
              "    {",
              "        SetGeometryShader( 0 );",
              "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
              "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
              "    }",
              "}",
              "//<<< _technique\r",
              ""
            ]
          },
          {
            "ID": "097050f1-4b25-484b-aeae-55bbea3793c0",
            "Type": "Float",
            "Value": [
              "0.2499999"
            ]
          },
          {
            "ID": "f5139d14-2cec-482f-a440-3ef5643cfa07",
            "Type": "Float",
            "Value": [
              "2.51"
            ]
          },
          {
            "ID": "9558166e-582a-43da-969c-6967cd074c76",
            "Type": "Float",
            "Value": [
              "-1"
            ]
          },
          {
            "ID": "5af0d6da-3d6b-424d-a9a3-67976cd2926e",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "31d9487b-13ac-45ea-adfe-4dc0890cdcf0",
            "Type": "Float",
            "Value": [
              "2"
            ]
          },
          {
            "ID": "1f88250e-fa9a-4b1f-acc7-6d7c114006f0",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "99c7e81c-93c4-45ba-9d1f-41e1b938ee7e",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "4932bf0d-2040-4a7d-b6b6-79636d1fb9ec",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "cbe2fa3e-e588-4c61-8426-f4b32b85d0fe",
            "Type": "Float",
            "Value": [
              "-0.18"
            ]
          },
          {
            "ID": "f3cce3db-1ca4-4143-9d1d-604b35a49bb2",
            "Type": "Float",
            "Value": [
              "0.448"
            ]
          },
          {
            "ID": "43f13535-3e03-4c72-ad71-6531a1d5dd30",
            "Type": "Float",
            "Value": [
              "96.60001"
            ]
          },
          {
            "ID": "816a8894-1fff-4832-b79b-2d3db2275dec",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "1581a9a7-ab2a-4f26-978c-e904a347ceba",
            "Type": "Float",
            "Value": [
              "0.001"
            ]
          },
          {
            "ID": "6287f4bf-1f02-45fb-a3b1-7d78dbca3871",
            "Type": "Float",
            "Value": [
              "23.34501"
            ]
          },
          {
            "ID": "3fa961de-e4ee-438b-923c-f3e4e18fbb98",
            "Type": "Float",
            "Value": [
              "1.14"
            ]
          },
          {
            "ID": "d07dfc13-c7ce-42e3-9948-03da412753e2",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "92936d2f-e94a-4415-88d6-d676f595874b",
            "Type": "Float",
            "Value": [
              "0.04758615"
            ]
          },
          {
            "ID": "61f46740-43ca-4510-ad13-4cba6eed0156",
            "Type": "Float",
            "Value": [
              "0.1199655"
            ]
          },
          {
            "ID": "a49caba6-87e3-4ae9-bd61-c7dc33e83e0b",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "4fc6eed8-d4a7-47c2-8d25-3b4a4c8f0e53",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "f55472a7-3509-4ba2-a285-599c6bfd6e7a",
            "Type": "Float",
            "Value": [
              "0.03246634"
            ]
          },
          {
            "ID": "5a801ea7-7189-49c0-a297-7b6358b804e7",
            "Type": "Float",
            "Value": [
              "0.07287816"
            ]
          },
          {
            "ID": "4b5ba091-c512-498e-8588-71535649a001",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "5d69a672-2d5a-4b8b-8b85-5eb94300134b",
            "Type": "Float",
            "Value": [
              "0.1413562"
            ]
          },
          {
            "ID": "8220eacc-21c1-4926-b5dc-59e33fd2e055",
            "Type": "Float",
            "Value": [
              "0.1413562"
            ]
          },
          {
            "ID": "d0fcd8a6-9352-4f07-9593-0afa4e712680",
            "Type": "Float",
            "Value": [
              "0.1413562"
            ]
          },
          {
            "ID": "92ac7a5e-5a81-46f6-9ec7-e5d2c5c8fe16",
            "Type": "Float",
            "Value": [
              "0.74"
            ]
          },
          {
            "ID": "4c873a01-7009-4a06-a385-3353ba1305b5",
            "Type": "Float",
            "Value": [
              "0.8708282"
            ]
          },
          {
            "ID": "043705c0-b739-4b1e-8607-05d6345dcd58",
            "Type": "Float",
            "Value": [
              "0.2685434"
            ]
          },
          {
            "ID": "98c40404-0454-4135-84e4-5068f5ee553b",
            "Type": "Float",
            "Value": [
              "0.04907635"
            ]
          },
          {
            "ID": "ac26ba86-d5c2-480a-b1f7-b8070ceb7577",
            "Type": "Float",
            "Value": [
              "0.46"
            ]
          },
          {
            "ID": "d3c75309-1709-44a2-9e6c-4d0eb65b5b7e",
            "Type": "Float",
            "Value": [
              "0.2766283"
            ]
          },
          {
            "ID": "3a0c60a8-426b-4980-983f-9f00900b412b",
            "Type": "Float",
            "Value": [
              "0.3121357"
            ]
          },
          {
            "ID": "53f60847-a2ff-4542-a3ec-f9f7605b014d",
            "Type": "Float",
            "Value": [
              "0.3088192"
            ]
          },
          {
            "ID": "8a55cf0d-1139-4f76-8b3f-9f4a6015a04d",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "ee73934c-9d3b-4fdb-8235-b5dcd074b2ef",
            "Type": "Float",
            "Value": [
              "0.4800001"
            ]
          },
          {
            "ID": "6d6ebdee-6860-4959-a366-bfc6a0650a4c",
            "Type": "Float",
            "Value": [
              "0.7000003"
            ]
          },
          {
            "ID": "645abe13-e685-4553-b3bb-b4375535d1b5",
            "Type": "Float",
            "Value": [
              "0.7818378"
            ]
          },
          {
            "ID": "4a49c7e3-5a2c-423f-a95b-8f82abf31cd6",
            "Type": "Float",
            "Value": [
              "0.7400718"
            ]
          },
          {
            "ID": "15842c41-9b58-4c60-8215-269d52dcb72c",
            "Type": "Float",
            "Value": [
              "0.7884063"
            ]
          },
          {
            "ID": "ad560863-1d4a-4228-86f8-ba5a52e5b01a",
            "Type": "Float",
            "Value": [
              "-0.00999999"
            ]
          },
          {
            "ID": "219f8692-c6f2-452a-ab48-f485e7c1aa4c",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "a7038ec0-5a93-4ecb-80ca-6e5eda606fbd",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "057088a9-da7f-4c84-a4b0-9fb9def374eb",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "bf6dea92-3b8d-40c1-891a-5fb89731531d",
            "Type": "Float",
            "Value": [
              "1.37"
            ]
          },
          {
            "ID": "6cee59e5-f9aa-4ee3-99e4-436414d91605",
            "Type": "Float",
            "Value": [
              "3.04"
            ]
          },
          {
            "ID": "137040bd-419a-4ed5-a262-a06dbfff2c48",
            "Type": "Float",
            "Value": [
              "0.03078355"
            ]
          },
          {
            "ID": "47a14af5-c3fe-43e6-8ee8-ab850d21ad30",
            "Type": "Float",
            "Value": [
              "0.02900064"
            ]
          },
          {
            "ID": "078cef23-4006-4d27-8fff-64ac8c7f8f83",
            "Type": "Float",
            "Value": [
              "0.03567705"
            ]
          },
          {
            "ID": "1431b282-884f-49a3-8779-d6def935f6cf",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "2d11f8c1-d04e-4598-a43e-095ecf5f7943",
            "Type": "Float",
            "Value": [
              "2.89999"
            ]
          },
          {
            "ID": "9ee7394d-2396-47c7-b513-9d39fc7174a6",
            "Type": "Float",
            "Value": [
              "1.77"
            ]
          },
          {
            "ID": "ca53b10c-7e9d-4dbb-a1bb-604846252f75",
            "Type": "Float",
            "Value": [
              "0.07000054"
            ]
          },
          {
            "ID": "81a5c41c-3a53-439d-bc14-849c0fe26298",
            "Type": "Float",
            "Value": [
              "2.53"
            ]
          },
          {
            "ID": "e9bbbdd8-dcf0-439a-bc80-81cd4831370f",
            "Type": "Float",
            "Value": [
              "0.2199987"
            ]
          },
          {
            "ID": "a5c17649-ce38-43c0-8cad-9fe661c0e1cf",
            "Type": "Float",
            "Value": [
              "0.2300001"
            ]
          },
          {
            "ID": "df4597e3-94f2-4688-9ac4-29a9a7eb6df8",
            "Type": "Float",
            "Value": [
              "0.4599991"
            ]
          },
          {
            "ID": "a7b48497-7c8e-4722-9ecd-114859f2d3ee",
            "Type": "Float",
            "Value": [
              "-2.393998"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "StillLogoDF",
      "MetaInstanceID": "f6df4b36-a4d7-4adf-80f5-793181725262",
      "MetaID": "481939c8-42d5-4808-bbaf-f2eff0893797",
      "OperatorProperties": {
        "Name": "FractalFlood",
        "PosX": "1545.48006507826",
        "PosY": "1406.36117413789",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "79994f7d-5d4c-40eb-b043-efec2ef2b05c",
            "Type": "Text",
            "Value": [
              "//>>> _common parameters\r",
              "float4x4 objectToWorldMatrix;",
              "float4x4 worldToCameraMatrix;",
              "float4x4 projMatrix;",
              "Texture2D txDiffuse;",
              "float2 RenderTargetSize;",
              "//<<< _common parameters\r",
              "\r",
              "//>>> _parameters\r",
              "float Minrad;",
              "float Scale;",
              "float3 Clamping;",
              "float2 Fold;",
              "float3 Increment;",
              "float MaxSteps;",
              "float StepSize;",
              "float MinDistance;",
              "float MaxDistance;",
              "float DistToColor;",
              "float4 Surface1;",
              "float4 Surface2;",
              "float4 Surface3;",
              "float4 Diffuse;",
              "float4 Specular;",
              "float2 Spec;",
              "float4 Glow;",
              "float4 AmbientOcclusion;",
              "float AODistance;",
              "float4 Background;",
              "float Fog;",
              "float3 LightPos;",
              "float3 SpherePos;",
              "float SphereRadius;",
              "//<<< _parameters\r",
              "float4x4 ViewToWorld;\r",
              " \r",
              "//>>> setup\r",
              "SamplerState samLinear\r",
              "{\r",
              "    Filter = MIN_MAG_MIP_LINEAR;\r",
              "    AddressU = Clamp;\r",
              "    AddressV = Clamp;\r",
              "};\r",
              "//<<< setup\r",
              "\r",
              "//>>> declarations\r",
              "struct VS_IN\r",
              "{\r",
              "    float4 pos : POSITION;\r",
              "    float2 texCoord : TEXCOORD;\r",
              "};\r",
              "\r",
              "struct PS_IN\r",
              "{\r",
              "    float4 pos : SV_POSITION;\r",
              "    float2 texCoord: TEXCOORD0;\t    \r",
              "    float3 worldTViewPos: TEXCOORD1;\r",
              "    float3 worldTViewDir: TEXCOORD2;\r",
              "};\r",
              "//<<< declarations\r",
              "\r",
              "//>>> _GS\r",
              "",
              "//<<< _GS\r",
              "\r",
              "//>>> VS \r",
              "PS_IN VS( VS_IN input )\r",
              "{\r",
              "    PS_IN output = (PS_IN)0;\r",
              "    input.pos = mul(input.pos, objectToWorldMatrix); \r",
              "    output.pos = mul(input.pos, worldToCameraMatrix);\r",
              "    output.pos = mul(output.pos, projMatrix);\r",
              "    output.texCoord = input.texCoord;\r",
              "\r",
              "    float4 viewTNearFragPos = float4(input.texCoord.x*2.0 - 1.0, -input.texCoord.y*2.0 + 1.0, 0.0, 1.0);\r",
              "    float4 worldTNearFragPos = mul(viewTNearFragPos, ViewToWorld);\r",
              "    worldTNearFragPos /= worldTNearFragPos.w;\r",
              "\r",
              "    float4 viewTFarFragPos = float4(input.texCoord.x*2.0 - 1.0, -input.texCoord.y*2.0 + 1.0, 1.0, 1.0);\r",
              "    float4 worldTFarFragPos = mul(viewTFarFragPos, ViewToWorld);\r",
              "    worldTFarFragPos /= worldTFarFragPos.w;\r",
              "\r",
              "    output.worldTViewDir = normalize(worldTFarFragPos.xyz - worldTNearFragPos.xyz);\r",
              "\r",
              "    output.worldTViewPos = worldTNearFragPos;\r",
              "    return output;\r",
              "}\r",
              "//<<< VS\r",
              "\r",
              "//>>> PS\r",
              "\r",
              "\r",
              "float dSphere(float3 p0) {\r",
              "    return length(p0+float4(SpherePos.xyz,1))-SphereRadius;\r",
              "}\r",
              "\r",
              "float udCubes(float3 p) {\r",
              "    float3 b= float3(1,10,0.2);\r",
              "    float3 c= float3(SpherePos.x,SpherePos.y,SpherePos.z);\r",
              "    float3 q = fmod(p,c)-0.5*c;\r",
              "    float3  di = abs(p) - b;\r",
              "    //float mc = maxcomp(di);\r",
              "    //return min(mc,length(max(di,0.0)));  \r",
              "    float rad=SphereRadius;\r",
              "    return length( max( abs(q) - b + float3(rad,rad,rad), 0.0 ) ) - rad;\r",
              "    //return length(max(abs(p)-b,0.0));\r",
              "    \r",
              "}\r",
              "\r",
              "float BOX_RADIUS= 0.03;\r",
              "float dBox(float3 p, float3 b) {\r",
              "    return length( max( abs(p) - b + float3(BOX_RADIUS,BOX_RADIUS,BOX_RADIUS), 0.0 ) ) - BOX_RADIUS;\r",
              "}\r",
              "\r",
              "float dRotatedPlanes(float3 p, float frequency) {\r",
              "    float angle= SphereRadius;\r",
              "    float3 pRotated= float3(p.x * cos(angle) - p.y * sin(angle), \r",
              "                            p.x * sin(angle) + p.y * cos(angle),\r",
              "                            p.z);\r",
              "    return sin(pRotated.x * frequency )-0.4;\r",
              "}\r",
              "\r",
              "\r",
              "float3 H_BAR=float3(1, 0.2, 0.2);\r",
              "float3 I_BAR=float3(0.2, 1.0, 0.2);\r",
              "float3 S_BAR=float3(0.2, 0.5, 0.2);\r",
              "\r",
              "float mod (float a, float b) {\r",
              "    return  a - b * floor(a/b);\r",
              "}\r",
              "\r",
              "float maxcomp(float3 v) {\r",
              "    if(v.x > v.y && v.x > v.z) return v.x;\r",
              "    if(v.y > v.z) return v.y;\r",
              "    return v.z;\r",
              "}\r",
              "\r",
              "float sdBox( float3 p, float3 b )\r",
              "{\r",
              "  float3  di = abs(p) - b;\r",
              "  float mc = maxcomp(di);\r",
              "  return min(mc,length(max(di,0.0)));\r",
              "}\r",
              "\r",
              "float sdBox2(float2 p, float2 b) {\r",
              "  float2  di = abs(p) - b;\r",
              "  float mc = max(di.x, di.y);\r",
              "  return min(mc,length(max(di,0.0)));\r",
              "}\r",
              "\r",
              "float sdCross( in float3 p, float d )\r",
              "{\r",
              "  float da = sdBox2(p.xy, float2(d, 1.0));\r",
              "  float db = sdBox2(p.yz,float2(d, 1.0));\r",
              "  float dc = sdBox2(p.zx,float2(d, 1.0));\r",
              "  return min(da,min(db,dc));\r",
              "}\r",
              "\r",
              "\r",
              "float dStillLogo(float3 p) {\r",
              "    p+=SpherePos;\r",
              "    float d;\r",
              "    \r",
              "    d    =  dBox(p- float3(-4,-0.8,0), H_BAR);\r",
              "    d=min(d,dBox(p- float3(-4,0,0), H_BAR));\r",
              "    d=min(d,dBox(p- float3(-4,+0.80,0), H_BAR));    \r",
              "    d=min(d,dBox(p- float3(-4.8,+0.40,0), S_BAR));    \r",
              "    d=min(d,dBox(p- float3(-3.2,-0.40,0), S_BAR));    \r",
              "    \r",
              "    d=min(d,dBox(p- float3(-1.5,+0.80,0), H_BAR));    \r",
              "    d=min(d,dBox(p- float3(-1.5, 0,0), I_BAR));    \r",
              "    \r",
              "    d=min(d,dBox(p- float3(0, 0,0), I_BAR));    \r",
              "    \r",
              "    d=min(d,dBox(p- float3(+0.7, 0,0), I_BAR));  \r",
              "    d=min(d,dBox(p- float3(+1.5,-0.80,0), H_BAR));    \r",
              "    \r",
              "    d=min(d,dBox(p- float3(+3., 0,0), I_BAR));  \r",
              "    d=min(d,dBox(p- float3(+4,-0.80,0), H_BAR));    \r",
              "    \r",
              "    return d;\r",
              "}\r",
              "\r",
              "float3 rep(float3 p, float3 c) {\r",
              "    return float3( \r",
              "            mod(p.x,c.x),  \r",
              "            mod(p.y,c.y), \r",
              "            mod(p.z,c.z)) - 0.5*c;\r",
              "    \r",
              "\r",
              "}\r",
              "\r",
              "float dRepeatedXBars(float3 p, float3 r, float h, float w) {\r",
              "    float3 p1= rep(p, r);\r",
              "    return sdBox2(p1.xy, float2(h, w));;\r",
              "}\r",
              "\r",
              "float dRepeatedYBars(float3 p, float3 r, float h, float w) {\r",
              "    float3 p1= rep(p, r);\r",
              "    return sdBox2(p1.xz, float2(h, w));;\r",
              "}\r",
              "float dRepeatedZBars(float3 p, float3 r, float h, float w) {\r",
              "    float3 p1= rep(p, r);\r",
              "    return sdBox2(p1.yz, float2(h, w));;\r",
              "}\r",
              "\r",
              "\r",
              "int iters = 7;\r",
              "\r",
              "// Compute the distance from |pos| to the Mandelbox.\r",
              "float sdMandelBox(float3 pos) {\r",
              "    float4 pN = float4(pos,1);\r",
              "    // precomputed constants\r",
              "    float minRad2 = clamp(Minrad, 1.0e-9, 1.0);\r",
              "    float4 scale = float4(Scale, Scale, Scale, abs(Scale)) / minRad2 ;\r",
              "    float absScalem1 = abs(Scale - 1.0);\r",
              "    float AbsScaleRaisedTo1mIters = pow(abs(Scale), float(1-iters));\r",
              "    float DIST_MULTIPLIER = StepSize;\r",
              "\r",
              "    float4 p = float4(pos,1);\r",
              "    float4 p0 = p;  // p.w is the distance estimate\r",
              "  \r",
              "\r",
              "  for (int i=0; i<iters; i++) {\r",
              "     //box folding: \r",
              "     //if (p>1) p = 2-p; else if (p<-1) p = -2-p;\r",
              "    p.xyz = abs(1+p.xyz) - p.xyz - abs(1.0-p.xyz);  // add;add;abs.add;abs.add (130.4%)\r",
              "    //p.xyz = clamp(p.xyz*0.5+0.5, 0.0, 1.0) * 4.0 - 2.0 - p.xyz;  // mad.sat;mad;add (102.3%)    \r",
              "    //p.xyz = clamp(p.xyz, -1.0, 1.0) * 2.0 - p.xyz;  // min;max;mad    \r",
              "    p.xyz = clamp(p.xyz, Clamping.x, Clamping.y) * Clamping.z - p.xyz;  // min;max;mad\r",
              "    \r",
              "\r",
              "    // sphere folding: if (r2 < minRad2) p /= minRad2; else if (r2 < 1.0) p /= r2;\r",
              "    float r2 = dot(p.xyz, p.xyz);\r",
              "    p *= clamp(max(minRad2/r2, minRad2), Fold.x, Fold.y);  // dp3,div,max.sat,mul\r",
              "    p.xyz+= float3(Increment.x,Increment.y,Increment.z);\r",
              "    // scale, translate\r",
              "    p = p*scale + p0;\r",
              "  }\r",
              "  float d=((length(p.xyz) - absScalem1) / p.w - AbsScaleRaisedTo1mIters) * DIST_MULTIPLIER;\r",
              "  return d;\r",
              "  //d=0.1;\r",
              "  //return max(udCubes(p0),d );\r",
              "  //return max( udCubes(p0), dStillLogo(p0));\r",
              "  //return min(dStillLogo(pN), d);\r",
              "}\r",
              "\r",
              "\r",
              "\r",
              "float getDistance(float3 p) {\r",
              "    //float dPlanes = dRotatedPlanes(p, 5);\r",
              "    //float dColumns= dBox( float3( mod(p.x,0),mod(p.y,3.2),mod(p.z,2))  - float3( 1,0,0), float3(10.5,2.5,0.5));\r",
              "    \r",
              "    //return max(dPlanes , dColumns);\r",
              "    //return dPlanes;\r",
              "    //return max(dPlanes, dBox(p, float3(4,4,4)));\r",
              "    //p= float3( mod(p.x,3),  mod(p.y,5), mod(p.z,6));\r",
              "    //p= rep(p, float3(SpherePos.x/p.y,SpherePos.y*p.x,SpherePos.z*p.x/p.y));\r",
              "    float3 p1= rep(p, float3(SpherePos.x,SpherePos.y, SpherePos.z));\r",
              "    float dBars= sdCross(p1, float3(20,16,7));\r",
              "    \r",
              "    //float3 p2= rep(p, float3(2,10, 1));\r",
              "    //float dBox= sdBox(p2, float3(1,10,14));\r",
              "    float d=10000;\r",
              "    \r",
              "    \r",
              "    //d= max(d, sdBox(p, SpherePos)); //limit to big block\r",
              "    d=min(d,sdMandelBox(p));\r",
              "    d= max(d, dRepeatedYBars(p, 0.2, 0.72,1.8));  //big blocks\r",
              "    //d= min(d, dSphere(p));\r",
              "    \r",
              "    // surface ace offeset\r",
              "    //d+= clamp(dRepeatedYBars(p, SpherePos, 0.1,1) , \r",
              "    //    0,0.001);\r",
              "        \r",
              "    d+= clamp( sdBox(\r",
              "                   rep(p,  float3(0.22, 0.23, 0.46)), \r",
              "                    SpherePos) , \r",
              "         0,0.01*SphereRadius);\r",
              "    \r",
              "    //streetx\r",
              "    d= min(d, dRepeatedXBars(p, float3(5.1,1.1,0.1) , 0.05,0.01));\r",
              "    d= min(d, dRepeatedZBars(p - float3(10.4,0.30,3.0) , float3(4.1,2.1,3.1) , 0.05,0.01));\r",
              "    \r",
              "    d= min(d, sdBox( p+float3(0,7,0), float3(1000,1,1000)));\r",
              "    return d;\r",
              "    \r",
              "}\r",
              "\r",
              "\r",
              "// Blinn-Phong shading model with rim lighting (diffuse light bleeding to the other side).\r",
              "// |normal|, |view| and |light| should be normalized.\r",
              "float3 blinn_phong(float3 normal, float3 view, float3 light, float3 diffuseColor) {\r",
              "  float3 halfLV = normalize(light + view);\r",
              "  float spe = pow(max( dot(normal, halfLV), Spec.x ), Spec.y);\r",
              "  float dif = dot(normal, light) * 0.1 + 0.15;\r",
              "  return dif*diffuseColor + spe*Specular*Specular.a;\r",
              "}\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "float3 getNormal(float3 p, float offset)\r",
              "{\r",
              "    float dt=.0001;\r",
              "    float3 n=float3(getDistance(p+float3(dt,0,0)),\r",
              "                    getDistance(p+float3(0,dt,0)),\r",
              "                    getDistance(p+float3(0,0,dt)))-getDistance(p);\r",
              "    return normalize(n);\r",
              "}\r",
              "\r",
              "\r",
              "float getAO(float3 aoposition, float3 aonormal, float aodistance, float aoiterations, float aofactor)\r",
              "{\r",
              "    float ao = 0.0;\r",
              "    float k = aofactor;\r",
              "    aodistance /= aoiterations;\r",
              "    for (float i=1; i < 4; i += 1)\r",
              "    {\r",
              "        ao += (i * aodistance - getDistance(aoposition + aonormal * i * aodistance)) / pow(2,i);\r",
              "    }\r",
              "    return 1.0 - k * ao;\r",
              "}\r",
              "/*\r",
              "float4 getTexture2(float3 p, float3 n) \r",
              "{\r",
              "    float s = 1.3;\r",
              "    float dx = abs(n.x);\r",
              "    float dy = abs(n.y);\r",
              "    float dz = abs(n.z);\r",
              "    if (dx > dy  > dz) return  Image.Sample(samLinear, float2(frac(p.z*s), frac(p.y * s))); \r",
              "    if (dy > dz) return  Image.Sample(samLinear, float2(frac(p.x*s), frac(p.z * s)));\r",
              "    return  Image.Sample(samLinear, float2(frac(p.x*s), frac(p.y * s)));\r",
              "}*/\r",
              "\r",
              "float MAX_DIST=300;\r",
              "\r",
              "float3 surfaceColor1 = float3(0.95, 0.64, 0.1);\r",
              "float3 surfaceColor2 = float3(0.89, 0.95, 0.75);\r",
              "float3 surfaceColor3 = float3(0.55, 0.06, 0.03);\r",
              "\r",
              "// Compute the color at |pos|.\r",
              "float3 color(float3 pos) {\r",
              "  float3 p = pos, p0 = p;\r",
              "  float trap = 1.0;\r",
              "\r",
              "  for (int i=0; i<3; i++) {\r",
              "    p.xyz = clamp(p.xyz, -1.0, 1.0) * 2.0 - p.xyz;\r",
              "    float r2 = dot(p.xyz, p.xyz);\r",
              "    p *= clamp(max(Minrad/r2, Minrad), 0.0, 1.0);\r",
              "    p = p*Scale + p0.xyz;\r",
              "    trap = min(trap, r2);\r",
              "  }\r",
              "  // |c.x|: log final distance (fractional iteration count)\r",
              "  // |c.y|: spherical orbit trap at (0,0,0)\r",
              "  float2 c = clamp(float2( 0.33*log(dot(p,p))-1.0, sqrt(trap) ), 0.0, 1.0);\r",
              "\r",
              "  return lerp(lerp(Surface1, Surface2, c.y), Surface3, c.x);\r",
              "}\r",
              "\r",
              "\r",
              "float4 PS( PS_IN input ) : SV_Target\r",
              "{\r",
              "\r",
              "    //float4 filter= Image2.Sample(samLinear, input.texCoord);\r",
              "    float3 p = input.worldTViewPos;\r",
              "    float3 dp = normalize(input.worldTViewDir);\r",
              "\r",
              "  float totalD = 0.0;\r",
              "  float D = 3.4e38;\r",
              "  D=StepSize;\r",
              "  float extraD = 0.0;\r",
              "  float lastD;\r",
              "  \r",
              "  int steps;\r",
              "\r",
              "    /*  \r",
              "    // Intersect the view ray with the Mandelbox using raymarching.\r",
              "    for (steps=0; steps<MaxSteps; steps++) {\r",
              "        lastD = D;\r",
              "        D = getDistance(p + totalD * dp);\r",
              "\r",
              "        // Overstepping: have we jumped too far? Cancel last step.    \r",
              "        if (extraD > 0.0 && D < extraD) {\r",
              "            totalD -= extraD;\r",
              "            extraD = 0.0; \r",
              "            D = 3.4e38;\r",
              "            steps--;\r",
              "            continue;\r",
              "        }\r",
              "\r",
              "        if (D < MinDistance/1000) break;\r",
              "\r",
              "        totalD += D;\r",
              "\r",
              "        // Overstepping is based on the optimal length of the last step.\r",
              "        totalD += extraD = 0.096 * D*(D+extraD)/lastD;\r",
              "    }\r",
              "    */\r",
              "\r",
              "\r",
              "    // SImple iterator\r",
              "    \r",
              "    \r",
              "    for(steps=0;steps<MaxSteps && abs(D)>MinDistance/1000;steps++)\r",
              "    {\r",
              "        D=getDistance(p);\r",
              "        p+=dp*D;\t\r",
              "    }\r",
              "    \r",
              "    \r",
              "    p += totalD * dp;\r",
              "\r",
              "\r",
              "  // Color the surface with Blinn-Phong shading, ambient occlusion and glow.\r",
              "  float3 col = Background;\r",
              "\r",
              "  // We've got a hit or we're not sure.\r",
              "  if (D < MAX_DIST) {\r",
              "    float3 n = normalize( getNormal(p, D));\r",
              "    //n*=float3(1,1,10);\r",
              "    n= normalize(n);\r",
              "    col = color(p);\r",
              "    //col = blinn_phong(n, -dp, normalize(input.worldTViewPos+float3(10,1,0)+dp), col);\r",
              "    col = blinn_phong(n, -dp, LightPos, col);\r",
              "    \r",
              "    //float getAO(float3 aoposition, float3 aonormal, float aodistance, float aoiterations, float aofactor)\r",
              "    float distanceLight = pow(Diffuse.a, length(p-LightPos));\r",
              "\r",
              "    col = lerp(AmbientOcclusion, col + distanceLight*Diffuse, getAO(p,n,AODistance, 5, AmbientOcclusion.a));\r",
              "\r",
              "    // We've gone through all steps, but we haven't hit anything.\r",
              "    // Mix in the background color.\r",
              "    if (D > MinDistance) {\r",
              "      col = lerp(col, Background, clamp(log(D/MinDistance) * DistToColor, 0.0, 1.0));\r",
              "    }\r",
              "  }\r",
              "\r",
              "  // Glow is based on the number of steps.\r",
              "  col = lerp(col, Glow, float(steps)/float(MaxSteps) * Glow.a);\r",
              "  col = lerp(col, Background, clamp(log( length(p- input.worldTViewPos)/Fog), 0,1));\r",
              "    //col = float3(1,1,0);\r",
              "  return float4(col, 1);\r",
              "\r",
              "\r",
              "\r",
              "}\r",
              "//<<< PS\r",
              "\r",
              "//>>> _technique\r",
              "technique10 Render",
              "{",
              "    pass P0",
              "    {",
              "        SetGeometryShader( 0 );",
              "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
              "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
              "    }",
              "}",
              "//<<< _technique\r",
              ""
            ]
          },
          {
            "ID": "097050f1-4b25-484b-aeae-55bbea3793c0",
            "Type": "Float",
            "Value": [
              "0.2499999"
            ]
          },
          {
            "ID": "f5139d14-2cec-482f-a440-3ef5643cfa07",
            "Type": "Float",
            "Value": [
              "2.51"
            ]
          },
          {
            "ID": "9558166e-582a-43da-969c-6967cd074c76",
            "Type": "Float",
            "Value": [
              "-1"
            ]
          },
          {
            "ID": "5af0d6da-3d6b-424d-a9a3-67976cd2926e",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "31d9487b-13ac-45ea-adfe-4dc0890cdcf0",
            "Type": "Float",
            "Value": [
              "2"
            ]
          },
          {
            "ID": "1f88250e-fa9a-4b1f-acc7-6d7c114006f0",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "99c7e81c-93c4-45ba-9d1f-41e1b938ee7e",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "4932bf0d-2040-4a7d-b6b6-79636d1fb9ec",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "43f13535-3e03-4c72-ad71-6531a1d5dd30",
            "Type": "Float",
            "Value": [
              "8.376049"
            ]
          },
          {
            "ID": "816a8894-1fff-4832-b79b-2d3db2275dec",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "1581a9a7-ab2a-4f26-978c-e904a347ceba",
            "Type": "Float",
            "Value": [
              "0.001"
            ]
          },
          {
            "ID": "6287f4bf-1f02-45fb-a3b1-7d78dbca3871",
            "Type": "Float",
            "Value": [
              "23.34501"
            ]
          },
          {
            "ID": "3fa961de-e4ee-438b-923c-f3e4e18fbb98",
            "Type": "Float",
            "Value": [
              "0.09000003"
            ]
          },
          {
            "ID": "d07dfc13-c7ce-42e3-9948-03da412753e2",
            "Type": "Float",
            "Value": [
              "0.1200512"
            ]
          },
          {
            "ID": "92936d2f-e94a-4415-88d6-d676f595874b",
            "Type": "Float",
            "Value": [
              "0.1464037"
            ]
          },
          {
            "ID": "61f46740-43ca-4510-ad13-4cba6eed0156",
            "Type": "Float",
            "Value": [
              "0.1464037"
            ]
          },
          {
            "ID": "a49caba6-87e3-4ae9-bd61-c7dc33e83e0b",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "4fc6eed8-d4a7-47c2-8d25-3b4a4c8f0e53",
            "Type": "Float",
            "Value": [
              "0.07923657"
            ]
          },
          {
            "ID": "f55472a7-3509-4ba2-a285-599c6bfd6e7a",
            "Type": "Float",
            "Value": [
              "0.1489131"
            ]
          },
          {
            "ID": "5a801ea7-7189-49c0-a297-7b6358b804e7",
            "Type": "Float",
            "Value": [
              "0.1694746"
            ]
          },
          {
            "ID": "4b5ba091-c512-498e-8588-71535649a001",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "5d69a672-2d5a-4b8b-8b85-5eb94300134b",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "8220eacc-21c1-4926-b5dc-59e33fd2e055",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "d0fcd8a6-9352-4f07-9593-0afa4e712680",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "92ac7a5e-5a81-46f6-9ec7-e5d2c5c8fe16",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "4c873a01-7009-4a06-a385-3353ba1305b5",
            "Type": "Float",
            "Value": [
              "0.8149999"
            ]
          },
          {
            "ID": "043705c0-b739-4b1e-8607-05d6345dcd58",
            "Type": "Float",
            "Value": [
              "0.2009863"
            ]
          },
          {
            "ID": "98c40404-0454-4135-84e4-5068f5ee553b",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "ac26ba86-d5c2-480a-b1f7-b8070ceb7577",
            "Type": "Float",
            "Value": [
              "0.001000049"
            ]
          },
          {
            "ID": "d3c75309-1709-44a2-9e6c-4d0eb65b5b7e",
            "Type": "Float",
            "Value": [
              "0.4267178"
            ]
          },
          {
            "ID": "3a0c60a8-426b-4980-983f-9f00900b412b",
            "Type": "Float",
            "Value": [
              "0.431587"
            ]
          },
          {
            "ID": "53f60847-a2ff-4542-a3ec-f9f7605b014d",
            "Type": "Float",
            "Value": [
              "0.5064228"
            ]
          },
          {
            "ID": "8a55cf0d-1139-4f76-8b3f-9f4a6015a04d",
            "Type": "Float",
            "Value": [
              "1.77"
            ]
          },
          {
            "ID": "ee73934c-9d3b-4fdb-8235-b5dcd074b2ef",
            "Type": "Float",
            "Value": [
              "0.89"
            ]
          },
          {
            "ID": "6d6ebdee-6860-4959-a366-bfc6a0650a4c",
            "Type": "Float",
            "Value": [
              "29.69"
            ]
          },
          {
            "ID": "645abe13-e685-4553-b3bb-b4375535d1b5",
            "Type": "Float",
            "Value": [
              "0.04867237"
            ]
          },
          {
            "ID": "4a49c7e3-5a2c-423f-a95b-8f82abf31cd6",
            "Type": "Float",
            "Value": [
              "0.04135569"
            ]
          },
          {
            "ID": "15842c41-9b58-4c60-8215-269d52dcb72c",
            "Type": "Float",
            "Value": [
              "0.0628984"
            ]
          },
          {
            "ID": "ad560863-1d4a-4228-86f8-ba5a52e5b01a",
            "Type": "Float",
            "Value": [
              "-0.2"
            ]
          },
          {
            "ID": "219f8692-c6f2-452a-ab48-f485e7c1aa4c",
            "Type": "Float",
            "Value": [
              "0.06776762"
            ]
          },
          {
            "ID": "a7038ec0-5a93-4ecb-80ca-6e5eda606fbd",
            "Type": "Float",
            "Value": [
              "0.07152263"
            ]
          },
          {
            "ID": "057088a9-da7f-4c84-a4b0-9fb9def374eb",
            "Type": "Float",
            "Value": [
              "0.1058498"
            ]
          },
          {
            "ID": "137040bd-419a-4ed5-a262-a06dbfff2c48",
            "Type": "Float",
            "Value": [
              "0.0357309"
            ]
          },
          {
            "ID": "47a14af5-c3fe-43e6-8ee8-ab850d21ad30",
            "Type": "Float",
            "Value": [
              "0.005249927"
            ]
          },
          {
            "ID": "078cef23-4006-4d27-8fff-64ac8c7f8f83",
            "Type": "Float",
            "Value": [
              "0.02621937"
            ]
          },
          {
            "ID": "1431b282-884f-49a3-8779-d6def935f6cf",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "2d11f8c1-d04e-4598-a43e-095ecf5f7943",
            "Type": "Float",
            "Value": [
              "1.73999"
            ]
          },
          {
            "ID": "e9bbbdd8-dcf0-439a-bc80-81cd4831370f",
            "Type": "Float",
            "Value": [
              "0.06999867"
            ]
          },
          {
            "ID": "a5c17649-ce38-43c0-8cad-9fe661c0e1cf",
            "Type": "Float",
            "Value": [
              "0.06000005"
            ]
          },
          {
            "ID": "df4597e3-94f2-4688-9ac4-29a9a7eb6df8",
            "Type": "Float",
            "Value": [
              "0.1599996"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "StillLogoDF",
      "MetaInstanceID": "6309dd7f-be33-4b7d-ae58-ede911b48129",
      "MetaID": "481939c8-42d5-4808-bbaf-f2eff0893797",
      "OperatorProperties": {
        "Name": "FractalFlood",
        "PosX": "1225.18578609349",
        "PosY": "1565.09335454118",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "79994f7d-5d4c-40eb-b043-efec2ef2b05c",
            "Type": "Text",
            "Value": [
              "//>>> _common parameters\r",
              "float4x4 objectToWorldMatrix;",
              "float4x4 worldToCameraMatrix;",
              "float4x4 projMatrix;",
              "Texture2D txDiffuse;",
              "float2 RenderTargetSize;",
              "//<<< _common parameters\r",
              "\r",
              "//>>> _parameters\r",
              "float Minrad;",
              "float Scale;",
              "float3 Clamping;",
              "float2 Fold;",
              "float3 Increment;",
              "float MaxSteps;",
              "float StepSize;",
              "float MinDistance;",
              "float MaxDistance;",
              "float DistToColor;",
              "float4 Surface1;",
              "float4 Surface2;",
              "float4 Surface3;",
              "float4 Diffuse;",
              "float4 Specular;",
              "float2 Spec;",
              "float4 Glow;",
              "float4 AmbientOcclusion;",
              "float AODistance;",
              "float4 Background;",
              "float Fog;",
              "float3 LightPos;",
              "float3 SpherePos;",
              "float SphereRadius;",
              "//<<< _parameters\r",
              "float4x4 ViewToWorld;\r",
              " \r",
              "//>>> setup\r",
              "SamplerState samLinear\r",
              "{\r",
              "    Filter = MIN_MAG_MIP_LINEAR;\r",
              "    AddressU = Clamp;\r",
              "    AddressV = Clamp;\r",
              "};\r",
              "//<<< setup\r",
              "\r",
              "//>>> declarations\r",
              "struct VS_IN\r",
              "{\r",
              "    float4 pos : POSITION;\r",
              "    float2 texCoord : TEXCOORD;\r",
              "};\r",
              "\r",
              "struct PS_IN\r",
              "{\r",
              "    float4 pos : SV_POSITION;\r",
              "    float2 texCoord: TEXCOORD0;\t    \r",
              "    float3 worldTViewPos: TEXCOORD1;\r",
              "    float3 worldTViewDir: TEXCOORD2;\r",
              "};\r",
              "//<<< declarations\r",
              "\r",
              "//>>> _GS\r",
              "",
              "//<<< _GS\r",
              "\r",
              "//>>> VS \r",
              "PS_IN VS( VS_IN input )\r",
              "{\r",
              "    PS_IN output = (PS_IN)0;\r",
              "    input.pos = mul(input.pos, objectToWorldMatrix); \r",
              "    output.pos = mul(input.pos, worldToCameraMatrix);\r",
              "    output.pos = mul(output.pos, projMatrix);\r",
              "    output.texCoord = input.texCoord;\r",
              "\r",
              "    float4 viewTNearFragPos = float4(input.texCoord.x*2.0 - 1.0, -input.texCoord.y*2.0 + 1.0, 0.0, 1.0);\r",
              "    float4 worldTNearFragPos = mul(viewTNearFragPos, ViewToWorld);\r",
              "    worldTNearFragPos /= worldTNearFragPos.w;\r",
              "\r",
              "    float4 viewTFarFragPos = float4(input.texCoord.x*2.0 - 1.0, -input.texCoord.y*2.0 + 1.0, 1.0, 1.0);\r",
              "    float4 worldTFarFragPos = mul(viewTFarFragPos, ViewToWorld);\r",
              "    worldTFarFragPos /= worldTFarFragPos.w;\r",
              "\r",
              "    output.worldTViewDir = normalize(worldTFarFragPos.xyz - worldTNearFragPos.xyz);\r",
              "\r",
              "    output.worldTViewPos = worldTNearFragPos;\r",
              "    return output;\r",
              "}\r",
              "//<<< VS\r",
              "\r",
              "//>>> PS\r",
              "\r",
              "\r",
              "float dSphere(float3 p0) {\r",
              "    return length(p0+float4(SpherePos.xyz,1))-SphereRadius;\r",
              "}\r",
              "\r",
              "float udCubes(float3 p) {\r",
              "    float3 b= float3(1,10,0.2);\r",
              "    float3 c= float3(SpherePos.x,SpherePos.y,SpherePos.z);\r",
              "    float3 q = fmod(p,c)-0.5*c;\r",
              "    float3  di = abs(p) - b;\r",
              "    //float mc = maxcomp(di);\r",
              "    //return min(mc,length(max(di,0.0)));  \r",
              "    float rad=SphereRadius;\r",
              "    return length( max( abs(q) - b + float3(rad,rad,rad), 0.0 ) ) - rad;\r",
              "    //return length(max(abs(p)-b,0.0));\r",
              "    \r",
              "}\r",
              "\r",
              "float BOX_RADIUS= 0.03;\r",
              "float dBox(float3 p, float3 b) {\r",
              "    return length( max( abs(p) - b + float3(BOX_RADIUS,BOX_RADIUS,BOX_RADIUS), 0.0 ) ) - BOX_RADIUS;\r",
              "}\r",
              "\r",
              "float dRotatedPlanes(float3 p, float frequency) {\r",
              "    float angle= SphereRadius;\r",
              "    float3 pRotated= float3(p.x * cos(angle) - p.y * sin(angle), \r",
              "                            p.x * sin(angle) + p.y * cos(angle),\r",
              "                            p.z);\r",
              "    return sin(pRotated.x * frequency )-0.4;\r",
              "}\r",
              "\r",
              "\r",
              "float3 H_BAR=float3(1, 0.2, 0.2);\r",
              "float3 I_BAR=float3(0.2, 1.0, 0.2);\r",
              "float3 S_BAR=float3(0.2, 0.5, 0.2);\r",
              "\r",
              "float mod (float a, float b) {\r",
              "    return  a - b * floor(a/b);\r",
              "}\r",
              "\r",
              "float maxcomp(float3 v) {\r",
              "    if(v.x > v.y && v.x > v.z) return v.x;\r",
              "    if(v.y > v.z) return v.y;\r",
              "    return v.z;\r",
              "}\r",
              "\r",
              "float sdBox( float3 p, float3 b )\r",
              "{\r",
              "  float3  di = abs(p) - b;\r",
              "  float mc = maxcomp(di);\r",
              "  return min(mc,length(max(di,0.0)));\r",
              "}\r",
              "\r",
              "float sdBox2(float2 p, float2 b) {\r",
              "  float2  di = abs(p) - b;\r",
              "  float mc = max(di.x, di.y);\r",
              "  return min(mc,length(max(di,0.0)));\r",
              "}\r",
              "\r",
              "float sdCross( in float3 p, float d )\r",
              "{\r",
              "  float da = sdBox2(p.xy, float2(d, 1.0));\r",
              "  float db = sdBox2(p.yz,float2(d, 1.0));\r",
              "  float dc = sdBox2(p.zx,float2(d, 1.0));\r",
              "  return min(da,min(db,dc));\r",
              "}\r",
              "\r",
              "\r",
              "float dStillLogo(float3 p) {\r",
              "    p+=SpherePos;\r",
              "    float d;\r",
              "    \r",
              "    d    =  dBox(p- float3(-4,-0.8,0), H_BAR);\r",
              "    d=min(d,dBox(p- float3(-4,0,0), H_BAR));\r",
              "    d=min(d,dBox(p- float3(-4,+0.80,0), H_BAR));    \r",
              "    d=min(d,dBox(p- float3(-4.8,+0.40,0), S_BAR));    \r",
              "    d=min(d,dBox(p- float3(-3.2,-0.40,0), S_BAR));    \r",
              "    \r",
              "    d=min(d,dBox(p- float3(-1.5,+0.80,0), H_BAR));    \r",
              "    d=min(d,dBox(p- float3(-1.5, 0,0), I_BAR));    \r",
              "    \r",
              "    d=min(d,dBox(p- float3(0, 0,0), I_BAR));    \r",
              "    \r",
              "    d=min(d,dBox(p- float3(+0.7, 0,0), I_BAR));  \r",
              "    d=min(d,dBox(p- float3(+1.5,-0.80,0), H_BAR));    \r",
              "    \r",
              "    d=min(d,dBox(p- float3(+3., 0,0), I_BAR));  \r",
              "    d=min(d,dBox(p- float3(+4,-0.80,0), H_BAR));    \r",
              "    \r",
              "    return d;\r",
              "}\r",
              "\r",
              "float3 rep(float3 p, float3 c) {\r",
              "    return float3( \r",
              "            mod(p.x,c.x),  \r",
              "            mod(p.y,c.y), \r",
              "            mod(p.z,c.z)) - 0.5*c;\r",
              "    \r",
              "\r",
              "}\r",
              "\r",
              "float dRepeatedXBars(float3 p, float3 r, float h, float w) {\r",
              "    float3 p1= rep(p, r);\r",
              "    return sdBox2(p1.xy, float2(h, w));;\r",
              "}\r",
              "\r",
              "float dRepeatedYBars(float3 p, float3 r, float h, float w) {\r",
              "    float3 p1= rep(p, r);\r",
              "    return sdBox2(p1.xz, float2(h, w));;\r",
              "}\r",
              "float dRepeatedZBars(float3 p, float3 r, float h, float w) {\r",
              "    float3 p1= rep(p, r);\r",
              "    return sdBox2(p1.yz, float2(h, w));;\r",
              "}\r",
              "\r",
              "\r",
              "int iters = 6;\r",
              "\r",
              "// Compute the distance from |pos| to the Mandelbox.\r",
              "float sdMandelBox(float3 pos) {\r",
              "    float4 pN = float4(pos,1);\r",
              "    // precomputed constants\r",
              "    float minRad2 = clamp(Minrad, 1.0e-9, 1.0);\r",
              "    float4 scale = float4(Scale, Scale, Scale, abs(Scale)) / minRad2 ;\r",
              "    float absScalem1 = abs(Scale - 1.0);\r",
              "    float AbsScaleRaisedTo1mIters = pow(abs(Scale), float(1-iters));\r",
              "    float DIST_MULTIPLIER = StepSize;\r",
              "\r",
              "    float4 p = float4(pos,1);\r",
              "    float4 p0 = p;  // p.w is the distance estimate\r",
              "  \r",
              "\r",
              "  for (int i=0; i<iters; i++) {\r",
              "     //box folding: \r",
              "     //if (p>1) p = 2-p; else if (p<-1) p = -2-p;\r",
              "    p.xyz = abs(1+p.xyz) - p.xyz - abs(1.0-p.xyz);  // add;add;abs.add;abs.add (130.4%)\r",
              "    //p.xyz = clamp(p.xyz*0.5+0.5, 0.0, 1.0) * 4.0 - 2.0 - p.xyz;  // mad.sat;mad;add (102.3%)    \r",
              "    //p.xyz = clamp(p.xyz, -1.0, 1.0) * 2.0 - p.xyz;  // min;max;mad    \r",
              "    p.xyz = clamp(p.xyz, Clamping.x, Clamping.y) * Clamping.z - p.xyz;  // min;max;mad\r",
              "    \r",
              "\r",
              "    // sphere folding: if (r2 < minRad2) p /= minRad2; else if (r2 < 1.0) p /= r2;\r",
              "    float r2 = dot(p.xyz, p.xyz);\r",
              "    p *= clamp(max(minRad2/r2, minRad2), Fold.x, Fold.y);  // dp3,div,max.sat,mul\r",
              "    p.xyz+= float3(Increment.x,Increment.y,Increment.z);\r",
              "    // scale, translate\r",
              "    p = p*scale + p0;\r",
              "  }\r",
              "  float d=((length(p.xyz) - absScalem1) / p.w - AbsScaleRaisedTo1mIters) * DIST_MULTIPLIER;\r",
              "  return d;\r",
              "  //d=0.1;\r",
              "  //return max(udCubes(p0),d );\r",
              "  //return max( udCubes(p0), dStillLogo(p0));\r",
              "  //return min(dStillLogo(pN), d);\r",
              "}\r",
              "\r",
              "\r",
              "\r",
              "float getDistance(float3 p) {\r",
              "    //float dPlanes = dRotatedPlanes(p, 5);\r",
              "    //float dColumns= dBox( float3( mod(p.x,0),mod(p.y,3.2),mod(p.z,2))  - float3( 1,0,0), float3(10.5,2.5,0.5));\r",
              "    \r",
              "    //return max(dPlanes , dColumns);\r",
              "    //return dPlanes;\r",
              "    //return max(dPlanes, dBox(p, float3(4,4,4)));\r",
              "    //p= float3( mod(p.x,3),  mod(p.y,5), mod(p.z,6));\r",
              "    //p= rep(p, float3(SpherePos.x/p.y,SpherePos.y*p.x,SpherePos.z*p.x/p.y));\r",
              "    float3 p1= rep(p, float3(SpherePos.x,SpherePos.y, SpherePos.z));\r",
              "    float dBars= sdCross(p1, float3(20,16,7));\r",
              "    \r",
              "    //float3 p2= rep(p, float3(2,10, 1));\r",
              "    //float dBox= sdBox(p2, float3(1,10,14));\r",
              "    float d=10000;\r",
              "    \r",
              "    \r",
              "    //d= max(d, sdBox(p, SpherePos)); //limit to big block\r",
              "    d=min(d,sdMandelBox(p));\r",
              "    d= max(d, dRepeatedYBars(p, 0.2, 0.72,1.8));  //big blocks\r",
              "    //d= min(d, dSphere(p));\r",
              "    \r",
              "    // surface ace offeset\r",
              "    //d+= clamp(dRepeatedYBars(p, SpherePos, 0.1,1) , \r",
              "    //    0,0.001);\r",
              "        \r",
              "    d+= clamp( sdBox(\r",
              "                   rep(p,  float3(0.22, 0.23, 0.46)), \r",
              "                    float3(0.1, 0.1, 0.2)) , \r",
              "         0,0.006);\r",
              "    \r",
              "    //streetx\r",
              "    d= min(d, dRepeatedXBars(p, float3(5.1,1.1,0.1) , 0.05,0.01));\r",
              "    d= min(d, dRepeatedZBars(p - float3(10.4,0.30,3.0) , float3(4.1,2.1,3.1) , 0.05,0.01));\r",
              "    \r",
              "    d= min(d, sdBox( p+float3(0,7,0), float3(1000,1,1000)));\r",
              "    return d;\r",
              "    \r",
              "}\r",
              "\r",
              "\r",
              "// Blinn-Phong shading model with rim lighting (diffuse light bleeding to the other side).\r",
              "// |normal|, |view| and |light| should be normalized.\r",
              "float3 blinn_phong(float3 normal, float3 view, float3 light, float3 diffuseColor) {\r",
              "  float3 halfLV = normalize(light + view);\r",
              "  float spe = pow(max( dot(normal, halfLV), Spec.x ), Spec.y);\r",
              "  float dif = dot(normal, light) * 0.1 + 0.15;\r",
              "  return dif*diffuseColor + spe*Specular*Specular.a;\r",
              "}\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "float3 getNormal(float3 p, float offset)\r",
              "{\r",
              "    float dt=.0001;\r",
              "    float3 n=float3(getDistance(p+float3(dt,0,0)),\r",
              "                    getDistance(p+float3(0,dt,0)),\r",
              "                    getDistance(p+float3(0,0,dt)))-getDistance(p);\r",
              "    return normalize(n);\r",
              "}\r",
              "\r",
              "\r",
              "float getAO(float3 aoposition, float3 aonormal, float aodistance, float aoiterations, float aofactor)\r",
              "{\r",
              "    float ao = 0.0;\r",
              "    float k = aofactor;\r",
              "    aodistance /= aoiterations;\r",
              "    for (float i=1; i < 4; i += 1)\r",
              "    {\r",
              "        ao += (i * aodistance - getDistance(aoposition + aonormal * i * aodistance)) / pow(2,i);\r",
              "    }\r",
              "    return 1.0 - k * ao;\r",
              "}\r",
              "/*\r",
              "float4 getTexture2(float3 p, float3 n) \r",
              "{\r",
              "    float s = 1.3;\r",
              "    float dx = abs(n.x);\r",
              "    float dy = abs(n.y);\r",
              "    float dz = abs(n.z);\r",
              "    if (dx > dy  > dz) return  Image.Sample(samLinear, float2(frac(p.z*s), frac(p.y * s))); \r",
              "    if (dy > dz) return  Image.Sample(samLinear, float2(frac(p.x*s), frac(p.z * s)));\r",
              "    return  Image.Sample(samLinear, float2(frac(p.x*s), frac(p.y * s)));\r",
              "}*/\r",
              "\r",
              "float MAX_DIST=300;\r",
              "\r",
              "float3 surfaceColor1 = float3(0.95, 0.64, 0.1);\r",
              "float3 surfaceColor2 = float3(0.89, 0.95, 0.75);\r",
              "float3 surfaceColor3 = float3(0.55, 0.06, 0.03);\r",
              "\r",
              "// Compute the color at |pos|.\r",
              "float3 color(float3 pos) {\r",
              "  float3 p = pos, p0 = p;\r",
              "  float trap = 1.0;\r",
              "\r",
              "  for (int i=0; i<3; i++) {\r",
              "    p.xyz = clamp(p.xyz, -1.0, 1.0) * 2.0 - p.xyz;\r",
              "    float r2 = dot(p.xyz, p.xyz);\r",
              "    p *= clamp(max(Minrad/r2, Minrad), 0.0, 1.0);\r",
              "    p = p*Scale + p0.xyz;\r",
              "    trap = min(trap, r2);\r",
              "  }\r",
              "  // |c.x|: log final distance (fractional iteration count)\r",
              "  // |c.y|: spherical orbit trap at (0,0,0)\r",
              "  float2 c = clamp(float2( 0.33*log(dot(p,p))-1.0, sqrt(trap) ), 0.0, 1.0);\r",
              "\r",
              "  return lerp(lerp(Surface1, Surface2, c.y), Surface3, c.x);\r",
              "}\r",
              "\r",
              "\r",
              "float4 PS( PS_IN input ) : SV_Target\r",
              "{\r",
              "\r",
              "    //float4 filter= Image2.Sample(samLinear, input.texCoord);\r",
              "    float3 p = input.worldTViewPos;\r",
              "    float3 dp = normalize(input.worldTViewDir);\r",
              "\r",
              "  float totalD = 0.0;\r",
              "  float D = 3.4e38;\r",
              "  D=StepSize;\r",
              "  float extraD = 0.0;\r",
              "  float lastD;\r",
              "  \r",
              "  int steps;\r",
              "\r",
              "    /*  \r",
              "    // Intersect the view ray with the Mandelbox using raymarching.\r",
              "    for (steps=0; steps<MaxSteps; steps++) {\r",
              "        lastD = D;\r",
              "        D = getDistance(p + totalD * dp);\r",
              "\r",
              "        // Overstepping: have we jumped too far? Cancel last step.    \r",
              "        if (extraD > 0.0 && D < extraD) {\r",
              "            totalD -= extraD;\r",
              "            extraD = 0.0; \r",
              "            D = 3.4e38;\r",
              "            steps--;\r",
              "            continue;\r",
              "        }\r",
              "\r",
              "        if (D < MinDistance/1000) break;\r",
              "\r",
              "        totalD += D;\r",
              "\r",
              "        // Overstepping is based on the optimal length of the last step.\r",
              "        totalD += extraD = 0.096 * D*(D+extraD)/lastD;\r",
              "    }\r",
              "    */\r",
              "\r",
              "\r",
              "    // SImple iterator\r",
              "    \r",
              "    \r",
              "    for(steps=0;steps<MaxSteps && abs(D)>MinDistance/1000;steps++)\r",
              "    {\r",
              "        D=getDistance(p);\r",
              "        p+=dp*D;\t\r",
              "    }\r",
              "    \r",
              "    \r",
              "    p += totalD * dp;\r",
              "\r",
              "\r",
              "  // Color the surface with Blinn-Phong shading, ambient occlusion and glow.\r",
              "  float3 col = Background;\r",
              "\r",
              "  // We've got a hit or we're not sure.\r",
              "  if (D < MAX_DIST) {\r",
              "    float3 n = normalize( getNormal(p, D));\r",
              "    //n*=float3(1,1,10);\r",
              "    n= normalize(n);\r",
              "    col = color(p);\r",
              "    //col = blinn_phong(n, -dp, normalize(input.worldTViewPos+float3(10,1,0)+dp), col);\r",
              "    col = blinn_phong(n, -dp, LightPos, col);\r",
              "    \r",
              "    //float getAO(float3 aoposition, float3 aonormal, float aodistance, float aoiterations, float aofactor)\r",
              "    float distanceLight = pow(Diffuse.a, length(p-LightPos));\r",
              "\r",
              "    col = lerp(AmbientOcclusion, col + distanceLight*Diffuse, getAO(p,n,AODistance, 5, AmbientOcclusion.a));\r",
              "\r",
              "    // We've gone through all steps, but we haven't hit anything.\r",
              "    // Mix in the background color.\r",
              "    if (D > MinDistance) {\r",
              "      col = lerp(col, Background, clamp(log(D/MinDistance) * DistToColor, 0.0, 1.0));\r",
              "    }\r",
              "  }\r",
              "\r",
              "  // Glow is based on the number of steps.\r",
              "  col = lerp(col, Glow, float(steps)/float(MaxSteps) * Glow.a);\r",
              "  col = lerp(col, Background, clamp(log( length(p- input.worldTViewPos)/Fog), 0,1));\r",
              "    //col = float3(1,1,0);\r",
              "  return float4(col, 1);\r",
              "\r",
              "\r",
              "\r",
              "}\r",
              "//<<< PS\r",
              "\r",
              "//>>> _technique\r",
              "technique10 Render",
              "{",
              "    pass P0",
              "    {",
              "        SetGeometryShader( 0 );",
              "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
              "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
              "    }",
              "}",
              "//<<< _technique\r",
              ""
            ]
          },
          {
            "ID": "097050f1-4b25-484b-aeae-55bbea3793c0",
            "Type": "Float",
            "Value": [
              "0.2499999"
            ]
          },
          {
            "ID": "f5139d14-2cec-482f-a440-3ef5643cfa07",
            "Type": "Float",
            "Value": [
              "2.51"
            ]
          },
          {
            "ID": "9558166e-582a-43da-969c-6967cd074c76",
            "Type": "Float",
            "Value": [
              "-1"
            ]
          },
          {
            "ID": "5af0d6da-3d6b-424d-a9a3-67976cd2926e",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "31d9487b-13ac-45ea-adfe-4dc0890cdcf0",
            "Type": "Float",
            "Value": [
              "2"
            ]
          },
          {
            "ID": "1f88250e-fa9a-4b1f-acc7-6d7c114006f0",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "99c7e81c-93c4-45ba-9d1f-41e1b938ee7e",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "4932bf0d-2040-4a7d-b6b6-79636d1fb9ec",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "cbe2fa3e-e588-4c61-8426-f4b32b85d0fe",
            "Type": "Float",
            "Value": [
              "-0.18"
            ]
          },
          {
            "ID": "43f13535-3e03-4c72-ad71-6531a1d5dd30",
            "Type": "Float",
            "Value": [
              "8.300011"
            ]
          },
          {
            "ID": "816a8894-1fff-4832-b79b-2d3db2275dec",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "1581a9a7-ab2a-4f26-978c-e904a347ceba",
            "Type": "Float",
            "Value": [
              "0.001"
            ]
          },
          {
            "ID": "6287f4bf-1f02-45fb-a3b1-7d78dbca3871",
            "Type": "Float",
            "Value": [
              "23.34501"
            ]
          },
          {
            "ID": "3fa961de-e4ee-438b-923c-f3e4e18fbb98",
            "Type": "Float",
            "Value": [
              "0.09000003"
            ]
          },
          {
            "ID": "d07dfc13-c7ce-42e3-9948-03da412753e2",
            "Type": "Float",
            "Value": [
              "0.1700512"
            ]
          },
          {
            "ID": "92936d2f-e94a-4415-88d6-d676f595874b",
            "Type": "Float",
            "Value": [
              "0.1700512"
            ]
          },
          {
            "ID": "61f46740-43ca-4510-ad13-4cba6eed0156",
            "Type": "Float",
            "Value": [
              "0.1700512"
            ]
          },
          {
            "ID": "a49caba6-87e3-4ae9-bd61-c7dc33e83e0b",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "4fc6eed8-d4a7-47c2-8d25-3b4a4c8f0e53",
            "Type": "Float",
            "Value": [
              "0.01774677"
            ]
          },
          {
            "ID": "f55472a7-3509-4ba2-a285-599c6bfd6e7a",
            "Type": "Float",
            "Value": [
              "0.01015113"
            ]
          },
          {
            "ID": "5a801ea7-7189-49c0-a297-7b6358b804e7",
            "Type": "Float",
            "Value": [
              "0.01606873"
            ]
          },
          {
            "ID": "4b5ba091-c512-498e-8588-71535649a001",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "5d69a672-2d5a-4b8b-8b85-5eb94300134b",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "8220eacc-21c1-4926-b5dc-59e33fd2e055",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "d0fcd8a6-9352-4f07-9593-0afa4e712680",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "92ac7a5e-5a81-46f6-9ec7-e5d2c5c8fe16",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "4c873a01-7009-4a06-a385-3353ba1305b5",
            "Type": "Float",
            "Value": [
              "0.5"
            ]
          },
          {
            "ID": "043705c0-b739-4b1e-8607-05d6345dcd58",
            "Type": "Float",
            "Value": [
              "0.27281"
            ]
          },
          {
            "ID": "98c40404-0454-4135-84e4-5068f5ee553b",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "ac26ba86-d5c2-480a-b1f7-b8070ceb7577",
            "Type": "Float",
            "Value": [
              "0.001000049"
            ]
          },
          {
            "ID": "d3c75309-1709-44a2-9e6c-4d0eb65b5b7e",
            "Type": "Float",
            "Value": [
              "0.04909064"
            ]
          },
          {
            "ID": "3a0c60a8-426b-4980-983f-9f00900b412b",
            "Type": "Float",
            "Value": [
              "0.04578237"
            ]
          },
          {
            "ID": "53f60847-a2ff-4542-a3ec-f9f7605b014d",
            "Type": "Float",
            "Value": [
              "0.04909765"
            ]
          },
          {
            "ID": "8a55cf0d-1139-4f76-8b3f-9f4a6015a04d",
            "Type": "Float",
            "Value": [
              "-0.08000016"
            ]
          },
          {
            "ID": "ee73934c-9d3b-4fdb-8235-b5dcd074b2ef",
            "Type": "Float",
            "Value": [
              "1.1"
            ]
          },
          {
            "ID": "6d6ebdee-6860-4959-a366-bfc6a0650a4c",
            "Type": "Float",
            "Value": [
              "13.02"
            ]
          },
          {
            "ID": "645abe13-e685-4553-b3bb-b4375535d1b5",
            "Type": "Float",
            "Value": [
              "0.04867237"
            ]
          },
          {
            "ID": "4a49c7e3-5a2c-423f-a95b-8f82abf31cd6",
            "Type": "Float",
            "Value": [
              "0.04135569"
            ]
          },
          {
            "ID": "15842c41-9b58-4c60-8215-269d52dcb72c",
            "Type": "Float",
            "Value": [
              "0.0628984"
            ]
          },
          {
            "ID": "ad560863-1d4a-4228-86f8-ba5a52e5b01a",
            "Type": "Float",
            "Value": [
              "-0.57"
            ]
          },
          {
            "ID": "219f8692-c6f2-452a-ab48-f485e7c1aa4c",
            "Type": "Float",
            "Value": [
              "0.1341868"
            ]
          },
          {
            "ID": "a7038ec0-5a93-4ecb-80ca-6e5eda606fbd",
            "Type": "Float",
            "Value": [
              "0.1490574"
            ]
          },
          {
            "ID": "057088a9-da7f-4c84-a4b0-9fb9def374eb",
            "Type": "Float",
            "Value": [
              "0.285"
            ]
          },
          {
            "ID": "bf6dea92-3b8d-40c1-891a-5fb89731531d",
            "Type": "Float",
            "Value": [
              "1.91"
            ]
          },
          {
            "ID": "6cee59e5-f9aa-4ee3-99e4-436414d91605",
            "Type": "Float",
            "Value": [
              "1.76"
            ]
          },
          {
            "ID": "137040bd-419a-4ed5-a262-a06dbfff2c48",
            "Type": "Float",
            "Value": [
              "0.02273091"
            ]
          },
          {
            "ID": "47a14af5-c3fe-43e6-8ee8-ab850d21ad30",
            "Type": "Float",
            "Value": [
              "0.02624993"
            ]
          },
          {
            "ID": "078cef23-4006-4d27-8fff-64ac8c7f8f83",
            "Type": "Float",
            "Value": [
              "0.06621932"
            ]
          },
          {
            "ID": "1431b282-884f-49a3-8779-d6def935f6cf",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "2d11f8c1-d04e-4598-a43e-095ecf5f7943",
            "Type": "Float",
            "Value": [
              "2.29999"
            ]
          },
          {
            "ID": "9ee7394d-2396-47c7-b513-9d39fc7174a6",
            "Type": "Float",
            "Value": [
              "0.08999986"
            ]
          },
          {
            "ID": "ca53b10c-7e9d-4dbb-a1bb-604846252f75",
            "Type": "Float",
            "Value": [
              "2"
            ]
          },
          {
            "ID": "81a5c41c-3a53-439d-bc14-849c0fe26298",
            "Type": "Float",
            "Value": [
              "2.340001"
            ]
          },
          {
            "ID": "e9bbbdd8-dcf0-439a-bc80-81cd4831370f",
            "Type": "Float",
            "Value": [
              "0.2199987"
            ]
          },
          {
            "ID": "a5c17649-ce38-43c0-8cad-9fe661c0e1cf",
            "Type": "Float",
            "Value": [
              "0.2300001"
            ]
          },
          {
            "ID": "df4597e3-94f2-4688-9ac4-29a9a7eb6df8",
            "Type": "Float",
            "Value": [
              "0.4599991"
            ]
          },
          {
            "ID": "a7b48497-7c8e-4722-9ecd-114859f2d3ee",
            "Type": "Float",
            "Value": [
              "-2.393998"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "StillLogoDF",
      "MetaInstanceID": "ac072583-fe9a-4912-8d46-c1f9fa2124f9",
      "MetaID": "481939c8-42d5-4808-bbaf-f2eff0893797",
      "OperatorProperties": {
        "Name": "FractalFlood",
        "PosX": "1227.11382269288",
        "PosY": "1610.05988893319",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "79994f7d-5d4c-40eb-b043-efec2ef2b05c",
            "Type": "Text",
            "Value": [
              "//>>> _common parameters\r",
              "float4x4 objectToWorldMatrix;",
              "float4x4 worldToCameraMatrix;",
              "float4x4 projMatrix;",
              "Texture2D txDiffuse;",
              "float2 RenderTargetSize;",
              "//<<< _common parameters\r",
              "\r",
              "//>>> _parameters\r",
              "float Minrad;",
              "float Scale;",
              "float3 Clamping;",
              "float2 Fold;",
              "float3 Increment;",
              "float MaxSteps;",
              "float StepSize;",
              "float MinDistance;",
              "float MaxDistance;",
              "float DistToColor;",
              "float4 Surface1;",
              "float4 Surface2;",
              "float4 Surface3;",
              "float4 Diffuse;",
              "float4 Specular;",
              "float2 Spec;",
              "float4 Glow;",
              "float4 AmbientOcclusion;",
              "float AODistance;",
              "float4 Background;",
              "float Fog;",
              "float3 LightPos;",
              "float3 SpherePos;",
              "float SphereRadius;",
              "//<<< _parameters\r",
              "float4x4 ViewToWorld;\r",
              " \r",
              "//>>> setup\r",
              "SamplerState samLinear\r",
              "{\r",
              "    Filter = MIN_MAG_MIP_LINEAR;\r",
              "    AddressU = Clamp;\r",
              "    AddressV = Clamp;\r",
              "};\r",
              "//<<< setup\r",
              "\r",
              "//>>> declarations\r",
              "struct VS_IN\r",
              "{\r",
              "    float4 pos : POSITION;\r",
              "    float2 texCoord : TEXCOORD;\r",
              "};\r",
              "\r",
              "struct PS_IN\r",
              "{\r",
              "    float4 pos : SV_POSITION;\r",
              "    float2 texCoord: TEXCOORD0;\t    \r",
              "    float3 worldTViewPos: TEXCOORD1;\r",
              "    float3 worldTViewDir: TEXCOORD2;\r",
              "};\r",
              "//<<< declarations\r",
              "\r",
              "//>>> _GS\r",
              "",
              "//<<< _GS\r",
              "\r",
              "//>>> VS \r",
              "PS_IN VS( VS_IN input )\r",
              "{\r",
              "    PS_IN output = (PS_IN)0;\r",
              "    input.pos = mul(input.pos, objectToWorldMatrix); \r",
              "    output.pos = mul(input.pos, worldToCameraMatrix);\r",
              "    output.pos = mul(output.pos, projMatrix);\r",
              "    output.texCoord = input.texCoord;\r",
              "\r",
              "    float4 viewTNearFragPos = float4(input.texCoord.x*2.0 - 1.0, -input.texCoord.y*2.0 + 1.0, 0.0, 1.0);\r",
              "    float4 worldTNearFragPos = mul(viewTNearFragPos, ViewToWorld);\r",
              "    worldTNearFragPos /= worldTNearFragPos.w;\r",
              "\r",
              "    float4 viewTFarFragPos = float4(input.texCoord.x*2.0 - 1.0, -input.texCoord.y*2.0 + 1.0, 1.0, 1.0);\r",
              "    float4 worldTFarFragPos = mul(viewTFarFragPos, ViewToWorld);\r",
              "    worldTFarFragPos /= worldTFarFragPos.w;\r",
              "\r",
              "    output.worldTViewDir = normalize(worldTFarFragPos.xyz - worldTNearFragPos.xyz);\r",
              "\r",
              "    output.worldTViewPos = worldTNearFragPos;\r",
              "    return output;\r",
              "}\r",
              "//<<< VS\r",
              "\r",
              "//>>> PS\r",
              "\r",
              "\r",
              "float dSphere(float3 p0) {\r",
              "    return length(p0+float4(SpherePos.xyz,1))-SphereRadius;\r",
              "}\r",
              "\r",
              "float udCubes(float3 p) {\r",
              "    float3 b= float3(1,10,0.2);\r",
              "    float3 c= float3(SpherePos.x,SpherePos.y,SpherePos.z);\r",
              "    float3 q = fmod(p,c)-0.5*c;\r",
              "    float3  di = abs(p) - b;\r",
              "    //float mc = maxcomp(di);\r",
              "    //return min(mc,length(max(di,0.0)));  \r",
              "    float rad=SphereRadius;\r",
              "    return length( max( abs(q) - b + float3(rad,rad,rad), 0.0 ) ) - rad;\r",
              "    //return length(max(abs(p)-b,0.0));\r",
              "    \r",
              "}\r",
              "\r",
              "float BOX_RADIUS= 0.03;\r",
              "float dBox(float3 p, float3 b) {\r",
              "    return length( max( abs(p) - b + float3(BOX_RADIUS,BOX_RADIUS,BOX_RADIUS), 0.0 ) ) - BOX_RADIUS;\r",
              "}\r",
              "\r",
              "\r",
              "float mod (float a, float b) {\r",
              "    return  a - b * floor(a/b);\r",
              "}\r",
              "\r",
              "float maxcomp(float3 v) {\r",
              "    if(v.x > v.y && v.x > v.z) return v.x;\r",
              "    if(v.y > v.z) return v.y;\r",
              "    return v.z;\r",
              "}\r",
              "\r",
              "float sdBox( float3 p, float3 b )\r",
              "{\r",
              "  float3  di = abs(p) - b;\r",
              "  float mc = maxcomp(di);\r",
              "  return min(mc,length(max(di,0.0)));\r",
              "}\r",
              "\r",
              "float sdBox2(float2 p, float2 b) {\r",
              "  float2  di = abs(p) - b;\r",
              "  float mc = max(di.x, di.y);\r",
              "  return min(mc,length(max(di,0.0)));\r",
              "}\r",
              "\r",
              "float sdCross( in float3 p, float d )\r",
              "{\r",
              "  float da = sdBox2(p.xy, float2(d, 1.0));\r",
              "  float db = sdBox2(p.yz,float2(d, 1.0));\r",
              "  float dc = sdBox2(p.zx,float2(d, 1.0));\r",
              "  return min(da,min(db,dc));\r",
              "}\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "float3 rep(float3 p, float3 c) {\r",
              "    return float3( \r",
              "            mod(p.x,c.x),  \r",
              "            mod(p.y,c.y), \r",
              "            mod(p.z,c.z)) - 0.5*c;\r",
              "    \r",
              "\r",
              "}\r",
              "\r",
              "float dRepeatedXBars(float3 p, float3 r, float h, float w) {\r",
              "    float3 p1= rep(p, r);\r",
              "    return sdBox2(p1.xy, float2(h, w));;\r",
              "}\r",
              "\r",
              "float dRepeatedYBars(float3 p, float3 r, float h, float w) {\r",
              "    float3 p1= rep(p, r);\r",
              "    return sdBox2(p1.xz, float2(h, w));;\r",
              "}\r",
              "float dRepeatedZBars(float3 p, float3 r, float h, float w) {\r",
              "    float3 p1= rep(p, r);\r",
              "    return sdBox2(p1.yz, float2(h, w));;\r",
              "}\r",
              "\r",
              "\r",
              "int iters = 7;\r",
              "\r",
              "// Compute the distance from |pos| to the Mandelbox.\r",
              "float sdMandelBox(float3 pos) {\r",
              "    float4 pN = float4(pos,1);\r",
              "    // precomputed constants\r",
              "    float minRad2 = clamp(Minrad, 1.0e-9, 1.0);\r",
              "    float4 scale = float4(Scale, Scale, Scale, abs(Scale)) / minRad2 ;\r",
              "    float absScalem1 = abs(Scale - 1.0);\r",
              "    float AbsScaleRaisedTo1mIters = pow(abs(Scale), float(1-iters));\r",
              "    float DIST_MULTIPLIER = StepSize;\r",
              "\r",
              "    float4 p = float4(pos,1);\r",
              "    float4 p0 = p;  // p.w is the distance estimate\r",
              "  \r",
              "\r",
              "  for (int i=0; i<iters; i++) {\r",
              "     //box folding: \r",
              "     //if (p>1) p = 2-p; else if (p<-1) p = -2-p;\r",
              "    p.xyz = abs(1+p.xyz) - p.xyz - abs(1.0-p.xyz);  // add;add;abs.add;abs.add (130.4%)\r",
              "    //p.xyz = clamp(p.xyz*0.5+0.5, 0.0, 1.0) * 4.0 - 2.0 - p.xyz;  // mad.sat;mad;add (102.3%)    \r",
              "    //p.xyz = clamp(p.xyz, -1.0, 1.0) * 2.0 - p.xyz;  // min;max;mad    \r",
              "    p.xyz = clamp(p.xyz, Clamping.x, Clamping.y) * Clamping.z - p.xyz;  // min;max;mad\r",
              "    \r",
              "\r",
              "    // sphere folding: if (r2 < minRad2) p /= minRad2; else if (r2 < 1.0) p /= r2;\r",
              "    float r2 = dot(p.xyz, p.xyz);\r",
              "    p *= clamp(max(minRad2/r2, minRad2), Fold.x, Fold.y);  // dp3,div,max.sat,mul\r",
              "    p.xyz+= float3(Increment.x,Increment.y,Increment.z);\r",
              "    // scale, translate\r",
              "    p = p*scale + p0;\r",
              "  }\r",
              "  float d=((length(p.xyz) - absScalem1) / p.w - AbsScaleRaisedTo1mIters) * DIST_MULTIPLIER;\r",
              "  return d;\r",
              "  //d=0.1;\r",
              "  //return max(udCubes(p0),d );\r",
              "  //return max( udCubes(p0), dStillLogo(p0));\r",
              "  //return min(dStillLogo(pN), d);\r",
              "}\r",
              "\r",
              "\r",
              "float dRotatedBoxes(float3 p) {\r",
              "    float angle= SphereRadius;\r",
              "    float3 pRotated= float3(p.x * cos(angle) - p.y * sin(angle), \r",
              "                            p.x * sin(angle) + p.y * cos(angle),\r",
              "                            p.z);\r",
              "    pRotated= rep(pRotated, SpherePos);\r",
              "    return sdBox( pRotated, float3(3,3,1));\r",
              "    \r",
              "}\r",
              "\r",
              "\r",
              "float getDistance(float3 p) {\r",
              "    //float dPlanes = dRotatedPlanes(p, 5);\r",
              "    //float dColumns= dBox( float3( mod(p.x,0),mod(p.y,3.2),mod(p.z,2))  - float3( 1,0,0), float3(10.5,2.5,0.5));\r",
              "    \r",
              "    //return max(dPlanes , dColumns);\r",
              "    //return dPlanes;\r",
              "    //return max(dPlanes, dBox(p, float3(4,4,4)));\r",
              "    //p= float3( mod(p.x,3),  mod(p.y,5), mod(p.z,6));\r",
              "    //p= rep(p, float3(SpherePos.x/p.y,SpherePos.y*p.x,SpherePos.z*p.x/p.y));\r",
              "    float3 p1= rep(p, float3(SpherePos.x,SpherePos.y, SpherePos.z));\r",
              "    float dBars= sdCross(p1, float3(20,16,7));\r",
              "    \r",
              "    //float3 p2= rep(p, float3(2,10, 1));\r",
              "    //float dBox= sdBox(p2, float3(1,10,14));\r",
              "    float d=10000;\r",
              "    \r",
              "    \r",
              "    //d= max(d, sdBox(p, SpherePos)); //limit to big block\r",
              "    d=min(d,sdMandelBox(p));\r",
              "    d= max(d, dRepeatedYBars(p, 0.2, 0.72,1.8));  //big blocks\r",
              "    d= min( d, dRotatedBoxes(p));\r",
              "    //d= min(d, dSphere(p));\r",
              "    \r",
              "    // surface ace offeset\r",
              "    //d+= clamp(dRepeatedYBars(p, SpherePos, 0.1,1) , \r",
              "    //    0,0.001);\r",
              "        \r",
              "    d+= clamp( sdBox(\r",
              "                   rep(p,  float3(0.22, 0.23, 0.46)), \r",
              "                    float3(0.1, 0.1, 0.2)) , \r",
              "         0,0.006);\r",
              "    \r",
              "    //streetx\r",
              "    d= min(d, dRepeatedXBars(p, float3(5.1,1.1,0.1) , 0.05,0.01));\r",
              "    d= min(d, dRepeatedZBars(p - float3(10.4,0.30,3.0) , float3(4.1,2.1,3.1) , 0.05,0.01));\r",
              "    \r",
              "    d= min(d, sdBox( p+float3(0,7,0), float3(1000,1,1000)));\r",
              "    return d;\r",
              "    \r",
              "}\r",
              "\r",
              "\r",
              "// Blinn-Phong shading model with rim lighting (diffuse light bleeding to the other side).\r",
              "// |normal|, |view| and |light| should be normalized.\r",
              "float3 blinn_phong(float3 normal, float3 view, float3 light, float3 diffuseColor) {\r",
              "  float3 halfLV = normalize(light + view);\r",
              "  float spe = pow(max( dot(normal, halfLV), Spec.x ), Spec.y);\r",
              "  float dif = dot(normal, light) * 0.1 + 0.15;\r",
              "  return dif*diffuseColor + spe*Specular*Specular.a;\r",
              "}\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "float3 getNormal(float3 p, float offset)\r",
              "{\r",
              "    float dt=.0001;\r",
              "    float3 n=float3(getDistance(p+float3(dt,0,0)),\r",
              "                    getDistance(p+float3(0,dt,0)),\r",
              "                    getDistance(p+float3(0,0,dt)))-getDistance(p);\r",
              "    return normalize(n);\r",
              "}\r",
              "\r",
              "\r",
              "float getAO(float3 aoposition, float3 aonormal, float aodistance, float aoiterations, float aofactor)\r",
              "{\r",
              "    float ao = 0.0;\r",
              "    float k = aofactor;\r",
              "    aodistance /= aoiterations;\r",
              "    for (float i=1; i < 4; i += 1)\r",
              "    {\r",
              "        ao += (i * aodistance - getDistance(aoposition + aonormal * i * aodistance)) / pow(2,i);\r",
              "    }\r",
              "    return 1.0 - k * ao;\r",
              "}\r",
              "/*\r",
              "float4 getTexture2(float3 p, float3 n) \r",
              "{\r",
              "    float s = 1.3;\r",
              "    float dx = abs(n.x);\r",
              "    float dy = abs(n.y);\r",
              "    float dz = abs(n.z);\r",
              "    if (dx > dy  > dz) return  Image.Sample(samLinear, float2(frac(p.z*s), frac(p.y * s))); \r",
              "    if (dy > dz) return  Image.Sample(samLinear, float2(frac(p.x*s), frac(p.z * s)));\r",
              "    return  Image.Sample(samLinear, float2(frac(p.x*s), frac(p.y * s)));\r",
              "}*/\r",
              "\r",
              "float MAX_DIST=300;\r",
              "\r",
              "float3 surfaceColor1 = float3(0.95, 0.64, 0.1);\r",
              "float3 surfaceColor2 = float3(0.89, 0.95, 0.75);\r",
              "float3 surfaceColor3 = float3(0.55, 0.06, 0.03);\r",
              "\r",
              "// Compute the color at |pos|.\r",
              "float3 color(float3 pos) {\r",
              "  float3 p = pos, p0 = p;\r",
              "  float trap = 1.0;\r",
              "\r",
              "  for (int i=0; i<3; i++) {\r",
              "    p.xyz = clamp(p.xyz, -1.0, 1.0) * 2.0 - p.xyz;\r",
              "    float r2 = dot(p.xyz, p.xyz);\r",
              "    p *= clamp(max(Minrad/r2, Minrad), 0.0, 1.0);\r",
              "    p = p*Scale + p0.xyz;\r",
              "    trap = min(trap, r2);\r",
              "  }\r",
              "  // |c.x|: log final distance (fractional iteration count)\r",
              "  // |c.y|: spherical orbit trap at (0,0,0)\r",
              "  float2 c = clamp(float2( 0.33*log(dot(p,p))-1.0, sqrt(trap) ), 0.0, 1.0);\r",
              "\r",
              "  return lerp(lerp(Surface1, Surface2, c.y), Surface3, c.x);\r",
              "}\r",
              "\r",
              "\r",
              "float4 PS( PS_IN input ) : SV_Target\r",
              "{\r",
              "\r",
              "    //float4 filter= Image2.Sample(samLinear, input.texCoord);\r",
              "    float3 p = input.worldTViewPos;\r",
              "    float3 dp = normalize(input.worldTViewDir);\r",
              "\r",
              "  float totalD = 0.0;\r",
              "  float D = 3.4e38;\r",
              "  D=StepSize;\r",
              "  float extraD = 0.0;\r",
              "  float lastD;\r",
              "  \r",
              "  int steps;\r",
              "\r",
              "    /*  \r",
              "    // Intersect the view ray with the Mandelbox using raymarching.\r",
              "    for (steps=0; steps<MaxSteps; steps++) {\r",
              "        lastD = D;\r",
              "        D = getDistance(p + totalD * dp);\r",
              "\r",
              "        // Overstepping: have we jumped too far? Cancel last step.    \r",
              "        if (extraD > 0.0 && D < extraD) {\r",
              "            totalD -= extraD;\r",
              "            extraD = 0.0; \r",
              "            D = 3.4e38;\r",
              "            steps--;\r",
              "            continue;\r",
              "        }\r",
              "\r",
              "        if (D < MinDistance/1000) break;\r",
              "\r",
              "        totalD += D;\r",
              "\r",
              "        // Overstepping is based on the optimal length of the last step.\r",
              "        totalD += extraD = 0.096 * D*(D+extraD)/lastD;\r",
              "    }\r",
              "    */\r",
              "\r",
              "\r",
              "    // SImple iterator\r",
              "    \r",
              "    \r",
              "    for(steps=0;steps<MaxSteps && abs(D)>MinDistance/1000;steps++)\r",
              "    {\r",
              "        D=getDistance(p);\r",
              "        p+=dp*D;\t\r",
              "    }\r",
              "    \r",
              "    \r",
              "    p += totalD * dp;\r",
              "\r",
              "\r",
              "  // Color the surface with Blinn-Phong shading, ambient occlusion and glow.\r",
              "  float3 col = Background;\r",
              "\r",
              "  // We've got a hit or we're not sure.\r",
              "  if (D < MAX_DIST) {\r",
              "    float3 n = normalize( getNormal(p, D));\r",
              "    //n*=float3(1,1,10);\r",
              "    n= normalize(n);\r",
              "    col = color(p);\r",
              "    //col = blinn_phong(n, -dp, normalize(input.worldTViewPos+float3(10,1,0)+dp), col);\r",
              "    col = blinn_phong(n, -dp, LightPos, col);\r",
              "    \r",
              "    //float getAO(float3 aoposition, float3 aonormal, float aodistance, float aoiterations, float aofactor)\r",
              "    float distanceLight = pow(Diffuse.a, length(p-LightPos));\r",
              "\r",
              "    col = lerp(AmbientOcclusion, col + distanceLight*Diffuse, getAO(p,n,AODistance, 4, AmbientOcclusion.a));\r",
              "\r",
              "    // We've gone through all steps, but we haven't hit anything.\r",
              "    // Mix in the background color.\r",
              "    if (D > MinDistance) {\r",
              "      col = lerp(col, Background, clamp(log(D/MinDistance) * DistToColor, 0.0, 1.0));\r",
              "    }\r",
              "  }\r",
              "\r",
              "  // Glow is based on the number of steps.\r",
              "  col = lerp(col, Glow, float(steps)/float(MaxSteps) * Glow.a);\r",
              "  col = lerp(col, Background, clamp(log( length(p- input.worldTViewPos)/Fog), 0,1));\r",
              "    //col = float3(1,1,0);\r",
              "  return float4(col, 1);\r",
              "\r",
              "\r",
              "\r",
              "}\r",
              "//<<< PS\r",
              "\r",
              "//>>> _technique\r",
              "technique10 Render",
              "{",
              "    pass P0",
              "    {",
              "        SetGeometryShader( 0 );",
              "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
              "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
              "    }",
              "}",
              "//<<< _technique\r",
              ""
            ]
          },
          {
            "ID": "097050f1-4b25-484b-aeae-55bbea3793c0",
            "Type": "Float",
            "Value": [
              "0.2499999"
            ]
          },
          {
            "ID": "f5139d14-2cec-482f-a440-3ef5643cfa07",
            "Type": "Float",
            "Value": [
              "2.51"
            ]
          },
          {
            "ID": "9558166e-582a-43da-969c-6967cd074c76",
            "Type": "Float",
            "Value": [
              "-1"
            ]
          },
          {
            "ID": "5af0d6da-3d6b-424d-a9a3-67976cd2926e",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "31d9487b-13ac-45ea-adfe-4dc0890cdcf0",
            "Type": "Float",
            "Value": [
              "2"
            ]
          },
          {
            "ID": "1f88250e-fa9a-4b1f-acc7-6d7c114006f0",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "99c7e81c-93c4-45ba-9d1f-41e1b938ee7e",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "4932bf0d-2040-4a7d-b6b6-79636d1fb9ec",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "cbe2fa3e-e588-4c61-8426-f4b32b85d0fe",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "f3cce3db-1ca4-4143-9d1d-604b35a49bb2",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "43f13535-3e03-4c72-ad71-6531a1d5dd30",
            "Type": "Float",
            "Value": [
              "58.47605"
            ]
          },
          {
            "ID": "816a8894-1fff-4832-b79b-2d3db2275dec",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "1581a9a7-ab2a-4f26-978c-e904a347ceba",
            "Type": "Float",
            "Value": [
              "0.001"
            ]
          },
          {
            "ID": "6287f4bf-1f02-45fb-a3b1-7d78dbca3871",
            "Type": "Float",
            "Value": [
              "23.34501"
            ]
          },
          {
            "ID": "3fa961de-e4ee-438b-923c-f3e4e18fbb98",
            "Type": "Float",
            "Value": [
              "0.43"
            ]
          },
          {
            "ID": "d07dfc13-c7ce-42e3-9948-03da412753e2",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "92936d2f-e94a-4415-88d6-d676f595874b",
            "Type": "Float",
            "Value": [
              "0.1464037"
            ]
          },
          {
            "ID": "61f46740-43ca-4510-ad13-4cba6eed0156",
            "Type": "Float",
            "Value": [
              "0.1464037"
            ]
          },
          {
            "ID": "a49caba6-87e3-4ae9-bd61-c7dc33e83e0b",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "4fc6eed8-d4a7-47c2-8d25-3b4a4c8f0e53",
            "Type": "Float",
            "Value": [
              "0.07923657"
            ]
          },
          {
            "ID": "f55472a7-3509-4ba2-a285-599c6bfd6e7a",
            "Type": "Float",
            "Value": [
              "0.1489131"
            ]
          },
          {
            "ID": "5a801ea7-7189-49c0-a297-7b6358b804e7",
            "Type": "Float",
            "Value": [
              "0.1694746"
            ]
          },
          {
            "ID": "4b5ba091-c512-498e-8588-71535649a001",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "5d69a672-2d5a-4b8b-8b85-5eb94300134b",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "8220eacc-21c1-4926-b5dc-59e33fd2e055",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "d0fcd8a6-9352-4f07-9593-0afa4e712680",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "92ac7a5e-5a81-46f6-9ec7-e5d2c5c8fe16",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "4c873a01-7009-4a06-a385-3353ba1305b5",
            "Type": "Float",
            "Value": [
              "0.8149999"
            ]
          },
          {
            "ID": "043705c0-b739-4b1e-8607-05d6345dcd58",
            "Type": "Float",
            "Value": [
              "0.2009863"
            ]
          },
          {
            "ID": "98c40404-0454-4135-84e4-5068f5ee553b",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "ac26ba86-d5c2-480a-b1f7-b8070ceb7577",
            "Type": "Float",
            "Value": [
              "0.6110001"
            ]
          },
          {
            "ID": "d3c75309-1709-44a2-9e6c-4d0eb65b5b7e",
            "Type": "Float",
            "Value": [
              "0.4267178"
            ]
          },
          {
            "ID": "3a0c60a8-426b-4980-983f-9f00900b412b",
            "Type": "Float",
            "Value": [
              "0.431587"
            ]
          },
          {
            "ID": "53f60847-a2ff-4542-a3ec-f9f7605b014d",
            "Type": "Float",
            "Value": [
              "0.5064228"
            ]
          },
          {
            "ID": "8a55cf0d-1139-4f76-8b3f-9f4a6015a04d",
            "Type": "Float",
            "Value": [
              "1.76"
            ]
          },
          {
            "ID": "ee73934c-9d3b-4fdb-8235-b5dcd074b2ef",
            "Type": "Float",
            "Value": [
              "0.89"
            ]
          },
          {
            "ID": "6d6ebdee-6860-4959-a366-bfc6a0650a4c",
            "Type": "Float",
            "Value": [
              "29.69"
            ]
          },
          {
            "ID": "645abe13-e685-4553-b3bb-b4375535d1b5",
            "Type": "Float",
            "Value": [
              "0.04867237"
            ]
          },
          {
            "ID": "4a49c7e3-5a2c-423f-a95b-8f82abf31cd6",
            "Type": "Float",
            "Value": [
              "0.04135569"
            ]
          },
          {
            "ID": "15842c41-9b58-4c60-8215-269d52dcb72c",
            "Type": "Float",
            "Value": [
              "0.0628984"
            ]
          },
          {
            "ID": "ad560863-1d4a-4228-86f8-ba5a52e5b01a",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "219f8692-c6f2-452a-ab48-f485e7c1aa4c",
            "Type": "Float",
            "Value": [
              "0.06776762"
            ]
          },
          {
            "ID": "a7038ec0-5a93-4ecb-80ca-6e5eda606fbd",
            "Type": "Float",
            "Value": [
              "0.07152263"
            ]
          },
          {
            "ID": "057088a9-da7f-4c84-a4b0-9fb9def374eb",
            "Type": "Float",
            "Value": [
              "0.1058498"
            ]
          },
          {
            "ID": "bf6dea92-3b8d-40c1-891a-5fb89731531d",
            "Type": "Float",
            "Value": [
              "2.01"
            ]
          },
          {
            "ID": "6cee59e5-f9aa-4ee3-99e4-436414d91605",
            "Type": "Float",
            "Value": [
              "1.56"
            ]
          },
          {
            "ID": "137040bd-419a-4ed5-a262-a06dbfff2c48",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "47a14af5-c3fe-43e6-8ee8-ab850d21ad30",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "078cef23-4006-4d27-8fff-64ac8c7f8f83",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "1431b282-884f-49a3-8779-d6def935f6cf",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "2d11f8c1-d04e-4598-a43e-095ecf5f7943",
            "Type": "Float",
            "Value": [
              "71.84"
            ]
          },
          {
            "ID": "9ee7394d-2396-47c7-b513-9d39fc7174a6",
            "Type": "Float",
            "Value": [
              "2.57"
            ]
          },
          {
            "ID": "ca53b10c-7e9d-4dbb-a1bb-604846252f75",
            "Type": "Float",
            "Value": [
              "2.25"
            ]
          },
          {
            "ID": "81a5c41c-3a53-439d-bc14-849c0fe26298",
            "Type": "Float",
            "Value": [
              "-8.379999"
            ]
          },
          {
            "ID": "e9bbbdd8-dcf0-439a-bc80-81cd4831370f",
            "Type": "Float",
            "Value": [
              "9.639994"
            ]
          },
          {
            "ID": "a5c17649-ce38-43c0-8cad-9fe661c0e1cf",
            "Type": "Float",
            "Value": [
              "7.25"
            ]
          },
          {
            "ID": "df4597e3-94f2-4688-9ac4-29a9a7eb6df8",
            "Type": "Float",
            "Value": [
              "4.92"
            ]
          },
          {
            "ID": "a7b48497-7c8e-4722-9ecd-114859f2d3ee",
            "Type": "Float",
            "Value": [
              "260.506"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "StillLogoDF (2)",
      "MetaInstanceID": "4f637de0-97fe-4780-915f-04e4c9ab91b1",
      "MetaID": "9c2d3dcb-86e9-48b6-9265-bd2c7ccc3c68",
      "OperatorProperties": {
        "Name": "CityFassade",
        "PosX": "1449.5679255091",
        "PosY": "1443.07987395353",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "db8f356f-ed86-4901-b633-777c8caad5c2",
            "Type": "Text",
            "Value": [
              "//>>> _common parameters\r",
              "float4x4 objectToWorldMatrix;",
              "float4x4 worldToCameraMatrix;",
              "float4x4 projMatrix;",
              "Texture2D txDiffuse;",
              "float2 RenderTargetSize;",
              "//<<< _common parameters\r",
              "\r",
              "//>>> _parameters\r",
              "float Minrad;",
              "float Scale;",
              "float3 Clamping;",
              "float2 Fold;",
              "float3 Increment;",
              "float MaxSteps;",
              "float StepSize;",
              "float MinDistance;",
              "float MaxDistance;",
              "float DistToColor;",
              "float4 Surface1;",
              "float4 Surface2;",
              "float4 Surface3;",
              "float4 Diffuse;",
              "float4 Specular;",
              "float2 Spec;",
              "float4 Glow;",
              "float4 AmbientOcclusion;",
              "float AODistance;",
              "float4 Background;",
              "float Fog;",
              "float3 LightPos;",
              "float3 SpherePos;",
              "float SphereRadius;",
              "float3 B;",
              "//<<< _parameters\r",
              "float4x4 ViewToWorld;\r",
              " \r",
              "//>>> setup\r",
              "SamplerState samLinear\r",
              "{\r",
              "    Filter = MIN_MAG_MIP_LINEAR;\r",
              "    AddressU = Clamp;\r",
              "    AddressV = Clamp;\r",
              "};\r",
              "//<<< setup\r",
              "\r",
              "//>>> declarations\r",
              "struct VS_IN\r",
              "{\r",
              "    float4 pos : POSITION;\r",
              "    float2 texCoord : TEXCOORD;\r",
              "};\r",
              "\r",
              "struct PS_IN\r",
              "{\r",
              "    float4 pos : SV_POSITION;\r",
              "    float2 texCoord: TEXCOORD0;\t    \r",
              "    float3 worldTViewPos: TEXCOORD1;\r",
              "    float3 worldTViewDir: TEXCOORD2;\r",
              "};\r",
              "//<<< declarations\r",
              "\r",
              "//>>> _GS\r",
              "",
              "//<<< _GS\r",
              "\r",
              "//>>> VS \r",
              "PS_IN VS( VS_IN input )\r",
              "{\r",
              "    PS_IN output = (PS_IN)0;\r",
              "    input.pos = mul(input.pos, objectToWorldMatrix); \r",
              "    output.pos = mul(input.pos, worldToCameraMatrix);\r",
              "    output.pos = mul(output.pos, projMatrix);\r",
              "    output.texCoord = input.texCoord;\r",
              "\r",
              "    float4 viewTNearFragPos = float4(input.texCoord.x*2.0 - 1.0, -input.texCoord.y*2.0 + 1.0, 0.0, 1.0);\r",
              "    float4 worldTNearFragPos = mul(viewTNearFragPos, ViewToWorld);\r",
              "    worldTNearFragPos /= worldTNearFragPos.w;\r",
              "\r",
              "    float4 viewTFarFragPos = float4(input.texCoord.x*2.0 - 1.0, -input.texCoord.y*2.0 + 1.0, 1.0, 1.0);\r",
              "    float4 worldTFarFragPos = mul(viewTFarFragPos, ViewToWorld);\r",
              "    worldTFarFragPos /= worldTFarFragPos.w;\r",
              "\r",
              "    output.worldTViewDir = normalize(worldTFarFragPos.xyz - worldTNearFragPos.xyz);\r",
              "\r",
              "    output.worldTViewPos = worldTNearFragPos;\r",
              "    return output;\r",
              "}\r",
              "//<<< VS\r",
              "\r",
              "//>>> PS\r",
              "\r",
              "\r",
              "float dSphere(float3 p0) {\r",
              "    return length(p0+float4(SpherePos.xyz,1))-SphereRadius;\r",
              "}\r",
              "\r",
              "float udCubes(float3 p) {\r",
              "    float3 b= float3(1,10,0.2);\r",
              "    float3 c= float3(SpherePos.x,SpherePos.y,SpherePos.z);\r",
              "    float3 q = fmod(p,c)-0.5*c;\r",
              "    float3  di = abs(p) - b;\r",
              "    //float mc = maxcomp(di);\r",
              "    //return min(mc,length(max(di,0.0)));  \r",
              "    float rad=SphereRadius;\r",
              "    return length( max( abs(q) - b + float3(rad,rad,rad), 0.0 ) ) - rad;\r",
              "    //return length(max(abs(p)-b,0.0));\r",
              "    \r",
              "}\r",
              "\r",
              "float BOX_RADIUS= 0.03;\r",
              "float dBox(float3 p, float3 b) {\r",
              "    return length( max( abs(p) - b + float3(BOX_RADIUS,BOX_RADIUS,BOX_RADIUS), 0.0 ) ) - BOX_RADIUS;\r",
              "}\r",
              "\r",
              "\r",
              "float mod (float a, float b) {\r",
              "    return  a - b * floor(a/b);\r",
              "}\r",
              "\r",
              "float maxcomp(float3 v) {\r",
              "    if(v.x > v.y && v.x > v.z) return v.x;\r",
              "    if(v.y > v.z) return v.y;\r",
              "    return v.z;\r",
              "}\r",
              "\r",
              "float sdBox( float3 p, float3 b )\r",
              "{\r",
              "  float3  di = abs(p) - b;\r",
              "  float mc = maxcomp(di);\r",
              "  return min(mc,length(max(di,0.0)));\r",
              "}\r",
              "\r",
              "float sdBox2(float2 p, float2 b) {\r",
              "  float2  di = abs(p) - b;\r",
              "  float mc = max(di.x, di.y);\r",
              "  return min(mc,length(max(di,0.0)));\r",
              "}\r",
              "\r",
              "float sdCross( in float3 p, float d )\r",
              "{\r",
              "  float da = sdBox2(p.xy, float2(d, 1.0));\r",
              "  float db = sdBox2(p.yz,float2(d, 1.0));\r",
              "  float dc = sdBox2(p.zx,float2(d, 1.0));\r",
              "  return min(da,min(db,dc));\r",
              "}\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "float3 rep(float3 p, float3 c) {\r",
              "    return float3( \r",
              "            mod(p.x,c.x),  \r",
              "            mod(p.y,c.y), \r",
              "            mod(p.z,c.z)) - 0.5*c;\r",
              "    \r",
              "\r",
              "}\r",
              "\r",
              "float dRepeatedXBars(float3 p, float3 r, float h, float w) {\r",
              "    float3 p1= rep(p, r);\r",
              "    return sdBox2(p1.xy, float2(h, w));;\r",
              "}\r",
              "\r",
              "float dRepeatedYBars(float3 p, float3 r, float h, float w) {\r",
              "    float3 p1= rep(p, r);\r",
              "    return sdBox2(p1.xz, float2(h, w));;\r",
              "}\r",
              "float dRepeatedZBars(float3 p, float3 r, float h, float w) {\r",
              "    float3 p1= rep(p, r);\r",
              "    return sdBox2(p1.yz, float2(h, w));;\r",
              "}\r",
              "\r",
              "\r",
              "int iters =6;\r",
              "\r",
              "// Compute the distance from |pos| to the Mandelbox.\r",
              "float sdMandelBox(float3 pos) {\r",
              "    float4 pN = float4(pos,1);\r",
              "    // precomputed constants\r",
              "    float minRad2 = clamp(Minrad, 1.0e-9, 1.0);\r",
              "    float4 scale = float4(Scale, Scale, Scale, abs(Scale)) / minRad2 ;\r",
              "    float absScalem1 = abs(Scale - 1.0);\r",
              "    float AbsScaleRaisedTo1mIters = pow(abs(Scale), float(1-iters));\r",
              "    float DIST_MULTIPLIER = StepSize;\r",
              "\r",
              "    float4 p = float4(pos,1);\r",
              "    float4 p0 = p;  // p.w is the distance estimate\r",
              "  \r",
              "\r",
              "  for (int i=0; i<iters; i++) {\r",
              "     //box folding: \r",
              "     //if (p>1) p = 2-p; else if (p<-1) p = -2-p;\r",
              "    p.xyz = abs(1+p.xyz) - p.xyz - abs(1.0-p.xyz);  // add;add;abs.add;abs.add (130.4%)\r",
              "    //p.xyz = clamp(p.xyz*0.5+0.5, 0.0, 1.0) * 4.0 - 2.0 - p.xyz;  // mad.sat;mad;add (102.3%)    \r",
              "    //p.xyz = clamp(p.xyz, -1.0, 1.0) * 2.0 - p.xyz;  // min;max;mad    \r",
              "    p.xyz = clamp(p.xyz, Clamping.x, Clamping.y) * Clamping.z - p.xyz;  // min;max;mad\r",
              "    \r",
              "\r",
              "    // sphere folding: if (r2 < minRad2) p /= minRad2; else if (r2 < 1.0) p /= r2;\r",
              "    float r2 = dot(p.xyz, p.xyz);\r",
              "    p *= clamp(max(minRad2/r2, minRad2), Fold.x, Fold.y);  // dp3,div,max.sat,mul\r",
              "    p.xyz+= float3(Increment.x,Increment.y,Increment.z);\r",
              "    // scale, translate\r",
              "    p = p*scale + p0;\r",
              "  }\r",
              "  float d=((length(p.xyz) - absScalem1) / p.w - AbsScaleRaisedTo1mIters) * DIST_MULTIPLIER;\r",
              "  return d;\r",
              "  //d=0.1;\r",
              "  //return max(udCubes(p0),d );\r",
              "  //return max( udCubes(p0), dStillLogo(p0));\r",
              "  //return min(dStillLogo(pN), d);\r",
              "}\r",
              "\r",
              "\r",
              "float dRotatedBoxes(float3 p, float3 b, float3 r, float angle ) {\r",
              "    //float angle= SphereRadius;\r",
              "    float3 pRotated= float3(p.x * cos(angle) - p.z * sin(angle), \r",
              "                            p.y,\r",
              "                            p.x * sin(angle) + p.z * cos(angle));\r",
              "    pRotated= rep(pRotated, r);\r",
              "    return sdBox( pRotated, b);\r",
              "    \r",
              "}\r",
              "\r",
              "\r",
              "float getDistance(float3 p) {\r",
              "    //float dPlanes = dRotatedPlanes(p, 5);\r",
              "    //float dColumns= dBox( float3( mod(p.x,0),mod(p.y,3.2),mod(p.z,2))  - float3( 1,0,0), float3(10.5,2.5,0.5));\r",
              "    \r",
              "    //return max(dPlanes , dColumns);\r",
              "    //return dPlanes;\r",
              "    //return max(dPlanes, dBox(p, float3(4,4,4)));\r",
              "    //p= float3( mod(p.x,3),  mod(p.y,5), mod(p.z,6));\r",
              "    //p= rep(p, float3(SpherePos.x/p.y,SpherePos.y*p.x,SpherePos.z*p.x/p.y));\r",
              "    float3 p1= rep(p, float3(SpherePos.x,SpherePos.y, SpherePos.z));\r",
              "    float dBars= sdCross(p1, float3(20,16,7));\r",
              "    \r",
              "    //float3 p2= rep(p, float3(2,10, 1));\r",
              "    //float dBox= sdBox(p2, float3(1,10,14));\r",
              "    float d=10000;\r",
              "    \r",
              "    \r",
              "    \r",
              "    \r",
              "    //d= max(d, dRepeatedYBars(p, 0.2, 0.72,1.8));  //big blocks\r",
              "    \r",
              "    d= min( d, dRotatedBoxes(p,float3(0.53,10, 0.5), float3(1.6, 1.4, 1.47) , B.x  ));\r",
              "    d= max( d, -dRotatedBoxes(p,float3(0.63,10, 0.1), float3(1.6, 1.4, 1.47) , 25  ));\r",
              "    d= max(d, sdBox(p, float3(5,4,5))); //limit to big block\r",
              "    \r",
              "    float d2= dRotatedBoxes(p,float3(0.53,10, 1.5), float3(2.1, 1.8, 1.47) , B.y  );\r",
              "    d2= max(d2, sdBox(p+float3(0, -2, 0), float3(4.9,2,4.9))); //limit to big block\r",
              "    d=max(d,-d2);\r",
              "    \r",
              "    float d3= dRotatedBoxes(p,float3(0.73,10, 1.3), float3(2.1, 1.8, 1.47) , B.z  );\r",
              "    d3= max(d3, sdBox(p+float3(0, -3, 0), float3(5.8,4,5.8))); //limit to big block\r",
              "    d=max(d,-d3);\r",
              "\r",
              "    d=max(d,sdMandelBox(p+float3(0,0,0)));\r",
              "\r",
              "    //d= min(d, dSphere(p));\r",
              "    \r",
              "    // surface ace offeset\r",
              "    //d+= clamp(dRepeatedYBars(p, SpherePos, 0.1,1) , \r",
              "    //    0,0.001);\r",
              "        \r",
              "    float offset= clamp(sdBox(\r",
              "                   rep(p,  float3(0.22, 0.13, 0.46)), \r",
              "                    float3(0.2, 0.01, 0.2)),\r",
              "                    -0.00, 0.01);\r",
              "                    \r",
              "    offset+= -clamp(sdBox(\r",
              "                   rep(p,  float3(0.02, 0.04, 0.26)), \r",
              "                    float3(0.008, 0.08, 0.1)),\r",
              "    0,0.002);\r",
              "         \r",
              "     d+=clamp(offset,0.0,0.01);\r",
              "\r",
              "    //streetx\r",
              "    d= min(d, dRepeatedXBars(p, float3(5.1,1.1,0.1) , 0.01,0.02));\r",
              "    d= min(d, dRepeatedZBars(p - float3(10.4,0.30,3.0) , float3(4.1,2.1,3.1) , 0.01,0.01));\r",
              "    \r",
              "    //d= min(d, sdBox( p+float3(0,7,0), float3(1000,1,1000)));\r",
              "    return d;\r",
              "    \r",
              "}\r",
              "\r",
              "\r",
              "// Blinn-Phong shading model with rim lighting (diffuse light bleeding to the other side).\r",
              "// |normal|, |view| and |light| should be normalized.\r",
              "float3 blinn_phong(float3 normal, float3 view, float3 light, float3 diffuseColor) {\r",
              "  float3 halfLV = normalize(light + view);\r",
              "  float spe = pow(max( dot(normal, halfLV), Spec.x ), Spec.y);\r",
              "  float dif = dot(normal, light) * 0.1 + 0.15;\r",
              "  return dif*diffuseColor + spe*Specular*Specular.a;\r",
              "}\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "float3 getNormal(float3 p, float offset)\r",
              "{\r",
              "    float dt=.0001;\r",
              "    float3 n=float3(getDistance(p+float3(dt,0,0)),\r",
              "                    getDistance(p+float3(0,dt,0)),\r",
              "                    getDistance(p+float3(0,0,dt)))-getDistance(p);\r",
              "    return normalize(n);\r",
              "}\r",
              "\r",
              "\r",
              "float getAO(float3 aoposition, float3 aonormal, float aodistance, float aoiterations, float aofactor)\r",
              "{\r",
              "    float ao = 0.0;\r",
              "    float k = aofactor;\r",
              "    aodistance /= aoiterations;\r",
              "    for (float i=1; i < 4; i += 1)\r",
              "    {\r",
              "        ao += (i * aodistance - getDistance(aoposition + aonormal * i * aodistance)) / pow(2,i);\r",
              "    }\r",
              "    return 1.0 - k * ao;\r",
              "}\r",
              "/*\r",
              "float4 getTexture2(float3 p, float3 n) \r",
              "{\r",
              "    float s = 1.3;\r",
              "    float dx = abs(n.x);\r",
              "    float dy = abs(n.y);\r",
              "    float dz = abs(n.z);\r",
              "    if (dx > dy  > dz) return  Image.Sample(samLinear, float2(frac(p.z*s), frac(p.y * s))); \r",
              "    if (dy > dz) return  Image.Sample(samLinear, float2(frac(p.x*s), frac(p.z * s)));\r",
              "    return  Image.Sample(samLinear, float2(frac(p.x*s), frac(p.y * s)));\r",
              "}*/\r",
              "\r",
              "float MAX_DIST=300;\r",
              "\r",
              "float3 surfaceColor1 = float3(0.95, 0.64, 0.1);\r",
              "float3 surfaceColor2 = float3(0.89, 0.95, 0.75);\r",
              "float3 surfaceColor3 = float3(0.55, 0.06, 0.03);\r",
              "\r",
              "// Compute the color at |pos|.\r",
              "float3 color(float3 pos) {\r",
              "  float3 p = pos, p0 = p;\r",
              "  float trap = 1.0;\r",
              "\r",
              "  for (int i=0; i<3; i++) {\r",
              "    p.xyz = clamp(p.xyz, -1.0, 1.0) * 2.0 - p.xyz;\r",
              "    float r2 = dot(p.xyz, p.xyz);\r",
              "    p *= clamp(max(Minrad/r2, Minrad), 0.0, 1.0);\r",
              "    p = p*Scale + p0.xyz;\r",
              "    trap = min(trap, r2);\r",
              "  }\r",
              "  // |c.x|: log final distance (fractional iteration count)\r",
              "  // |c.y|: spherical orbit trap at (0,0,0)\r",
              "  float2 c = clamp(float2( 0.33*log(dot(p,p))-1.0, sqrt(trap) ), 0.0, 1.0);\r",
              "\r",
              "  return lerp(lerp(Surface1, Surface2, c.y), Surface3, c.x);\r",
              "}\r",
              "\r",
              "\r",
              "float4 PS( PS_IN input ) : SV_Target\r",
              "{\r",
              "\r",
              "    //float4 filter= Image2.Sample(samLinear, input.texCoord);\r",
              "    float3 p = input.worldTViewPos;\r",
              "    float3 dp = normalize(input.worldTViewDir);\r",
              "\r",
              "  float totalD = 0.0;\r",
              "  float D = 3.4e38;\r",
              "  D=StepSize;\r",
              "  float extraD = 0.0;\r",
              "  float lastD;\r",
              "  \r",
              "  int steps;\r",
              "\r",
              "    /*  \r",
              "    // Intersect the view ray with the Mandelbox using raymarching.\r",
              "    for (steps=0; steps<MaxSteps; steps++) {\r",
              "        lastD = D;\r",
              "        D = getDistance(p + totalD * dp);\r",
              "\r",
              "        // Overstepping: have we jumped too far? Cancel last step.    \r",
              "        if (extraD > 0.0 && D < extraD) {\r",
              "            totalD -= extraD;\r",
              "            extraD = 0.0; \r",
              "            D = 3.4e38;\r",
              "            steps--;\r",
              "            continue;\r",
              "        }\r",
              "\r",
              "        if (D < MinDistance/1000) break;\r",
              "\r",
              "        totalD += D;\r",
              "\r",
              "        // Overstepping is based on the optimal length of the last step.\r",
              "        totalD += extraD = 0.096 * D*(D+extraD)/lastD;\r",
              "    }\r",
              "    */\r",
              "\r",
              "\r",
              "    // SImple iterator\r",
              "    \r",
              "    \r",
              "    for(steps=0;steps<MaxSteps && abs(D)>MinDistance/1000;steps++)\r",
              "    {\r",
              "        D=getDistance(p);\r",
              "        p+=dp*D;\t\r",
              "    }\r",
              "    \r",
              "    \r",
              "    p += totalD * dp;\r",
              "\r",
              "\r",
              "  // Color the surface with Blinn-Phong shading, ambient occlusion and glow.\r",
              "  float3 col = Background;\r",
              "\r",
              "  // We've got a hit or we're not sure.\r",
              "  if (D < MAX_DIST) {\r",
              "    float3 n = normalize( getNormal(p, D));\r",
              "    //n*=float3(1,1,10);\r",
              "    n= normalize(n);\r",
              "    col = color(p);\r",
              "    //col = blinn_phong(n, -dp, normalize(input.worldTViewPos+float3(10,1,0)+dp), col);\r",
              "    col = blinn_phong(n, -dp, LightPos, col);\r",
              "    \r",
              "    //float getAO(float3 aoposition, float3 aonormal, float aodistance, float aoiterations, float aofactor)\r",
              "    float distanceLight = pow(Diffuse.a, length(p-LightPos));\r",
              "\r",
              "    col = lerp(AmbientOcclusion, col + distanceLight*Diffuse, getAO(p,n,AODistance, 4, AmbientOcclusion.a));\r",
              "\r",
              "    // We've gone through all steps, but we haven't hit anything.\r",
              "    // Mix in the background color.\r",
              "    if (D > MinDistance) {\r",
              "      col = lerp(col, Background, clamp(log(D/MinDistance) * DistToColor, 0.0, 1.0));\r",
              "    }\r",
              "  }\r",
              "\r",
              "  // Glow is based on the number of steps.\r",
              "  col = lerp(col, Glow, float(steps)/float(MaxSteps) * Glow.a);\r",
              "  col = lerp(col, Background, clamp(log( length(p- input.worldTViewPos)/Fog), 0,1));\r",
              "    //col = float3(1,1,0);\r",
              "  return float4(col, 1);\r",
              "\r",
              "\r",
              "\r",
              "}\r",
              "//<<< PS\r",
              "\r",
              "//>>> _technique\r",
              "technique10 Render",
              "{",
              "    pass P0",
              "    {",
              "        SetGeometryShader( 0 );",
              "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
              "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
              "    }",
              "}",
              "//<<< _technique\r",
              ""
            ]
          },
          {
            "ID": "50fa392d-ee4f-4af7-a60a-88c06f5aee6c",
            "Type": "Float",
            "Value": [
              "1.12"
            ]
          },
          {
            "ID": "0b498748-e414-460e-b7e4-a7e327fb4162",
            "Type": "Float",
            "Value": [
              "1.777004"
            ]
          },
          {
            "ID": "f808723e-12f2-4fcf-903d-529818fd1a61",
            "Type": "Float",
            "Value": [
              "-1.38"
            ]
          },
          {
            "ID": "e5426a4d-a607-4e04-9f68-81b3427e15d5",
            "Type": "Float",
            "Value": [
              "0.6649999"
            ]
          },
          {
            "ID": "4d6077c9-fc12-4adf-9e2c-2a0ce69be992",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "7241ca63-8676-4d2b-a186-cc8cd8a26940",
            "Type": "Float",
            "Value": [
              "2.8"
            ]
          },
          {
            "ID": "311054cd-808d-4e23-b3bb-f933a490b53d",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "0e4fe48b-052f-4410-9fea-922cbe96f168",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "90410430-9530-46bd-98ca-cd2a54080ec9",
            "Type": "Float",
            "Value": [
              "-0.58025"
            ]
          },
          {
            "ID": "ad98904c-34b2-4b26-910b-31ce55ff540a",
            "Type": "Float",
            "Value": [
              "48.9"
            ]
          },
          {
            "ID": "d08badc1-d9b0-4273-b888-33e70dc876e0",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "0708b112-d31c-4423-b3da-e488e71d29f9",
            "Type": "Float",
            "Value": [
              "0.1500004"
            ]
          },
          {
            "ID": "64d46e5f-feb4-482a-88fc-fe5392672d60",
            "Type": "Float",
            "Value": [
              "1.330002"
            ]
          },
          {
            "ID": "c4a879f7-7245-4925-a860-00b4f1484ec5",
            "Type": "Float",
            "Value": [
              "1.27"
            ]
          },
          {
            "ID": "c6b558c5-53d9-4486-b062-0741a78f26d4",
            "Type": "Float",
            "Value": [
              "0.8525082"
            ]
          },
          {
            "ID": "e53fe4a1-294a-4fce-ac78-0aa39e7d05d6",
            "Type": "Float",
            "Value": [
              "0.8234112"
            ]
          },
          {
            "ID": "f2de921a-2077-47e4-a4f9-5bdf43cb99f5",
            "Type": "Float",
            "Value": [
              "0.7523543"
            ]
          },
          {
            "ID": "f23ca752-9bb4-43b7-9c12-788d087d5082",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "d12a728a-c022-4ca9-9bfd-f107a884fa5d",
            "Type": "Float",
            "Value": [
              "0.9690093"
            ]
          },
          {
            "ID": "ba2d2524-af66-4a16-aeb9-9bf9046436e6",
            "Type": "Float",
            "Value": [
              "0.9690093"
            ]
          },
          {
            "ID": "b8448f02-7dca-4205-af37-308aa4175b71",
            "Type": "Float",
            "Value": [
              "0.9690093"
            ]
          },
          {
            "ID": "20064c28-fd3d-4767-b0a8-e469484c5517",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "596788f7-0936-486f-ae76-b54e798373b3",
            "Type": "Float",
            "Value": [
              "0.8575402"
            ]
          },
          {
            "ID": "87a7da0b-c0ca-4fd3-acee-cfc33208f8ce",
            "Type": "Float",
            "Value": [
              "0.8575402"
            ]
          },
          {
            "ID": "ddd9947b-ccc6-4f8b-80fa-07d2556e54e4",
            "Type": "Float",
            "Value": [
              "0.8575402"
            ]
          },
          {
            "ID": "9bad3d9e-eb18-41e3-a6c6-6db8c29479fc",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "79567d82-4873-4dce-9163-7fec2b5c68af",
            "Type": "Float",
            "Value": [
              "0.650279"
            ]
          },
          {
            "ID": "9afee583-88ba-4dca-9029-ae60ad2d8c96",
            "Type": "Float",
            "Value": [
              "0.571425"
            ]
          },
          {
            "ID": "42311f1a-65c8-4195-81a1-15b80ab6ed71",
            "Type": "Float",
            "Value": [
              "0.6718571"
            ]
          },
          {
            "ID": "3ffe4380-a349-44f5-877a-d03bdb40af0c",
            "Type": "Float",
            "Value": [
              "0.992"
            ]
          },
          {
            "ID": "7aabbd96-d01b-4dc2-98ec-2376c7969cc1",
            "Type": "Float",
            "Value": [
              "0.07319231"
            ]
          },
          {
            "ID": "9f921bc6-1a41-4826-826c-c45983689685",
            "Type": "Float",
            "Value": [
              "0.07573346"
            ]
          },
          {
            "ID": "717b116c-7ee4-41dd-8814-2b423db14d9b",
            "Type": "Float",
            "Value": [
              "0.05961749"
            ]
          },
          {
            "ID": "338a3f3a-4e19-42a4-8660-e653dcf05ca6",
            "Type": "Float",
            "Value": [
              "2.39"
            ]
          },
          {
            "ID": "2126145b-fa6c-4378-91da-9b0945799a4d",
            "Type": "Float",
            "Value": [
              "1.02"
            ]
          },
          {
            "ID": "d1abe0d5-e1e3-44fa-bbed-04f27792a87b",
            "Type": "Float",
            "Value": [
              "73.02"
            ]
          },
          {
            "ID": "5cacbd98-e044-4050-8775-709ecdeaf214",
            "Type": "Float",
            "Value": [
              "0.4745718"
            ]
          },
          {
            "ID": "9c4e14ed-9a1a-4f2b-9c7f-0c9bd08ceeee",
            "Type": "Float",
            "Value": [
              "0.4745718"
            ]
          },
          {
            "ID": "54f80d02-7e1c-44f1-8160-38442b460801",
            "Type": "Float",
            "Value": [
              "0.4745718"
            ]
          },
          {
            "ID": "d86cae98-be36-41b1-acea-679cda54940c",
            "Type": "Float",
            "Value": [
              "-1.13"
            ]
          },
          {
            "ID": "d6bd69fa-0529-46c9-aae5-81d3da131dc7",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "430bd365-0973-4461-a7cd-756ba70f1ba1",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "75e9fb3e-06c0-4dd9-82e5-157725655d68",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "03eefc4a-8931-4cc9-9bc8-c8d7e25a86f1",
            "Type": "Float",
            "Value": [
              "0.73"
            ]
          },
          {
            "ID": "243d7a10-f29a-430a-9508-e13722d8428b",
            "Type": "Float",
            "Value": [
              "5.1"
            ]
          },
          {
            "ID": "2cd53fc3-1fe5-43bc-a291-cf8d9a37e292",
            "Type": "Float",
            "Value": [
              "0.6078768"
            ]
          },
          {
            "ID": "8dd81d5d-f5f0-451c-856b-ae726a94ae6b",
            "Type": "Float",
            "Value": [
              "0.6946285"
            ]
          },
          {
            "ID": "e0d7068b-9822-410d-b040-ee785c319263",
            "Type": "Float",
            "Value": [
              "0.650536"
            ]
          },
          {
            "ID": "3c73ee05-1a5a-4461-9fdd-f3806a9fcc22",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "a2e6394a-2893-4d5d-aab5-c266c71acce7",
            "Type": "Float",
            "Value": [
              "1.7"
            ]
          },
          {
            "ID": "70c8b33c-06ec-4a6e-92b1-26d3287e5bb2",
            "Type": "Float",
            "Value": [
              "-14.76"
            ]
          },
          {
            "ID": "03c8c509-7f9f-4f82-92c9-95798da471fc",
            "Type": "Float",
            "Value": [
              "9.306"
            ]
          },
          {
            "ID": "a017e884-6629-443a-b7a9-91a3edbe506f",
            "Type": "Float",
            "Value": [
              "-8.169998"
            ]
          },
          {
            "ID": "984e9743-f238-4185-8395-032be0cd8906",
            "Type": "Float",
            "Value": [
              "5"
            ]
          },
          {
            "ID": "e1ea8dbf-0034-4fa8-b4d8-8702e25dc16b",
            "Type": "Float",
            "Value": [
              "2.11"
            ]
          },
          {
            "ID": "e1de88a8-a354-4c9f-919a-d1f9d6b22a36",
            "Type": "Float",
            "Value": [
              "4.87"
            ]
          },
          {
            "ID": "2e582bff-c737-446b-bfb3-75e17edd9f3d",
            "Type": "Float",
            "Value": [
              "22.4601"
            ]
          },
          {
            "ID": "26579aed-a909-41d2-ae41-9c78a522a709",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "d57b8aee-7d64-46ed-ae71-2cc817350367",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "54d03cab-d879-4231-ac4d-e023e6430e2e",
            "Type": "Float",
            "Value": [
              "0"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "Group",
      "MetaInstanceID": "8e048896-7462-470a-94db-30299cf484aa",
      "MetaID": "46e0d20b-9ecc-42bc-ad5a-faeaf23e62f1",
      "OperatorProperties": {
        "Name": "",
        "PosX": "959.760006060853",
        "PosY": "1357.63821557359",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "739993cc-ce22-4070-8914-da6008c79357",
            "Type": "Scene",
            "Value": [
              ""
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "DetectEdges",
      "MetaInstanceID": "65d74aeb-2319-44b5-93d5-06901835659b",
      "MetaID": "d6760adf-5384-4eea-931f-b5c0714f7632",
      "OperatorProperties": {
        "Name": "",
        "PosX": "1247.9395357762",
        "PosY": "1519.03306124117",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "2ab9e7f0-4e72-4357-ad81-98e983107fe7",
            "Type": "Text",
            "Value": [
              "//>>> _common parameters\r",
              "float4x4 objectToWorldMatrix;",
              "float4x4 worldToCameraMatrix;",
              "float4x4 projMatrix;",
              "Texture2D txDiffuse;",
              "float2 RenderTargetSize;",
              "//<<< _common parameters\r",
              "\r",
              "//>>> _parameters\r",
              "Texture2D Image;",
              "float Strength;",
              "float Size;",
              "float Contrast;",
              "//<<< _parameters\r",
              "float4x4 ViewToWorld;\r",
              " \r",
              "//>>> setup\r",
              "SamplerState samLinear\r",
              "{\r",
              "    Filter = MIN_MAG_MIP_LINEAR;\r",
              "    AddressU = Clamp;\r",
              "    AddressV = Clamp;\r",
              "};\r",
              "//<<< setup\r",
              "\r",
              "//>>> declarations\r",
              "struct VS_IN\r",
              "{\r",
              "    float4 pos : POSITION;\r",
              "    float2 texCoord : TEXCOORD;\r",
              "};\r",
              "\r",
              "struct PS_IN\r",
              "{\r",
              "    float4 pos : SV_POSITION;\r",
              "    float2 texCoord: TEXCOORD0;\t    \r",
              "    float3 worldTViewPos: TEXCOORD1;\r",
              "    float3 worldTViewDir: TEXCOORD2;\r",
              "};\r",
              "//<<< declarations\r",
              "\r",
              "//>>> _GS\r",
              "",
              "//<<< _GS\r",
              "\r",
              "//>>> _VS \r",
              "PS_IN VS( VS_IN input )",
              "{",
              "    PS_IN output = (PS_IN)0;",
              "",
              "    output.pos = mul(input.pos, worldToCameraMatrix);",
              "    output.pos = mul(output.pos, projMatrix);",
              "    output.texCoord = input.texCoord;",
              "",
              "    return output;",
              "}",
              "//<<< _VS\r",
              "\r",
              "//>>> PS\r",
              "float4 PS( PS_IN input ) : SV_Target\r",
              "{\r",
              "    float width, height;\r",
              "    Image.GetDimensions(width, height);\r",
              "    \r",
              "    float sx = Size / width;\r",
              "    float sy = Size / height;\r",
              "\r",
              "    float4 y1= Image.Sample(samLinear, float2(input.texCoord.x, input.texCoord.y + sy));\r",
              "    float4 y2= Image.Sample(samLinear, float2(input.texCoord.x, input.texCoord.y - sy));\r",
              "    float4 x1= Image.Sample(samLinear, float2(input.texCoord.x + sx, input.texCoord.y));\r",
              "    float4 x2= Image.Sample(samLinear, float2(input.texCoord.x - sx, input.texCoord.y)); \r",
              "    float4 a =  Image.Sample(samLinear, float2(input.texCoord.x, input.texCoord.y)); \r",
              "    //return ((a-y1) + (a-y2) + (a-x1) + (a-x2)) * Strength;\r",
              "    \r",
              "    float average =  (           abs(x1.r-a.r) + (x2.r-a.r)+ (y1.r - a.r) +(y2.r - a.r) +\r",
              "                abs(x1.g-a.g) + (x2.g-a.g)+ (y1.g - a.g) +(y2.g - a.g) +\r",
              "                abs(x1.b-a.b) + (x2.b-a.b)+ (y1.b - a.b) +(y2.b - a.b)) * Strength + Contrast;\r",
              "    \r",
              "    return float4(average,average,average,1);\r",
              "\r",
              "    \r",
              "/*    return float4(\r",
              "                abs(x1.r-a.r) + (x2.r-a.r)+ (y1.r - a.r) +(y2.r - a.r) , \r",
              "                abs(x1.g-a.g) + (x2.g-a.g)+ (y1.g - a.g) +(y2.g - a.g), \r",
              "                abs(x1.b-a.b) + (x2.b-a.b)+ (y1.b - a.b) +(y2.b - a.b),\r",
              "                1.0)  * (Strength * 100) -Contrast;\r",
              "                */\r",
              "    \r",
              "}\r",
              "//<<< PS\r",
              "\r",
              "//>>> _technique\r",
              "technique10 Render",
              "{",
              "    pass P0",
              "    {",
              "        SetGeometryShader( 0 );",
              "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
              "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
              "    }",
              "}",
              "//<<< _technique\r",
              ""
            ]
          },
          {
            "ID": "c2e438ee-873d-4a44-8314-00f1fe463dc1",
            "Type": "Image",
            "Value": [
              ""
            ]
          },
          {
            "ID": "a0646a34-1fd0-4f43-8996-1466a4a9f7ba",
            "Type": "Float",
            "Value": [
              "7.39"
            ]
          },
          {
            "ID": "1c0598d9-fe84-409c-84cb-1ba08ec94d95",
            "Type": "Float",
            "Value": [
              "0.46"
            ]
          },
          {
            "ID": "f243d2b9-485f-4e34-88ec-7a53bccf7beb",
            "Type": "Float",
            "Value": [
              "0"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "BlendImagesAdd",
      "MetaInstanceID": "de231753-04a5-4ca9-bdd6-4c10a9abb4c4",
      "MetaID": "65ef8dd3-1075-4e0e-b83f-8e083e027099",
      "OperatorProperties": {
        "Name": "",
        "PosX": "1197.9395357762",
        "PosY": "1494.03306124117",
        "Width": "175",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "35d31711-3711-4174-9fee-20cdfadb1276",
            "Type": "Text",
            "Value": [
              "//>>> _common parameters\r",
              "float4x4 objectToWorldMatrix;",
              "float4x4 worldToCameraMatrix;",
              "float4x4 projMatrix;",
              "Texture2D txDiffuse;",
              "float2 RenderTargetSize;",
              "//<<< _common parameters\r",
              "\r",
              "//>>> _parameters\r",
              "Texture2D Image1;",
              "Texture2D Image2;",
              "//<<< _parameters\r",
              "float4x4 ViewToWorld;\r",
              " \r",
              "//>>> setup\r",
              "SamplerState samNearest\r",
              "{\r",
              "    Filter = MIN_MAG_MIP_POINT;\r",
              "    AddressU = Clamp;\r",
              "    AddressV = Clamp;\r",
              "};\r",
              "//<<< setup\r",
              "\r",
              "//>>> declarations\r",
              "struct VS_IN\r",
              "{\r",
              "    float4 pos : POSITION;\r",
              "    float2 texCoord : TEXCOORD;\r",
              "};\r",
              "\r",
              "struct PS_IN\r",
              "{\r",
              "    float4 pos : SV_POSITION;\r",
              "    float2 texCoord: TEXCOORD0;\t    \r",
              "    float3 worldTViewPos: TEXCOORD1;\r",
              "    float3 worldTViewDir: TEXCOORD2;\r",
              "};\r",
              "//<<< declarations\r",
              "\r",
              "//>>> _GS\r",
              "",
              "//<<< _GS\r",
              "\r",
              "//>>> _VS \r",
              "PS_IN VS( VS_IN input )",
              "{",
              "    PS_IN output = (PS_IN)0;",
              "",
              "    output.pos = mul(input.pos, worldToCameraMatrix);",
              "    output.pos = mul(output.pos, projMatrix);",
              "    output.texCoord = input.texCoord;",
              "",
              "    return output;",
              "}",
              "//<<< _VS\r",
              "\r",
              "//>>> PS\r",
              "float4 PS( PS_IN input ) : SV_Target\r",
              "{\r",
              "    float4 col1=Image1.Sample(samNearest, input.texCoord); \r",
              "    float4 col2=Image2.Sample(samNearest, input.texCoord);       \r",
              "    return float4(col1.rgb+col2.rgb,1);\r",
              "    //return col1+col2;\r",
              "    \r",
              "}\r",
              "//<<< PS\r",
              "\r",
              "//>>> _technique\r",
              "technique10 Render",
              "{",
              "    pass P0",
              "    {",
              "        SetGeometryShader( 0 );",
              "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
              "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
              "    }",
              "}",
              "//<<< _technique\r",
              ""
            ]
          },
          {
            "ID": "155e09d4-8fa1-4ea7-b7b6-dd3810328f4c",
            "Type": "Image",
            "Value": [
              ""
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "ReduceNoise",
      "MetaInstanceID": "f592658c-1a52-49c9-b4ce-dd554b9fe3fb",
      "MetaID": "fadbd6c7-6479-485a-8cdd-b3892ce1f165",
      "OperatorProperties": {
        "Name": "",
        "PosX": "1026.03447389586",
        "PosY": "1487.47079197831",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "46db2506-6a86-4f46-b447-17aa6a5c01ec",
            "Type": "Text",
            "Value": [
              "//>>> _common parameters\r",
              "float4x4 objectToWorldMatrix;",
              "float4x4 worldToCameraMatrix;",
              "float4x4 projMatrix;",
              "Texture2D txDiffuse;",
              "float2 RenderTargetSize;",
              "//<<< _common parameters\r",
              "\r",
              "//>>> _parameters\r",
              "Texture2D Image;",
              "float Strength;",
              "float Size;",
              "float Contrast;",
              "//<<< _parameters\r",
              "float4x4 ViewToWorld;\r",
              " \r",
              "//>>> setup\r",
              "SamplerState samLinear\r",
              "{\r",
              "    Filter = MIN_MAG_MIP_POINT;\r",
              "    AddressU = Clamp;\r",
              "    AddressV = Clamp;\r",
              "};\r",
              "//<<< setup\r",
              "\r",
              "//>>> declarations\r",
              "struct VS_IN\r",
              "{\r",
              "    float4 pos : POSITION;\r",
              "    float2 texCoord : TEXCOORD;\r",
              "};\r",
              "\r",
              "struct PS_IN\r",
              "{\r",
              "    float4 pos : SV_POSITION;\r",
              "    float2 texCoord: TEXCOORD0;\t    \r",
              "    float3 worldTViewPos: TEXCOORD1;\r",
              "    float3 worldTViewDir: TEXCOORD2;\r",
              "};\r",
              "//<<< declarations\r",
              "\r",
              "//>>> _GS\r",
              "",
              "//<<< _GS\r",
              "\r",
              "//>>> _VS \r",
              "PS_IN VS( VS_IN input )",
              "{",
              "    PS_IN output = (PS_IN)0;",
              "",
              "    output.pos = mul(input.pos, worldToCameraMatrix);",
              "    output.pos = mul(output.pos, projMatrix);",
              "    output.texCoord = input.texCoord;",
              "",
              "    return output;",
              "}",
              "//<<< _VS\r",
              "\r",
              "//>>> PS\r",
              "float4 PS( PS_IN input ) : SV_Target\r",
              "{\r",
              "    float width, height;\r",
              "    Image.GetDimensions(width, height);\r",
              "    \r",
              "    float sx = Size / width;\r",
              "    float sy = Size / height;\r",
              "\r",
              "    float4 y1= Image.Sample(samLinear, float2(input.texCoord.x, input.texCoord.y + sy));\r",
              "    float4 y2= Image.Sample(samLinear, float2(input.texCoord.x, input.texCoord.y - sy));\r",
              "    float4 x1= Image.Sample(samLinear, float2(input.texCoord.x + sx, input.texCoord.y));\r",
              "    float4 x2= Image.Sample(samLinear, float2(input.texCoord.x - sx, input.texCoord.y)); \r",
              "    float4 c =  Image.Sample(samLinear, float2(input.texCoord.x, input.texCoord.y)); \r",
              "\r",
              "    float4 average = (y1+y2+x1+x2)*0.25;\r",
              "    float ag = (average.r + average.g + average.b)/3;\r",
              "    float cg = (c.r+c.g+c.b)/3;\r",
              "    \r",
              "    if( (ag < Contrast && cg > 1-Contrast) || (ag > Contrast && cg < 1.0-Contrast)   ) {\r",
              "        c=average;\r",
              "    }    \r",
              "    return c;    \r",
              "}\r",
              "//<<< PS\r",
              "\r",
              "//>>> _technique\r",
              "technique10 Render",
              "{",
              "    pass P0",
              "    {",
              "        SetGeometryShader( 0 );",
              "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
              "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
              "    }",
              "}",
              "//<<< _technique\r",
              ""
            ]
          },
          {
            "ID": "ff56c6af-b171-4825-98d3-63d04314d62a",
            "Type": "Image",
            "Value": [
              ""
            ]
          },
          {
            "ID": "08ba17ae-691c-4ccd-a5eb-2eb2d8ff3331",
            "Type": "Float",
            "Value": [
              "1.38"
            ]
          },
          {
            "ID": "b1b5be6c-07e9-44ad-b3a9-dffcd467efcd",
            "Type": "Float",
            "Value": [
              "0.5210002"
            ]
          },
          {
            "ID": "687ffd13-710d-4463-8082-6c844f4a772c",
            "Type": "Float",
            "Value": [
              "0.6400001"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "Layer2d",
      "MetaInstanceID": "3fe41b81-a8d3-4dee-8371-22dc21d30038",
      "MetaID": "c6e1c4b9-28a8-41fb-a9fa-74591a1239f0",
      "OperatorProperties": {
        "Name": "",
        "PosX": "1549.80948054763",
        "PosY": "1342.65929321047",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "558a0362-3802-4278-82b5-c5149223034b",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "00edfeb2-e957-4aae-b31e-02e855933669",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "338288cf-ed05-4316-9444-bf58077dc42b",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "ebbd3da8-4e99-4619-99da-51b9bbe0e085",
            "Type": "Float",
            "Value": [
              "1"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "StillLogoDF",
      "MetaInstanceID": "7b050d98-7ad2-4cba-b7c5-933f9dbd5259",
      "MetaID": "481939c8-42d5-4808-bbaf-f2eff0893797",
      "OperatorProperties": {
        "Name": "FractalFlood",
        "PosX": "1549.80948054765",
        "PosY": "1367.6592932105",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "79994f7d-5d4c-40eb-b043-efec2ef2b05c",
            "Type": "Text",
            "Value": [
              "//>>> _common parameters\r",
              "float4x4 objectToWorldMatrix;",
              "float4x4 worldToCameraMatrix;",
              "float4x4 projMatrix;",
              "Texture2D txDiffuse;",
              "float2 RenderTargetSize;",
              "//<<< _common parameters\r",
              "\r",
              "//>>> _parameters\r",
              "float Minrad;",
              "float Scale;",
              "float3 Clamping;",
              "float2 Fold;",
              "float3 Increment;",
              "float MaxSteps;",
              "float StepSize;",
              "float MinDistance;",
              "float MaxDistance;",
              "float DistToColor;",
              "float4 Surface1;",
              "float4 Surface2;",
              "float4 Surface3;",
              "float4 Diffuse;",
              "float4 Specular;",
              "float2 Spec;",
              "float4 Glow;",
              "float4 AmbientOcclusion;",
              "float AODistance;",
              "float4 Background;",
              "float Fog;",
              "float3 LightPos;",
              "float3 SpherePos;",
              "float SphereRadius;",
              "//<<< _parameters\r",
              "float4x4 ViewToWorld;\r",
              " \r",
              "//>>> setup\r",
              "SamplerState samLinear\r",
              "{\r",
              "    Filter = MIN_MAG_MIP_LINEAR;\r",
              "    AddressU = Clamp;\r",
              "    AddressV = Clamp;\r",
              "};\r",
              "//<<< setup\r",
              "\r",
              "//>>> declarations\r",
              "struct VS_IN\r",
              "{\r",
              "    float4 pos : POSITION;\r",
              "    float2 texCoord : TEXCOORD;\r",
              "};\r",
              "\r",
              "struct PS_IN\r",
              "{\r",
              "    float4 pos : SV_POSITION;\r",
              "    float2 texCoord: TEXCOORD0;\t    \r",
              "    float3 worldTViewPos: TEXCOORD1;\r",
              "    float3 worldTViewDir: TEXCOORD2;\r",
              "};\r",
              "//<<< declarations\r",
              "\r",
              "//>>> _GS\r",
              "",
              "//<<< _GS\r",
              "\r",
              "//>>> VS \r",
              "PS_IN VS( VS_IN input )\r",
              "{\r",
              "    PS_IN output = (PS_IN)0;\r",
              "    input.pos = mul(input.pos, objectToWorldMatrix); \r",
              "    output.pos = mul(input.pos, worldToCameraMatrix);\r",
              "    output.pos = mul(output.pos, projMatrix);\r",
              "    output.texCoord = input.texCoord;\r",
              "\r",
              "    float4 viewTNearFragPos = float4(input.texCoord.x*2.0 - 1.0, -input.texCoord.y*2.0 + 1.0, 0.0, 1.0);\r",
              "    float4 worldTNearFragPos = mul(viewTNearFragPos, ViewToWorld);\r",
              "    worldTNearFragPos /= worldTNearFragPos.w;\r",
              "\r",
              "    float4 viewTFarFragPos = float4(input.texCoord.x*2.0 - 1.0, -input.texCoord.y*2.0 + 1.0, 1.0, 1.0);\r",
              "    float4 worldTFarFragPos = mul(viewTFarFragPos, ViewToWorld);\r",
              "    worldTFarFragPos /= worldTFarFragPos.w;\r",
              "\r",
              "    output.worldTViewDir = normalize(worldTFarFragPos.xyz - worldTNearFragPos.xyz);\r",
              "\r",
              "    output.worldTViewPos = worldTNearFragPos;\r",
              "    return output;\r",
              "}\r",
              "//<<< VS\r",
              "\r",
              "//>>> PS\r",
              "\r",
              "\r",
              "float dSphere(float3 p0) {\r",
              "    return length(p0+float4(SpherePos.xyz,1))-SphereRadius;\r",
              "}\r",
              "\r",
              "float udCubes(float3 p) {\r",
              "    float3 b= float3(1,10,0.2);\r",
              "    float3 c= float3(SpherePos.x,SpherePos.y,SpherePos.z);\r",
              "    float3 q = fmod(p,c)-0.5*c;\r",
              "    float3  di = abs(p) - b;\r",
              "    //float mc = maxcomp(di);\r",
              "    //return min(mc,length(max(di,0.0)));  \r",
              "    float rad=SphereRadius;\r",
              "    return length( max( abs(q) - b + float3(rad,rad,rad), 0.0 ) ) - rad;\r",
              "    //return length(max(abs(p)-b,0.0));\r",
              "    \r",
              "}\r",
              "\r",
              "float BOX_RADIUS= 0.03;\r",
              "float dBox(float3 p, float3 b) {\r",
              "    return length( max( abs(p) - b + float3(BOX_RADIUS,BOX_RADIUS,BOX_RADIUS), 0.0 ) ) - BOX_RADIUS;\r",
              "}\r",
              "\r",
              "float dRotatedPlanes(float3 p, float frequency) {\r",
              "    float angle= SphereRadius;\r",
              "    float3 pRotated= float3(p.x * cos(angle) - p.y * sin(angle), \r",
              "                            p.x * sin(angle) + p.y * cos(angle),\r",
              "                            p.z);\r",
              "    return sin(pRotated.x * frequency )-0.4;\r",
              "}\r",
              "\r",
              "\r",
              "float3 H_BAR=float3(1, 0.2, 0.2);\r",
              "float3 I_BAR=float3(0.2, 1.0, 0.2);\r",
              "float3 S_BAR=float3(0.2, 0.5, 0.2);\r",
              "\r",
              "float mod (float a, float b) {\r",
              "    return  a - b * floor(a/b);\r",
              "}\r",
              "\r",
              "float maxcomp(float3 v) {\r",
              "    if(v.x > v.y && v.x > v.z) return v.x;\r",
              "    if(v.y > v.z) return v.y;\r",
              "    return v.z;\r",
              "}\r",
              "\r",
              "float sdBox( float3 p, float3 b )\r",
              "{\r",
              "  float3  di = abs(p) - b;\r",
              "  float mc = maxcomp(di);\r",
              "  return min(mc,length(max(di,0.0)));\r",
              "}\r",
              "\r",
              "float sdBox2(float2 p, float2 b) {\r",
              "  float2  di = abs(p) - b;\r",
              "  float mc = max(di.x, di.y);\r",
              "  return min(mc,length(max(di,0.0)));\r",
              "}\r",
              "\r",
              "float sdCross( in float3 p, float d )\r",
              "{\r",
              "  float da = sdBox2(p.xy, float2(d, 1.0));\r",
              "  float db = sdBox2(p.yz,float2(d, 1.0));\r",
              "  float dc = sdBox2(p.zx,float2(d, 1.0));\r",
              "  return min(da,min(db,dc));\r",
              "}\r",
              "\r",
              "\r",
              "float dStillLogo(float3 p) {\r",
              "    p+=SpherePos;\r",
              "    float d;\r",
              "    \r",
              "    d    =  dBox(p- float3(-4,-0.8,0), H_BAR);\r",
              "    d=min(d,dBox(p- float3(-4,0,0), H_BAR));\r",
              "    d=min(d,dBox(p- float3(-4,+0.80,0), H_BAR));    \r",
              "    d=min(d,dBox(p- float3(-4.8,+0.40,0), S_BAR));    \r",
              "    d=min(d,dBox(p- float3(-3.2,-0.40,0), S_BAR));    \r",
              "    \r",
              "    d=min(d,dBox(p- float3(-1.5,+0.80,0), H_BAR));    \r",
              "    d=min(d,dBox(p- float3(-1.5, 0,0), I_BAR));    \r",
              "    \r",
              "    d=min(d,dBox(p- float3(0, 0,0), I_BAR));    \r",
              "    \r",
              "    d=min(d,dBox(p- float3(+0.7, 0,0), I_BAR));  \r",
              "    d=min(d,dBox(p- float3(+1.5,-0.80,0), H_BAR));    \r",
              "    \r",
              "    d=min(d,dBox(p- float3(+3., 0,0), I_BAR));  \r",
              "    d=min(d,dBox(p- float3(+4,-0.80,0), H_BAR));    \r",
              "    \r",
              "    return d;\r",
              "}\r",
              "\r",
              "float3 rep(float3 p, float3 c) {\r",
              "    return float3( \r",
              "            mod(p.x,c.x),  \r",
              "            mod(p.y,c.y), \r",
              "            mod(p.z,c.z)) - 0.5*c;\r",
              "    \r",
              "\r",
              "}\r",
              "\r",
              "float dRepeatedXBars(float3 p, float3 r, float h, float w) {\r",
              "    float3 p1= rep(p, r);\r",
              "    return sdBox2(p1.xy, float2(h, w));;\r",
              "}\r",
              "\r",
              "float dRepeatedYBars(float3 p, float3 r, float h, float w) {\r",
              "    float3 p1= rep(p, r);\r",
              "    return sdBox2(p1.xz, float2(h, w));;\r",
              "}\r",
              "float dRepeatedZBars(float3 p, float3 r, float h, float w) {\r",
              "    float3 p1= rep(p, r);\r",
              "    return sdBox2(p1.yz, float2(h, w));;\r",
              "}\r",
              "\r",
              "\r",
              "int iters = 7;\r",
              "\r",
              "// Compute the distance from |pos| to the Mandelbox.\r",
              "float sdMandelBox(float3 pos) {\r",
              "    float4 pN = float4(pos,1);\r",
              "    // precomputed constants\r",
              "    float minRad2 = clamp(Minrad, 1.0e-9, 1.0);\r",
              "    float4 scale = float4(Scale, Scale, Scale, abs(Scale)) / minRad2 ;\r",
              "    float absScalem1 = abs(Scale - 1.0);\r",
              "    float AbsScaleRaisedTo1mIters = pow(abs(Scale), float(1-iters));\r",
              "    float DIST_MULTIPLIER = StepSize;\r",
              "\r",
              "    float4 p = float4(pos,1);\r",
              "    float4 p0 = p;  // p.w is the distance estimate\r",
              "  \r",
              "\r",
              "  for (int i=0; i<iters; i++) {\r",
              "     //box folding: \r",
              "     //if (p>1) p = 2-p; else if (p<-1) p = -2-p;\r",
              "    p.xyz = abs(1+p.xyz) - p.xyz - abs(1.0-p.xyz);  // add;add;abs.add;abs.add (130.4%)\r",
              "    //p.xyz = clamp(p.xyz*0.5+0.5, 0.0, 1.0) * 4.0 - 2.0 - p.xyz;  // mad.sat;mad;add (102.3%)    \r",
              "    //p.xyz = clamp(p.xyz, -1.0, 1.0) * 2.0 - p.xyz;  // min;max;mad    \r",
              "    p.xyz = clamp(p.xyz, Clamping.x, Clamping.y) * Clamping.z - p.xyz;  // min;max;mad\r",
              "    \r",
              "\r",
              "    // sphere folding: if (r2 < minRad2) p /= minRad2; else if (r2 < 1.0) p /= r2;\r",
              "    float r2 = dot(p.xyz, p.xyz);\r",
              "    p *= clamp(max(minRad2/r2, minRad2), Fold.x, Fold.y);  // dp3,div,max.sat,mul\r",
              "    p.xyz+= float3(Increment.x,Increment.y,Increment.z);\r",
              "    // scale, translate\r",
              "    p = p*scale + p0;\r",
              "  }\r",
              "  float d=((length(p.xyz) - absScalem1) / p.w - AbsScaleRaisedTo1mIters) * DIST_MULTIPLIER;\r",
              "  return d;\r",
              "  //d=0.1;\r",
              "  //return max(udCubes(p0),d );\r",
              "  //return max( udCubes(p0), dStillLogo(p0));\r",
              "  //return min(dStillLogo(pN), d);\r",
              "}\r",
              "\r",
              "\r",
              "\r",
              "float getDistance(float3 p) {\r",
              "    //float dPlanes = dRotatedPlanes(p, 5);\r",
              "    //float dColumns= dBox( float3( mod(p.x,0),mod(p.y,3.2),mod(p.z,2))  - float3( 1,0,0), float3(10.5,2.5,0.5));\r",
              "    \r",
              "    //return max(dPlanes , dColumns);\r",
              "    //return dPlanes;\r",
              "    //return max(dPlanes, dBox(p, float3(4,4,4)));\r",
              "    //p= float3( mod(p.x,3),  mod(p.y,5), mod(p.z,6));\r",
              "    //p= rep(p, float3(SpherePos.x/p.y,SpherePos.y*p.x,SpherePos.z*p.x/p.y));\r",
              "    float3 p1= rep(p, float3(SpherePos.x,SpherePos.y, SpherePos.z));\r",
              "    float dBars= sdCross(p1, float3(20,16,7));\r",
              "    \r",
              "    //float3 p2= rep(p, float3(2,10, 1));\r",
              "    //float dBox= sdBox(p2, float3(1,10,14));\r",
              "    float d=10000;\r",
              "    \r",
              "    \r",
              "    //d= max(d, sdBox(p, SpherePos)); //limit to big block\r",
              "    d=min(d,sdMandelBox(p));\r",
              "    d= max(d, dRepeatedYBars(p, 0.2, 0.72,1.8));  //big blocks\r",
              "    //d= min(d, dSphere(p));\r",
              "    \r",
              "    // surface ace offeset\r",
              "    //d+= clamp(dRepeatedYBars(p, SpherePos, 0.1,1) , \r",
              "    //    0,0.001);\r",
              "        \r",
              "    d+= clamp( sdBox(\r",
              "                   rep(p,  float3(0.22, 0.23, 0.46)), \r",
              "                    SpherePos) , \r",
              "         0,0.01*SphereRadius);\r",
              "    \r",
              "    //streetx\r",
              "    d= min(d, dRepeatedXBars(p, float3(5.1,1.1,0.1) , 0.05,0.01));\r",
              "    d= min(d, dRepeatedZBars(p - float3(10.4,0.30,3.0) , float3(4.1,2.1,3.1) , 0.05,0.01));\r",
              "    \r",
              "    d= min(d, sdBox( p+float3(0,7,0), float3(1000,1,1000)));\r",
              "    return d;\r",
              "    \r",
              "}\r",
              "\r",
              "\r",
              "// Blinn-Phong shading model with rim lighting (diffuse light bleeding to the other side).\r",
              "// |normal|, |view| and |light| should be normalized.\r",
              "float3 blinn_phong(float3 normal, float3 view, float3 light, float3 diffuseColor) {\r",
              "  float3 halfLV = normalize(light + view);\r",
              "  float spe = pow(max( dot(normal, halfLV), Spec.x ), Spec.y);\r",
              "  float dif = dot(normal, light) * 0.1 + 0.15;\r",
              "  return dif*diffuseColor + spe*Specular*Specular.a;\r",
              "}\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "float3 getNormal(float3 p, float offset)\r",
              "{\r",
              "    float dt=.0001;\r",
              "    float3 n=float3(getDistance(p+float3(dt,0,0)),\r",
              "                    getDistance(p+float3(0,dt,0)),\r",
              "                    getDistance(p+float3(0,0,dt)))-getDistance(p);\r",
              "    return normalize(n);\r",
              "}\r",
              "\r",
              "\r",
              "float getAO(float3 aoposition, float3 aonormal, float aodistance, float aoiterations, float aofactor)\r",
              "{\r",
              "    float ao = 0.0;\r",
              "    float k = aofactor;\r",
              "    aodistance /= aoiterations;\r",
              "    for (float i=1; i < 4; i += 1)\r",
              "    {\r",
              "        ao += (i * aodistance - getDistance(aoposition + aonormal * i * aodistance)) / pow(2,i);\r",
              "    }\r",
              "    return 1.0 - k * ao;\r",
              "}\r",
              "/*\r",
              "float4 getTexture2(float3 p, float3 n) \r",
              "{\r",
              "    float s = 1.3;\r",
              "    float dx = abs(n.x);\r",
              "    float dy = abs(n.y);\r",
              "    float dz = abs(n.z);\r",
              "    if (dx > dy  > dz) return  Image.Sample(samLinear, float2(frac(p.z*s), frac(p.y * s))); \r",
              "    if (dy > dz) return  Image.Sample(samLinear, float2(frac(p.x*s), frac(p.z * s)));\r",
              "    return  Image.Sample(samLinear, float2(frac(p.x*s), frac(p.y * s)));\r",
              "}*/\r",
              "\r",
              "float MAX_DIST=300;\r",
              "\r",
              "float3 surfaceColor1 = float3(0.95, 0.64, 0.1);\r",
              "float3 surfaceColor2 = float3(0.89, 0.95, 0.75);\r",
              "float3 surfaceColor3 = float3(0.55, 0.06, 0.03);\r",
              "\r",
              "// Compute the color at |pos|.\r",
              "float3 color(float3 pos) {\r",
              "  float3 p = pos, p0 = p;\r",
              "  float trap = 1.0;\r",
              "\r",
              "  for (int i=0; i<3; i++) {\r",
              "    p.xyz = clamp(p.xyz, -1.0, 1.0) * 2.0 - p.xyz;\r",
              "    float r2 = dot(p.xyz, p.xyz);\r",
              "    p *= clamp(max(Minrad/r2, Minrad), 0.0, 1.0);\r",
              "    p = p*Scale + p0.xyz;\r",
              "    trap = min(trap, r2);\r",
              "  }\r",
              "  // |c.x|: log final distance (fractional iteration count)\r",
              "  // |c.y|: spherical orbit trap at (0,0,0)\r",
              "  float2 c = clamp(float2( 0.33*log(dot(p,p))-1.0, sqrt(trap) ), 0.0, 1.0);\r",
              "\r",
              "  return lerp(lerp(Surface1, Surface2, c.y), Surface3, c.x);\r",
              "}\r",
              "\r",
              "\r",
              "float4 PS( PS_IN input ) : SV_Target\r",
              "{\r",
              "\r",
              "    //float4 filter= Image2.Sample(samLinear, input.texCoord);\r",
              "    float3 p = input.worldTViewPos;\r",
              "    float3 dp = normalize(input.worldTViewDir);\r",
              "\r",
              "  float totalD = 0.0;\r",
              "  float D = 3.4e38;\r",
              "  D=StepSize;\r",
              "  float extraD = 0.0;\r",
              "  float lastD;\r",
              "  \r",
              "  int steps;\r",
              "\r",
              "    /*  \r",
              "    // Intersect the view ray with the Mandelbox using raymarching.\r",
              "    for (steps=0; steps<MaxSteps; steps++) {\r",
              "        lastD = D;\r",
              "        D = getDistance(p + totalD * dp);\r",
              "\r",
              "        // Overstepping: have we jumped too far? Cancel last step.    \r",
              "        if (extraD > 0.0 && D < extraD) {\r",
              "            totalD -= extraD;\r",
              "            extraD = 0.0; \r",
              "            D = 3.4e38;\r",
              "            steps--;\r",
              "            continue;\r",
              "        }\r",
              "\r",
              "        if (D < MinDistance/1000) break;\r",
              "\r",
              "        totalD += D;\r",
              "\r",
              "        // Overstepping is based on the optimal length of the last step.\r",
              "        totalD += extraD = 0.096 * D*(D+extraD)/lastD;\r",
              "    }\r",
              "    */\r",
              "\r",
              "\r",
              "    // SImple iterator\r",
              "    \r",
              "    \r",
              "    for(steps=0;steps<MaxSteps && abs(D)>MinDistance/1000;steps++)\r",
              "    {\r",
              "        D=getDistance(p);\r",
              "        p+=dp*D;\t\r",
              "    }\r",
              "    \r",
              "    \r",
              "    p += totalD * dp;\r",
              "\r",
              "\r",
              "  // Color the surface with Blinn-Phong shading, ambient occlusion and glow.\r",
              "  float3 col = Background;\r",
              "\r",
              "  // We've got a hit or we're not sure.\r",
              "  if (D < MAX_DIST) {\r",
              "    float3 n = normalize( getNormal(p, D));\r",
              "    //n*=float3(1,1,10);\r",
              "    n= normalize(n);\r",
              "    col = color(p);\r",
              "    //col = blinn_phong(n, -dp, normalize(input.worldTViewPos+float3(10,1,0)+dp), col);\r",
              "    col = blinn_phong(n, -dp, LightPos, col);\r",
              "    \r",
              "    //float getAO(float3 aoposition, float3 aonormal, float aodistance, float aoiterations, float aofactor)\r",
              "    float distanceLight = pow(Diffuse.a, length(p-LightPos));\r",
              "\r",
              "    col = lerp(AmbientOcclusion, col + distanceLight*Diffuse, getAO(p,n,AODistance, 5, AmbientOcclusion.a));\r",
              "\r",
              "    // We've gone through all steps, but we haven't hit anything.\r",
              "    // Mix in the background color.\r",
              "    if (D > MinDistance) {\r",
              "      col = lerp(col, Background, clamp(log(D/MinDistance) * DistToColor, 0.0, 1.0));\r",
              "    }\r",
              "  }\r",
              "\r",
              "  // Glow is based on the number of steps.\r",
              "  col = lerp(col, Glow, float(steps)/float(MaxSteps) * Glow.a);\r",
              "  col = lerp(col, Background, clamp(log( length(p- input.worldTViewPos)/Fog), 0,1));\r",
              "    //col = float3(1,1,0);\r",
              "  return float4(col, 1);\r",
              "\r",
              "\r",
              "\r",
              "}\r",
              "//<<< PS\r",
              "\r",
              "//>>> _technique\r",
              "technique10 Render",
              "{",
              "    pass P0",
              "    {",
              "        SetGeometryShader( 0 );",
              "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
              "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
              "    }",
              "}",
              "//<<< _technique\r",
              ""
            ]
          },
          {
            "ID": "097050f1-4b25-484b-aeae-55bbea3793c0",
            "Type": "Float",
            "Value": [
              "0.2499999"
            ]
          },
          {
            "ID": "f5139d14-2cec-482f-a440-3ef5643cfa07",
            "Type": "Float",
            "Value": [
              "2.51"
            ]
          },
          {
            "ID": "9558166e-582a-43da-969c-6967cd074c76",
            "Type": "Float",
            "Value": [
              "-1"
            ]
          },
          {
            "ID": "5af0d6da-3d6b-424d-a9a3-67976cd2926e",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "31d9487b-13ac-45ea-adfe-4dc0890cdcf0",
            "Type": "Float",
            "Value": [
              "2"
            ]
          },
          {
            "ID": "1f88250e-fa9a-4b1f-acc7-6d7c114006f0",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "99c7e81c-93c4-45ba-9d1f-41e1b938ee7e",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "4932bf0d-2040-4a7d-b6b6-79636d1fb9ec",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "43f13535-3e03-4c72-ad71-6531a1d5dd30",
            "Type": "Float",
            "Value": [
              "28.6"
            ]
          },
          {
            "ID": "816a8894-1fff-4832-b79b-2d3db2275dec",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "1581a9a7-ab2a-4f26-978c-e904a347ceba",
            "Type": "Float",
            "Value": [
              "0.001"
            ]
          },
          {
            "ID": "6287f4bf-1f02-45fb-a3b1-7d78dbca3871",
            "Type": "Float",
            "Value": [
              "23.34501"
            ]
          },
          {
            "ID": "3fa961de-e4ee-438b-923c-f3e4e18fbb98",
            "Type": "Float",
            "Value": [
              "0.173"
            ]
          },
          {
            "ID": "d07dfc13-c7ce-42e3-9948-03da412753e2",
            "Type": "Float",
            "Value": [
              "0.1200512"
            ]
          },
          {
            "ID": "92936d2f-e94a-4415-88d6-d676f595874b",
            "Type": "Float",
            "Value": [
              "0.1464037"
            ]
          },
          {
            "ID": "61f46740-43ca-4510-ad13-4cba6eed0156",
            "Type": "Float",
            "Value": [
              "0.1464037"
            ]
          },
          {
            "ID": "a49caba6-87e3-4ae9-bd61-c7dc33e83e0b",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "4fc6eed8-d4a7-47c2-8d25-3b4a4c8f0e53",
            "Type": "Float",
            "Value": [
              "0.07923657"
            ]
          },
          {
            "ID": "f55472a7-3509-4ba2-a285-599c6bfd6e7a",
            "Type": "Float",
            "Value": [
              "0.1489131"
            ]
          },
          {
            "ID": "5a801ea7-7189-49c0-a297-7b6358b804e7",
            "Type": "Float",
            "Value": [
              "0.1694746"
            ]
          },
          {
            "ID": "4b5ba091-c512-498e-8588-71535649a001",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "5d69a672-2d5a-4b8b-8b85-5eb94300134b",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "8220eacc-21c1-4926-b5dc-59e33fd2e055",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "d0fcd8a6-9352-4f07-9593-0afa4e712680",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "92ac7a5e-5a81-46f6-9ec7-e5d2c5c8fe16",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "4c873a01-7009-4a06-a385-3353ba1305b5",
            "Type": "Float",
            "Value": [
              "0.8149999"
            ]
          },
          {
            "ID": "043705c0-b739-4b1e-8607-05d6345dcd58",
            "Type": "Float",
            "Value": [
              "0.2009863"
            ]
          },
          {
            "ID": "98c40404-0454-4135-84e4-5068f5ee553b",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "ac26ba86-d5c2-480a-b1f7-b8070ceb7577",
            "Type": "Float",
            "Value": [
              "0.001"
            ]
          },
          {
            "ID": "d3c75309-1709-44a2-9e6c-4d0eb65b5b7e",
            "Type": "Float",
            "Value": [
              "0.4267178"
            ]
          },
          {
            "ID": "3a0c60a8-426b-4980-983f-9f00900b412b",
            "Type": "Float",
            "Value": [
              "0.431587"
            ]
          },
          {
            "ID": "53f60847-a2ff-4542-a3ec-f9f7605b014d",
            "Type": "Float",
            "Value": [
              "0.5064228"
            ]
          },
          {
            "ID": "8a55cf0d-1139-4f76-8b3f-9f4a6015a04d",
            "Type": "Float",
            "Value": [
              "1.77"
            ]
          },
          {
            "ID": "ee73934c-9d3b-4fdb-8235-b5dcd074b2ef",
            "Type": "Float",
            "Value": [
              "0.89"
            ]
          },
          {
            "ID": "6d6ebdee-6860-4959-a366-bfc6a0650a4c",
            "Type": "Float",
            "Value": [
              "29.69"
            ]
          },
          {
            "ID": "645abe13-e685-4553-b3bb-b4375535d1b5",
            "Type": "Float",
            "Value": [
              "0.04867237"
            ]
          },
          {
            "ID": "4a49c7e3-5a2c-423f-a95b-8f82abf31cd6",
            "Type": "Float",
            "Value": [
              "0.04135569"
            ]
          },
          {
            "ID": "15842c41-9b58-4c60-8215-269d52dcb72c",
            "Type": "Float",
            "Value": [
              "0.0628984"
            ]
          },
          {
            "ID": "ad560863-1d4a-4228-86f8-ba5a52e5b01a",
            "Type": "Float",
            "Value": [
              "-0.2"
            ]
          },
          {
            "ID": "219f8692-c6f2-452a-ab48-f485e7c1aa4c",
            "Type": "Float",
            "Value": [
              "0.06776762"
            ]
          },
          {
            "ID": "a7038ec0-5a93-4ecb-80ca-6e5eda606fbd",
            "Type": "Float",
            "Value": [
              "0.07152263"
            ]
          },
          {
            "ID": "057088a9-da7f-4c84-a4b0-9fb9def374eb",
            "Type": "Float",
            "Value": [
              "0.1058498"
            ]
          },
          {
            "ID": "137040bd-419a-4ed5-a262-a06dbfff2c48",
            "Type": "Float",
            "Value": [
              "0.0357309"
            ]
          },
          {
            "ID": "47a14af5-c3fe-43e6-8ee8-ab850d21ad30",
            "Type": "Float",
            "Value": [
              "0.005249927"
            ]
          },
          {
            "ID": "078cef23-4006-4d27-8fff-64ac8c7f8f83",
            "Type": "Float",
            "Value": [
              "0.02621937"
            ]
          },
          {
            "ID": "1431b282-884f-49a3-8779-d6def935f6cf",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "df4597e3-94f2-4688-9ac4-29a9a7eb6df8",
            "Type": "Float",
            "Value": [
              "0.1599996"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "Camera",
      "MetaInstanceID": "195fa4fd-8eb7-4c26-b817-fffcc034df6e",
      "MetaID": "43403a8d-9c87-414a-89e2-9393b87d9e47",
      "OperatorProperties": {
        "Name": "",
        "PosX": "1549.80948054763",
        "PosY": "1317.65929321049",
        "Width": "100",
        "Visible": "True",
        "Disabled": "False",
        "Inputs": [
          {
            "ID": "85c9b855-49ac-4e01-a28f-6e78623790e6",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "af457538-0d01-44c1-8517-6cc44cf9139a",
            "Type": "Float",
            "Value": [
              "1"
            ]
          },
          {
            "ID": "da7097f3-8251-4dcc-8c6a-0efdb78c3a30",
            "Type": "Float",
            "Value": [
              "0"
            ]
          },
          {
            "ID": "796f5b32-395f-4d8c-bce2-4c3c69ca7d7b",
            "Type": "Float",
            "Value": [
              "-1"
            ]
          },
          {
            "ID": "f8cfff94-5eac-4970-a093-2398cbe1811d",
            "Type": "Float",
            "Value": [
              "0.1"
            ]
          },
          {
            "ID": "e6b3f27b-b21e-429b-99fb-f1e591b672ce",
            "Type": "Float",
            "Value": [
              "1000"
            ]
          },
          {
            "ID": "0ccdda43-9ffb-4e32-9056-13b081866cfc",
            "Type": "Float",
            "Value": [
              "57"
            ]
          },
          {
            "ID": "e56ef057-a4c7-46a1-a6a0-6dbf76eeafcb",
            "Type": "Float",
            "Value": [
              "0"
            ]
          }
        ],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "4fcbd50e-eb41-4eb6-9de4-d412f68018f7",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "100",
        "PosY": "100",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "0.00169938594455471": {
                  "Value": 4.6231184005737305,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": -0.13165475997625098,
                  "OutTangentAngle": 3.0099378936135421,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "10": {
                  "Value": 3.2991361618041992,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.4206172632576815,
                  "OutTangentAngle": 2.2790246096678883,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "11.848355545277": {
                  "Value": -9.2091178894042969,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.13026384166703,
                  "OutTangentAngle": 1.9886711880772368,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "11.9653459298924": {
                  "Value": -1.1270593404769897,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 1.5313724901553418,
                  "OutTangentAngle": 4.6729651437451345,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "12.3648047454276": {
                  "Value": 3.8840169906616211,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 1.3600168091451026,
                  "OutTangentAngle": 4.5016094627348959,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "14.0557218000137": {
                  "Value": 8.64299201965332,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.372084826227012,
                  "OutTangentAngle": 3.5136774798168053,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "15.1131924534948": {
                  "Value": 4.9566125869750977,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.5885914556109944,
                  "OutTangentAngle": 2.4469988020212008,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "22.1538461538462": {
                  "Value": 1.8965365886688232,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.23163589622261893,
                  "OutTangentAngle": 3.3732285498124122,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "24.1893269230769": {
                  "Value": 7.0973968505859375,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.5984587113296156,
                  "OutTangentAngle": 2.456866057739822,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "28.4364406779661": {
                  "Value": -3.23325777053833,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.3894362511406992,
                  "OutTangentAngle": 2.2478435975509061,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "32.1171505418698": {
                  "Value": -2.7656641006469727,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.1449181137309266,
                  "OutTangentAngle": 3.003325460141133,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "38.0968858131488": {
                  "Value": -4.5775580406188965,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.25959866857118541,
                  "OutTangentAngle": 3.4011913221609786,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "41.5348765034083": {
                  "Value": -0.26439279317855835,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.84441162315057117,
                  "OutTangentAngle": 3.9860042767403643,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "42.5549658832449": {
                  "Value": 0.44038501381874084,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.49671057266214053,
                  "OutTangentAngle": 3.6383032262519337,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "44.6292721764852": {
                  "Value": 1.4128903150558472,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.15817575592452782,
                  "OutTangentAngle": 3.2997684095143209,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "48.3470093919921": {
                  "Value": 1.3642637729644775,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2477940280741873,
                  "OutTangentAngle": 3.1062013744843942,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "54.0059317844785": {
                  "Value": 1.080899715423584,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.59303213402297894,
                  "OutTangentAngle": 3.7346247876127721,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "61.8361644115075": {
                  "Value": 10.455361366271973,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.072579579889810911,
                  "OutTangentAngle": 3.2141722334796041,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "68.308126022639": {
                  "Value": 2.1207735538482666,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.6344774368712924,
                  "OutTangentAngle": 2.4928847832814989,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "70.8759268413248": {
                  "Value": 3.6017069816589355,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": -3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "24078540-ec6a-4e2a-a099-abe6b5c90f37",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "100",
        "PosY": "100",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "8fb2c1f0-912a-414c-bd32-ad687eef5081",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "100",
        "PosY": "100",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "0.00169938594455471": {
                  "Value": 5.96836519241333,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": -0.21377363679691896,
                  "OutTangentAngle": 2.9278190167928742,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "10": {
                  "Value": 3.7978270053863525,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.7970159249624391,
                  "OutTangentAngle": 2.6554232713726464,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "11.848355545277": {
                  "Value": -0.2923285961151123,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.4236770094218762,
                  "OutTangentAngle": 2.2820843558320831,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "11.9653459298924": {
                  "Value": 1.5172368288040161,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 1.4457340217927959,
                  "OutTangentAngle": 4.587326675382589,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "12.3648047454276": {
                  "Value": 3.8156547546386719,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.5779813630483156,
                  "OutTangentAngle": 3.7195740166381088,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "14.0557218000137": {
                  "Value": 2.8807621002197266,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.060522614205271219,
                  "OutTangentAngle": 3.2021152677950644,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "15.1131924534948": {
                  "Value": 3.9821977615356445,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.8058438918749387,
                  "OutTangentAngle": 2.6642512382851451,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "22.1538461538462": {
                  "Value": -1.3078821897506714,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.17840273080163,
                  "OutTangentAngle": 3.0368100772118369,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "24.1893269230769": {
                  "Value": 3.0276811122894287,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.43014658200343076,
                  "OutTangentAngle": 3.571739235593224,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "28.4364406779661": {
                  "Value": 1.5745624303817749,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.1442157658663463,
                  "OutTangentAngle": 3.0026231122765528,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "32.1171505418698": {
                  "Value": 1.9188075065612793,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.143913948321746,
                  "OutTangentAngle": 3.0023212947319529,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "38.0968858131488": {
                  "Value": 0.22037224471569061,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.9803172931566468,
                  "OutTangentAngle": 2.8387246395668542,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "41.5348765034083": {
                  "Value": -1.0240576267242432,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2118237843276134,
                  "OutTangentAngle": 3.0702311307378203,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "42.5549658832449": {
                  "Value": -0.098304271697998047,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2222022679485942,
                  "OutTangentAngle": 3.0806096143588007,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "44.6292721764852": {
                  "Value": -1.2129975557327271,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.07506631901326,
                  "OutTangentAngle": 2.9334736654234668,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "48.3470093919921": {
                  "Value": -1.3214492797851563,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.01995420905283803,
                  "OutTangentAngle": 3.1615468626426311,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "54.0059317844785": {
                  "Value": -1.0258688926696777,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.9958899725287393,
                  "OutTangentAngle": 2.8542973189389467,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "61.8361644115075": {
                  "Value": -5.3070850372314453,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.093514794589277445,
                  "OutTangentAngle": 3.2351074481790705,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "68.308126022639": {
                  "Value": 0.31551027297973633,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.47745988335087119,
                  "OutTangentAngle": 3.6190525369406643,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "70.8759268413248": {
                  "Value": -0.63003379106521606,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": -3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "59c0b808-029b-405c-a10a-a0f3ba4c0452",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "100",
        "PosY": "100",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "09dc5954-3a40-463e-a994-315e8e9e5eae",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "100",
        "PosY": "100",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "0.00169938594455471": {
                  "Value": 6.9860296249389648,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.178362145446322,
                  "OutTangentAngle": 3.3199547990361151,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "10": {
                  "Value": 8.78850269317627,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.0678918807178706,
                  "OutTangentAngle": 2.9262992271280779,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "11.848355545277": {
                  "Value": 4.3953714370727539,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.6083180977104039,
                  "OutTangentAngle": 3.749910751300197,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "11.9653459298924": {
                  "Value": 10.157205581665039,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 1.4400454591379679,
                  "OutTangentAngle": 4.5816381127277612,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "12.3648047454276": {
                  "Value": 8.3227090835571289,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 4.9868997645770978,
                  "OutTangentAngle": 1.8453071109873049,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "14.0557218000137": {
                  "Value": 2.73453688621521,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.9492921332158817,
                  "OutTangentAngle": 2.8076994796260886,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "15.1131924534948": {
                  "Value": 7.3693466186523438,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.79994464209885807,
                  "OutTangentAngle": 3.9415372956886512,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "22.1538461538462": {
                  "Value": 11.071754455566406,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.0741016461146469,
                  "OutTangentAngle": 2.9325089925248538,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "24.1893269230769": {
                  "Value": 5.4435300827026367,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.244848442620655,
                  "OutTangentAngle": 2.1032557890308623,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "28.4364406779661": {
                  "Value": 0.40929386019706726,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.0632869990147,
                  "OutTangentAngle": 2.9216943454249069,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "32.1171505418698": {
                  "Value": 3.6715612411499023,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.9941709371716181,
                  "OutTangentAngle": 2.852578283581825,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "38.0968858131488": {
                  "Value": -2.4631400108337402,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.6617613045214563,
                  "OutTangentAngle": 2.5201686509316628,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "41.5348765034083": {
                  "Value": -3.0721046924591064,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.29212418459538186,
                  "OutTangentAngle": 3.433716838185175,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "42.5549658832449": {
                  "Value": -1.1224722862243652,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.17629169694146,
                  "OutTangentAngle": 3.0346990433516674,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "44.6292721764852": {
                  "Value": -3.4041414260864258,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.21239689293388841,
                  "OutTangentAngle": 3.3539895465236818,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "48.3470093919921": {
                  "Value": 0.12657907605171204,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.74133078820482778,
                  "OutTangentAngle": 3.8829234417946208,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "54.0059317844785": {
                  "Value": 5.1804981231689453,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.5122961325431693,
                  "OutTangentAngle": 3.6538887861329625,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "61.8361644115075": {
                  "Value": 7.7125716209411621,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.8253697130795432,
                  "OutTangentAngle": 2.6837770594897497,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "68.308126022639": {
                  "Value": -1.8666377067565918,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.4940263039915553,
                  "OutTangentAngle": 2.3524336504017618,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "70.8759268413248": {
                  "Value": -1.395442008972168,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": -3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "3918a412-6c6a-4f7d-810a-c494767b980a",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "100",
        "PosY": "100",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "6a0a62af-7260-4e1d-ac7e-8b657c628258",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "100",
        "PosY": "100",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "0.00169938594455471": {
                  "Value": -0.13081498444080353,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": -0.036408575048201719,
                  "OutTangentAngle": 3.1051840785415914,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "10": {
                  "Value": -0.49499979615211487,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0191671709879147,
                  "OutTangentAngle": 3.160759824577708,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "11.848355545277": {
                  "Value": 0.096279710531234741,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.43365085835073142,
                  "OutTangentAngle": 3.5752435119405246,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "11.9653459298924": {
                  "Value": 0.41504815220832825,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.621592449304777,
                  "OutTangentAngle": 3.76318510289457,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "12.3648047454276": {
                  "Value": 0.4662204384803772,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.8968286147782694,
                  "OutTangentAngle": 2.7552359611884758,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "14.0557218000137": {
                  "Value": -0.43532168865203857,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.8266919866960967,
                  "OutTangentAngle": 2.6850993331063031,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "15.1131924534948": {
                  "Value": -0.88348215818405151,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.12623281416878,
                  "OutTangentAngle": 2.9846401605789876,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "22.1538461538462": {
                  "Value": -1.7168831825256348,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2712863875491704,
                  "OutTangentAngle": 3.1296937339593773,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "24.1893269230769": {
                  "Value": -0.99148344993591309,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.61482102324848309,
                  "OutTangentAngle": 3.7564136768382763,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "28.4364406779661": {
                  "Value": 2.7193775177001953,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2775488133429018,
                  "OutTangentAngle": 3.1359561597531087,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "32.1171505418698": {
                  "Value": -1.0361690521240234,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.8758402253500472,
                  "OutTangentAngle": 2.7342475717602537,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "38.0968858131488": {
                  "Value": -1.4488958120346069,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.17501651923521702,
                  "OutTangentAngle": 3.31660917282501,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "41.5348765034083": {
                  "Value": 0.62912648916244507,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.37022510243059609,
                  "OutTangentAngle": 3.5118177560203891,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "42.5549658832449": {
                  "Value": 0.28138381242752075,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.8616474633369107,
                  "OutTangentAngle": 2.7200548097471176,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "44.6292721764852": {
                  "Value": -0.75845730304718018,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.58940630921857662,
                  "OutTangentAngle": 3.73099896280837,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "48.3470093919921": {
                  "Value": 4.1545009613037109,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.24423365109849465,
                  "OutTangentAngle": 3.3858263046882877,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "54.0059317844785": {
                  "Value": 1.5782866477966309,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2521810370369355,
                  "OutTangentAngle": 3.1105883834471419,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "61.8361644115075": {
                  "Value": 3.7361454963684082,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2247229003001747,
                  "OutTangentAngle": 3.083130246710382,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "68.308126022639": {
                  "Value": 0.7411920428276062,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.24329212694434424,
                  "OutTangentAngle": 3.3848847805341373,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "70.8759268413248": {
                  "Value": 5.9798941612243652,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": -3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "dd9657fb-dc32-4fe5-b3ad-1e2db250484f",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "100",
        "PosY": "100",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "dadb5ee7-987f-40b0-9701-634768ffe658",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "100",
        "PosY": "100",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "0.00169938594455471": {
                  "Value": 0.27957549691200256,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": -0.0075430054113549971,
                  "OutTangentAngle": 3.1340496481784381,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "10": {
                  "Value": 0.20415683090686798,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.143221799704186,
                  "OutTangentAngle": 3.0016291461143925,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "11.848355545277": {
                  "Value": -1.3894368410110474,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.71195299946063,
                  "OutTangentAngle": 2.5703603458708364,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "11.9653459298924": {
                  "Value": -1.0589877367019653,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.410246276267444,
                  "OutTangentAngle": 3.551838929857237,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "12.3648047454276": {
                  "Value": -1.164820671081543,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.33449529787801646,
                  "OutTangentAngle": 3.4760879514678096,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "14.0557218000137": {
                  "Value": -0.33246642351150513,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.43278395302809575,
                  "OutTangentAngle": 3.5743766066178888,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "15.1131924534948": {
                  "Value": 0.10492029786109924,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.16250624816164519,
                  "OutTangentAngle": 3.3040989017514382,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "22.1538461538462": {
                  "Value": 0.99523746967315674,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "24.1893269230769": {
                  "Value": 0.10492029786109924,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.14810772667337432,
                  "OutTangentAngle": 3.2897003802631675,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "28.4364406779661": {
                  "Value": 1.9326022863388062,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.00909172572917217,
                  "OutTangentAngle": 3.1506843793189652,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "32.1171505418698": {
                  "Value": 0.17699988186359406,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.0505216882652535,
                  "OutTangentAngle": 2.90892903467546,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "38.0968858131488": {
                  "Value": -0.35648626089096069,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.982912731571802,
                  "OutTangentAngle": 2.8413200779820094,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "41.5348765034083": {
                  "Value": -2.7390570640563965,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.9431764186313014,
                  "OutTangentAngle": 2.8015837650415083,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "42.5549658832449": {
                  "Value": -1.9335181713104248,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2219448495336014,
                  "OutTangentAngle": 3.0803521959438078,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "44.6292721764852": {
                  "Value": -2.9287965297698975,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.9554078010134459,
                  "OutTangentAngle": 2.8138151474236532,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "48.3470093919921": {
                  "Value": -3.9030649662017822,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.2606018578604864,
                  "OutTangentAngle": 3.4021945114502796,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "54.0059317844785": {
                  "Value": -0.42835932970046997,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.00065769816233101676,
                  "OutTangentAngle": 3.1422503517521241,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "61.8361644115075": {
                  "Value": -3.894193172454834,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.1557385550921753,
                  "OutTangentAngle": 3.0141459015023822,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "68.308126022639": {
                  "Value": -2.2610609531402588,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.34328646843753718,
                  "OutTangentAngle": 3.4848791220273303,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "70.8759268413248": {
                  "Value": -0.66303044557571411,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": -3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "803673bd-1d48-45d0-b616-b1e7ea86e094",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "100",
        "PosY": "100",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "934d4c08-b097-41d8-866b-910f6702de6a",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "100",
        "PosY": "100",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "0.00169938594455471": {
                  "Value": 0.27503234148025513,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": -0.0012365886605110177,
                  "OutTangentAngle": 3.1403560649292821,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "10": {
                  "Value": 0.26266855001449585,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2726426095756551,
                  "OutTangentAngle": 3.1310499559858616,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "11.848355545277": {
                  "Value": 0.15013200044631958,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.060328245663144424,
                  "OutTangentAngle": 3.2019208992529373,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "11.9653459298924": {
                  "Value": 0.38137847185134888,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.43336319587366606,
                  "OutTangentAngle": 3.5749558494634592,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "12.3648047454276": {
                  "Value": 0.38909196853637695,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2368722079721124,
                  "OutTangentAngle": 3.0952795543823193,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "14.0557218000137": {
                  "Value": 0.28449741005897522,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2281730635435686,
                  "OutTangentAngle": 3.0865804099537755,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "15.1131924534948": {
                  "Value": 0.2377442866563797,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.12806161124606336,
                  "OutTangentAngle": 3.2696542648358564,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "22.1538461538462": {
                  "Value": 1.3272628784179687,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.011468533962777373,
                  "OutTangentAngle": 3.1530611875525705,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "24.1893269230769": {
                  "Value": 0.34183880686759949,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.4348091776116495,
                  "OutTangentAngle": 3.5764018312014425,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "28.4364406779661": {
                  "Value": 4.2452430725097656,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2152211739865129,
                  "OutTangentAngle": 3.0736285203967197,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "32.1171505418698": {
                  "Value": -0.19779999554157257,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.4743042800628112,
                  "OutTangentAngle": 2.3327116264730186,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "38.0968858131488": {
                  "Value": -5.8799099922180176,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.6420534247007188,
                  "OutTangentAngle": 2.5004607711109257,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "41.5348765034083": {
                  "Value": -7.226292610168457,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.13740448723217683,
                  "OutTangentAngle": 3.27899714082197,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "42.5549658832449": {
                  "Value": -5.263465404510498,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.074323142438055045,
                  "OutTangentAngle": 3.2159157960278484,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "44.6292721764852": {
                  "Value": -6.9958829879760742,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.48484997666339624,
                  "OutTangentAngle": 3.6264426302531891,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "48.3470093919921": {
                  "Value": -2.2122690677642822,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.64195819162049372,
                  "OutTangentAngle": 3.7835508452102866,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "54.0059317844785": {
                  "Value": 0.014032501727342606,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.41813306127332728,
                  "OutTangentAngle": 3.5597257148631205,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "61.8361644115075": {
                  "Value": 3.7814366817474365,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.9289532128071469,
                  "OutTangentAngle": 2.7873605592173538,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "68.308126022639": {
                  "Value": -5.2753758430480957,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.4973407807704264,
                  "OutTangentAngle": 2.3557481271806333,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "70.8759268413248": {
                  "Value": -5.2663993835449219,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": -3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "5bfa2d42-a275-486c-b148-ddd4b0f4c1b6",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "100",
        "PosY": "100",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "1d15c6eb-32bd-4f7b-91d1-76f21db78b63",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "100",
        "PosY": "100",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "19.2847899007685": {
                  "Value": 1.1019480228424072,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": -0.31139424941965732,
                  "OutTangentAngle": 2.8301984041701358,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "21.1023192542805": {
                  "Value": 0.51694801794990553,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 5.9717910577599289,
                  "OutTangentAngle": 2.8301984041701358,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "cfaef625-7780-4c87-ac23-1845dfe8bc54",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "100",
        "PosY": "100",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "686d890d-46ea-41a9-ab85-b61d353070ad",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "95.0148347287633": {
                  "Value": -4.2339973449707031,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.62353461098771534,
                  "OutTangentAngle": 3.7651272645775085,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "99.1857962672249": {
                  "Value": -1.2339973449707031,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.62353461098771512,
                  "OutTangentAngle": 3.5364963347660008,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "103.792335600907": {
                  "Value": 0.68600261211395264,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.39490368117620761,
                  "OutTangentAngle": 3.2960706193362066,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "108.788854955411": {
                  "Value": 1.4640536179417953,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.15447796574641348,
                  "OutTangentAngle": 3.0715966578811167,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "115.756545393618": {
                  "Value": 0.97554512129350357,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 6.21318931147091,
                  "OutTangentAngle": 2.7405135951062616,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "118.59420908159": {
                  "Value": -0.22781084290260267,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 5.8821062486960551,
                  "OutTangentAngle": 3.1415926535031633,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "140.254286072629": {
                  "Value": -0.22781084477901459,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 6.283185307092956,
                  "OutTangentAngle": 3.2553456285622757,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "145.74778424821": {
                  "Value": 0.39980029532292249,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.11375297497248273,
                  "OutTangentAngle": -3.0278396786173105,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "a9a9bd4d-8f64-41e7-b0a8-27f4753add06",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "07dedc0e-79a3-4bb6-ab2c-72b3d5962fab",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "95.0553666443091": {
                  "Value": -0.035077500782087379,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 2,
                  "OutEditMode": 2,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "123.645741884771": {
                  "Value": 0.0,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.0012268983140858664,
                  "OutTangentAngle": 3.1530059804272379,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "140.248828023615": {
                  "Value": 0.18950467723195152,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.011413326837444643,
                  "OutTangentAngle": 3.1404482947618759,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "163.180992539593": {
                  "Value": 0.16326204086943363,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 6.2820409483516695,
                  "OutTangentAngle": 3.1404482947618764,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "1dfa7ce0-9067-41b0-a457-16ab8c3191da",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "c8539439-ce85-4030-bdc1-3def665d0596",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "96.2186180097928": {
                  "Value": 2.9599995613098145,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": -0.99528210013811158,
                  "OutTangentAngle": 2.1463105534516815,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "98.4893337328619": {
                  "Value": -0.54000043869018555,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 5.2879032070414747,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "141.739015309272": {
                  "Value": -0.54000043869018555,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.4519535381514195,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "143.297981007748": {
                  "Value": -0.040000438690185547,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.31036088456162647,
                  "OutTangentAngle": -2.8312317690281668,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "df07d4f7-404f-4549-aade-9419c8934314",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "16211097-2bbc-4c4f-ac68-a094d8d7cbe9",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "98.3286940953798": {
                  "Value": 2.4600000381469727,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": -0.092611835357569117,
                  "OutTangentAngle": 3.048980818232224,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "106.127195710458": {
                  "Value": 1.7356945276260376,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 6.1905734718220176,
                  "OutTangentAngle": 3.04898081007002,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "115.878688834254": {
                  "Value": 0.82999992370605469,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 6.1905734636598133,
                  "OutTangentAngle": 3.04898081007002,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "288e218c-cea4-46da-8dc5-7de46955f6e6",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "0cf072e0-50b0-4a60-b91e-47ac5d73c174",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "99.1372957773339": {
                  "Value": 2.3400008678436279,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.10880552294101697,
                  "OutTangentAngle": 3.25039817653081,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "101.947215246822": {
                  "Value": 2.6469478607177734,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.10880552294101689,
                  "OutTangentAngle": 3.3755542198285751,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "105.400690022145": {
                  "Value": 3.4700007438659668,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.23396156623878192,
                  "OutTangentAngle": 3.1584764368272658,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "118.429708492681": {
                  "Value": 3.6900007724761963,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.016883783237472506,
                  "OutTangentAngle": 3.2321226463927859,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "124.708753538723": {
                  "Value": 4.2600007057189941,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.09052999280299269,
                  "OutTangentAngle": 3.1528340436501332,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "130.045941827858": {
                  "Value": 4.3200006484985352,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.011241390060340051,
                  "OutTangentAngle": 3.2294669937684688,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "137.423819756957": {
                  "Value": 4.9700007438659668,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.087874340178675736,
                  "OutTangentAngle": -3.0537183134111174,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "fbe9cead-084e-4ece-982d-3f97623a528e",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "89c000f5-d274-4aa3-ac49-92042c4992a5",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "99.1372957773339": {
                  "Value": 2.0000004768371582,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 0.0,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "5e8e1ea3-2066-4177-ab99-4eb1da39362e",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "b6e571d9-b168-433f-b3c1-7d394ffd60ff",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "99.1372957773339": {
                  "Value": 0.089999862015247345,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": -0.019156596768660439,
                  "OutTangentAngle": 3.1224360568211327,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "105.400690022145": {
                  "Value": -0.03000013530254364,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 6.2640287104109253,
                  "OutTangentAngle": 3.1224360568211322,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "b47a2660-14e6-4343-834a-27ad6494d310",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "69da92ac-dc82-4ff3-9fbe-fae77e55770d",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "93.9549858954807": {
                  "Value": 0.44076375885816482,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 2,
                  "OutEditMode": 2,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "99.7710086774357": {
                  "Value": 0.41670734018799216,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.274663807926836,
                  "OutTangentAngle": 3.1330711543370429,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "101.530442459091": {
                  "Value": 0.37620794881073466,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2595625249127087,
                  "OutTangentAngle": 3.117969871322916,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "115.362663304283": {
                  "Value": 0.048320550864166922,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2661163376782651,
                  "OutTangentAngle": 3.1245236840884725,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "130.401994732283": {
                  "Value": -0.11664756176418223,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2712601334765878,
                  "OutTangentAngle": 3.1296674798867947,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "139.034582580693": {
                  "Value": -0.23398458069966865,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2657744198823133,
                  "OutTangentAngle": 3.12418176629252,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "142.154105423807": {
                  "Value": -0.32128291458910779,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 3,
                  "OutEditMode": 3,
                  "InTangentAngle": 6.2368182385079427,
                  "OutTangentAngle": 9.3784108920977367,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "175.796871447035": {
                  "Value": -0.9020000696182251,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 6.2659257426803894,
                  "OutTangentAngle": 3.1243330890905963,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "c6077932-cf53-433e-be26-461e8b022320",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "943f2ec6-affb-4f68-bc7f-f8ae3eae9192",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "2.38461538461537": {
                  "Value": 0.44799995422363281,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": -0.10791249070771869,
                  "OutTangentAngle": 3.0336801628820744,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "14.8461538461538": {
                  "Value": -0.9020000696182251,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 6.1752728164718675,
                  "OutTangentAngle": 3.0336801628820744,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "286e1bfa-6b1c-4a50-a148-1d80cae33899",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "70ccde18-fdaa-4806-a361-eabdb82f0b7d",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "24.2908144585901": {
                  "Value": 3.5294442173234737,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.039815935895783472,
                  "OutTangentAngle": 3.1814085894855766,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "81.5763379797513": {
                  "Value": 5.8115270123449942,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.039815935895783368,
                  "OutTangentAngle": -3.1017767176940096,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "66acdcc3-72fa-427d-a029-94e487bbc21d",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "200",
        "PosY": "200",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "c1fe48ca-4e67-4e2e-a404-ee8a9cbc6dbf",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "94.8273149955684": {
                  "Value": 0.042661077059033214,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 2,
                  "OutEditMode": 2,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "98.3306555897306": {
                  "Value": 1.8399900197982788,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.4740194753922502,
                  "OutTangentAngle": -2.6675731781975429,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "a2a05261-d2ba-41cd-a00d-a1f7abbd7890",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "0ea6a65b-eed2-42cf-920a-8a57e6af74ba",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "116.738636380954": {
                  "Value": 0.090000629425048828,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 2,
                  "OutEditMode": 2,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "118.518518518519": {
                  "Value": 0.11000062525272369,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 3,
                  "OutEditMode": 3,
                  "InTangentAngle": 0.024459732078966928,
                  "OutTangentAngle": -3.1171329215108261,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "cbd5acae-3296-4986-81f2-26069b043538",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "04a5ac5f-c3c6-4d40-b0d3-f580eaf0c0ec",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "116.738636380954": {
                  "Value": 0.08999866247177124,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 2,
                  "OutEditMode": 2,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "118.518518518519": {
                  "Value": 0.10999865829944611,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 3,
                  "OutEditMode": 3,
                  "InTangentAngle": 0.022505951092550346,
                  "OutTangentAngle": -3.1190867024972428,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "622143a6-ac29-4f63-a20f-232d2bb02601",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "e0d8fd5f-7f21-4a1d-a41e-ac19ebe114a7",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "95.0148347287633": {
                  "Value": -4.2339973449707031,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.62353461098771534,
                  "OutTangentAngle": 3.7651272645775085,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "99.1857962672249": {
                  "Value": -1.2339973449707031,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.62353461098771512,
                  "OutTangentAngle": 3.2453925033022184,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "102.768367346939": {
                  "Value": -0.86078566312789917,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.10379984971242524,
                  "OutTangentAngle": 4.1276266185147206,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "103.792335600907": {
                  "Value": 0.68600261211395264,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.98603396492492723,
                  "OutTangentAngle": 3.2960706193362066,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "108.788854955411": {
                  "Value": 1.4640536179417953,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.15447796574641348,
                  "OutTangentAngle": 3.17629518977678,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "113.321334469817": {
                  "Value": 1.6214053218155513,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.25589290159357819,
                  "OutTangentAngle": 3.3974855551833714,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "116.969946946468": {
                  "Value": 3.6044610113101907,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.955086099038744,
                  "OutTangentAngle": 2.8134934454489513,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "118.753775325081": {
                  "Value": -0.22781084290260267,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 3,
                  "OutEditMode": 3,
                  "InTangentAngle": -1.117286732255383,
                  "OutTangentAngle": 3.1295310678050514,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "139.808136897279": {
                  "Value": 0.01218906044960022,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 3,
                  "OutEditMode": 3,
                  "InTangentAngle": 6.2477452669090123,
                  "OutTangentAngle": 9.3893379204988054,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "140.254286072629": {
                  "Value": -0.22781084477901459,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 5.7896510885681831,
                  "OutTangentAngle": 3.2478054691861193,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "148.156145310502": {
                  "Value": 0.61463819316288237,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 2,
                  "OutEditMode": 2,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": -3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "14c8561a-9d50-47d6-a104-56350c620824",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "773b8ef9-8bc4-45c7-ab53-efbc8b56d9d0",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "93.7999001733921": {
                  "Value": -3.0629343505950146E-10,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 2.4396795694769935E-10,
                  "OutTangentAngle": 3.1415926538337611,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "95.0553666443091": {
                  "Value": 0.0,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 2,
                  "OutEditMode": 2,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "128.842294213023": {
                  "Value": 0.0,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 2,
                  "OutEditMode": 2,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "140.248828023615": {
                  "Value": 0.24949466844273505,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 2,
                  "OutEditMode": 2,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "148.113019615289": {
                  "Value": 0.0054213860099593392,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 2,
                  "OutEditMode": 2,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "163.180992539593": {
                  "Value": -0.0668284363125018,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 6.2783904174497733,
                  "OutTangentAngle": 3.13679776385998,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "e77f81c6-c1b5-45c5-9453-2133a558b44e",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "e4117c9d-f3bb-42e9-9ebb-b8e7bf2a3427",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "96.2186180097928": {
                  "Value": 2.9599995613098145,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": -0.99528210013811158,
                  "OutTangentAngle": 2.1463105534516815,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "98.4893337328619": {
                  "Value": -0.54000043869018555,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 5.2879032070414747,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "141.739015309272": {
                  "Value": -0.54000043869018555,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.2543811626352412,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "146.153276974379": {
                  "Value": -0.040000438690185547,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.11278850904544799,
                  "OutTangentAngle": -3.028804144544345,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "e498cab9-59ec-44bf-a0ab-e5e9c5ff3839",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "b89e3a84-5bd3-4468-b56c-c3ed816e8424",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "98.3286940953798": {
                  "Value": 2.4600000381469727,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": -0.092611835357569117,
                  "OutTangentAngle": 3.048980818232224,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "106.127195710458": {
                  "Value": 1.7356945276260376,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 6.1905734718220176,
                  "OutTangentAngle": 3.04898081007002,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "115.878688834254": {
                  "Value": 0.82999992370605469,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 6.1905734636598133,
                  "OutTangentAngle": 3.04898081007002,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "2181513f-89de-4df7-ba63-b5796fdc1589",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "f7bf2395-128f-40ac-a614-3b4ce5b13ddb",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "99.1372957773339": {
                  "Value": 2.3400008678436279,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.10880552294101697,
                  "OutTangentAngle": 3.25039817653081,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "101.947215246822": {
                  "Value": 2.6469478607177734,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.10880552294101689,
                  "OutTangentAngle": 3.3755542198285751,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "105.400690022145": {
                  "Value": 3.4700007438659668,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.23396156623878192,
                  "OutTangentAngle": 3.1584764368272658,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "118.429708492681": {
                  "Value": 3.6900007724761963,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.016883783237472506,
                  "OutTangentAngle": 3.2321226463927859,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "124.708753538723": {
                  "Value": 4.2600007057189941,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.09052999280299269,
                  "OutTangentAngle": 3.1528340436501332,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "130.045941827858": {
                  "Value": 4.3200006484985352,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.011241390060340051,
                  "OutTangentAngle": 3.2294669937684688,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "137.423819756957": {
                  "Value": 4.9700007438659668,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.087874340178675736,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "141.191868122379": {
                  "Value": 4.9700007438659668,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1797488716994136,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "146.411380486051": {
                  "Value": 5.1692543029785156,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.038156218109620568,
                  "OutTangentAngle": -3.1034364354801727,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "041599a6-422d-4f40-adb1-83cba345635e",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "81499de7-3216-4d78-9374-43ba692434a8",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "99.1372957773339": {
                  "Value": 2.0000004768371582,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "141.191868122379": {
                  "Value": 2.0000004768371582,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1829217389725533,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "146.411380486051": {
                  "Value": 2.2158410549163818,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.041329085382760172,
                  "OutTangentAngle": -3.100263568207033,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "d6b55c0e-0ffc-4e9b-be10-d92291763c9e",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "7c9eb186-7c23-4df1-841a-9fb831e8d763",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "99.1372957773339": {
                  "Value": 0.089999862015247345,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": -0.019156596768660439,
                  "OutTangentAngle": 3.1224360568211327,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "105.400690022145": {
                  "Value": -0.03000013530254364,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 6.2640287104109253,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "141.191868122379": {
                  "Value": -0.03000013530254364,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.0978791805082917,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "146.411380486051": {
                  "Value": -0.25830858945846558,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 6.2394718340980848,
                  "OutTangentAngle": 3.0978791805082917,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "4d442bd8-ae17-41c2-bc5a-8c656e60fcc7",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "c2bed027-a70d-4467-9968-f5d1fa1bda37",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "93.9549858954807": {
                  "Value": 0.44076375885816482,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 2,
                  "OutEditMode": 2,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "101.625852467769": {
                  "Value": 0.3911447737320049,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.27362934077275,
                  "OutTangentAngle": 3.1320366871829575,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "103.385286249424": {
                  "Value": 0.3506453823547474,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2582338770749608,
                  "OutTangentAngle": 3.1166412234851677,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "115.362663304283": {
                  "Value": 0.048320550864166922,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2658905892368884,
                  "OutTangentAngle": 3.1242979356470952,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "130.401994732283": {
                  "Value": -0.11664756176418223,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2712601334765878,
                  "OutTangentAngle": 3.1296674798867947,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "139.034582580693": {
                  "Value": -0.23398458069966865,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2672143311740438,
                  "OutTangentAngle": 3.1256216775842507,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "148.175223320357": {
                  "Value": -0.40052750611122068,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 2,
                  "OutEditMode": 2,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "175.796871447035": {
                  "Value": -0.9020000696182251,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 1,
                  "OutType": 1,
                  "InEditMode": 0,
                  "OutEditMode": 0,
                  "InTangentAngle": 6.2650322456399463,
                  "OutTangentAngle": 3.1234395920501532,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "060b1ab1-06cf-4d4f-a92c-11384ddc47de",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "e86a0453-f6c3-4a9e-b5bd-a480c90e10d0",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "94.2960944370073": {
                  "Value": 5.8784384727478027,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "98.5376252344068": {
                  "Value": 0.54967957735061646,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.4247206295343808,
                  "OutTangentAngle": 2.2831279759445882,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "102.327256955403": {
                  "Value": -3.4212901592254639,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.95252844656613,
                  "OutTangentAngle": 2.8109357929763363,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "107.60938610186": {
                  "Value": -2.5642836093902588,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.11280479232723754,
                  "OutTangentAngle": 3.2543974459170308,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "114.145101835576": {
                  "Value": -2.0824971199035645,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2367599752927116,
                  "OutTangentAngle": 3.095167321702919,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "126.041012209235": {
                  "Value": -3.42059326171875,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.19911009375347957,
                  "OutTangentAngle": 3.3407027473432729,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "138.073719126605": {
                  "Value": 2.7459084987640381,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.57987127257441706,
                  "OutTangentAngle": 3.72146392616421,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "140.722328766179": {
                  "Value": 6.1954412460327148,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.84670040003123848,
                  "OutTangentAngle": 3.9882930536210317,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "144.744378770976": {
                  "Value": 10.288995742797852,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.74723502574996281,
                  "OutTangentAngle": 3.888827679339756,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "146.584848883031": {
                  "Value": 11.626744270324707,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.146703394833267,
                  "OutTangentAngle": 3.0051107412434734,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "146.631246376635": {
                  "Value": 10.029861450195312,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": -3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "c0fe5d37-6766-4808-be99-0b254ca6ebdb",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "e2f74998-bf2c-4d0f-b889-5fb398113f6d",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "94.2960944370073": {
                  "Value": 7.1210331916809082,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "98.5376252344068": {
                  "Value": 5.9185953140258789,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.0491079104840644,
                  "OutTangentAngle": 2.9075152568942713,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "102.327256955403": {
                  "Value": 5.2060151100158691,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2578890745117031,
                  "OutTangentAngle": 3.11629642092191,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "107.60938610186": {
                  "Value": 5.6890649795532227,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.071529632929336492,
                  "OutTangentAngle": 3.2131222865191296,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "114.145101835576": {
                  "Value": 6.0527858734130859,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2750034997433781,
                  "OutTangentAngle": 3.1334108461535854,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "126.041012209235": {
                  "Value": 5.5382575988769531,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.19356278098841762,
                  "OutTangentAngle": 3.3351554345782106,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "138.073719126605": {
                  "Value": 10.743200302124023,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.327022666652505,
                  "OutTangentAngle": 3.4686153202422982,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "140.722328766179": {
                  "Value": 10.518183708190918,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.1481515175009562,
                  "OutTangentAngle": 3.0065588639111631,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "144.744378770976": {
                  "Value": 9.8369207382202148,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 5.9844700633424095,
                  "OutTangentAngle": 2.8428774097526159,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "146.584848883031": {
                  "Value": 8.7129430770874023,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.12764881961686289,
                  "OutTangentAngle": 3.2692414732066561,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "146.631246376635": {
                  "Value": 10.079093933105469,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": -3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "e40493d3-524a-433b-bc35-a30344cef792",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "d3ad19de-5a90-41ce-818a-6e195b2318de",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "94.2960944370073": {
                  "Value": -6.6051888465881348,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "98.5376252344068": {
                  "Value": -6.1449170112609863,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.14139765484782765,
                  "OutTangentAngle": 3.2829903084376206,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "102.327256955403": {
                  "Value": -5.4619722366333008,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.2125172785725008,
                  "OutTangentAngle": 3.3541099321622938,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "107.60938610186": {
                  "Value": -4.1874532699584961,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.10821902244054742,
                  "OutTangentAngle": 3.2498116760303404,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "114.145101835576": {
                  "Value": -4.1780405044555664,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.13380891247064067,
                  "OutTangentAngle": 3.2754015660604336,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "126.041012209235": {
                  "Value": -1.7063115835189819,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.059201813702469741,
                  "OutTangentAngle": 3.2007944672922628,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "138.073719126605": {
                  "Value": -2.759765625,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.029853811584121016,
                  "OutTangentAngle": 3.171446465173914,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "140.722328766179": {
                  "Value": -1.267888069152832,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.355462728034437,
                  "OutTangentAngle": 3.49705538162423,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "144.744378770976": {
                  "Value": -0.28340637683868408,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.004765838372083317,
                  "OutTangentAngle": 3.1463584919618763,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "146.584848883031": {
                  "Value": -1.239948034286499,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.051033921669597776,
                  "OutTangentAngle": 3.192626575259391,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "146.631246376635": {
                  "Value": -0.1870284378528595,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": -3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "50f68b25-c4a2-4a10-b2ac-159ca3e7c1cd",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "6d95620c-0043-45d4-a5f7-f49efc699848",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "94.2960944370073": {
                  "Value": 2.2955541610717773,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "98.5376252344068": {
                  "Value": 2.658686637878418,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.10895255106377022,
                  "OutTangentAngle": 3.2505452046535632,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "102.327256955403": {
                  "Value": 3.1740486621856689,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.19641525931215273,
                  "OutTangentAngle": 3.3380079129019458,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "107.60938610186": {
                  "Value": 4.4637918472290039,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.15132651856689874,
                  "OutTangentAngle": 3.2929191721566919,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "114.145101835576": {
                  "Value": 4.9761791229248047,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.037400617811835422,
                  "OutTangentAngle": 3.1789932714016285,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "126.041012209235": {
                  "Value": 5.1534676551818848,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.002898245279539453,
                  "OutTangentAngle": 3.1444908988693325,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "138.073719126605": {
                  "Value": 5.0455303192138672,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2756967870372851,
                  "OutTangentAngle": 3.1341041334474919,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "140.722328766179": {
                  "Value": 5.0435242652893066,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2831798030071146,
                  "OutTangentAngle": 3.1415871494173215,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "144.744378770976": {
                  "Value": 5.0454936027526855,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.00034218285076727673,
                  "OutTangentAngle": 3.1419348364405604,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "146.584848883031": {
                  "Value": 5.0455303192138672,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.026409255980496302,
                  "OutTangentAngle": 3.1680019095702896,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "146.631246376635": {
                  "Value": 5.0953359603881836,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": -3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "05a4487c-3492-44fd-b25d-ace21ede8440",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "8c327cfd-e697-4088-911f-9d3d9719eadd",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "94.2960944370073": {
                  "Value": 1.5770490169525146,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "98.5376252344068": {
                  "Value": 1.5953495502471924,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2807206049669508,
                  "OutTangentAngle": 3.1391279513771573,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "102.327256955403": {
                  "Value": 1.5572545528411865,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2681510611244837,
                  "OutTangentAngle": 3.12655840753469,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "107.60938610186": {
                  "Value": 1.4589521884918213,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2818079980112884,
                  "OutTangentAngle": 3.1402153444214953,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "114.145101835576": {
                  "Value": 1.5409777164459229,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.014391601638179596,
                  "OutTangentAngle": 3.1559842552279727,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "126.041012209235": {
                  "Value": 1.7242311239242554,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.013883602875903204,
                  "OutTangentAngle": 3.1554762564656964,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "138.073719126605": {
                  "Value": 1.8732144832611084,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.010336066739992456,
                  "OutTangentAngle": 3.1519287203297854,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "140.722328766179": {
                  "Value": 1.8759835958480835,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 7.5771724931614319E-06,
                  "OutTangentAngle": 3.1416002307622861,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "144.744378770976": {
                  "Value": 1.8732650279998779,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2827129655371108,
                  "OutTangentAngle": 3.1411203119473177,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "146.584848883031": {
                  "Value": 1.8732144832611084,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0016758688552425192,
                  "OutTangentAngle": 3.1432685224450356,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "146.631246376635": {
                  "Value": 1.876427173614502,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": -3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "2cdba04a-902b-40f6-96bf-3f22199d0b84",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    },
    {
      "Name": "Curve",
      "MetaInstanceID": "a6e2c9b9-e261-4c79-a810-d4d578121061",
      "MetaID": "145c3a6b-b91f-450d-ac46-b13c66ebce19",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": [
          {
            "ID": "3d314c47-8600-4b64-aea6-b972c28c17bd",
            "State": {
              "Changed": false,
              "Table": {
                "94.2960944370073": {
                  "Value": 0.33023744821548462,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": 3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "98.5376252344068": {
                  "Value": 0.3381008505821228,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.013961085184366026,
                  "OutTangentAngle": 3.155553738774159,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "102.327256955403": {
                  "Value": 0.44236847758293152,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.045458893064359296,
                  "OutTangentAngle": 3.1870515466541525,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "107.60938610186": {
                  "Value": 0.75077736377716064,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0013191110151919063,
                  "OutTangentAngle": 3.1429117646049849,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "114.145101835576": {
                  "Value": 0.45795753598213196,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2530073000891981,
                  "OutTangentAngle": 3.1114146464994046,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "126.041012209235": {
                  "Value": 0.19437870383262634,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2647481630860868,
                  "OutTangentAngle": 3.1231555094962937,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "138.073719126605": {
                  "Value": 0.016732174903154373,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.27086085471585,
                  "OutTangentAngle": 3.1292682011260569,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "140.722328766179": {
                  "Value": 0.013430354185402393,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2831763081703329,
                  "OutTangentAngle": 3.1415836545805393,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "144.744378770976": {
                  "Value": 0.016672145575284958,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.00056320836480276627,
                  "OutTangentAngle": 3.142155861954596,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "146.584848883031": {
                  "Value": 0.016732174903154373,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 6.2816208240312967,
                  "OutTangentAngle": 3.1400281704415032,
                  "Weighted": false,
                  "BrokenTangents": false
                },
                "146.631246376635": {
                  "Value": 0.013720170594751835,
                  "Tension": 0.0,
                  "Bias": 0.0,
                  "Continuity": 0.0,
                  "InType": 2,
                  "OutType": 2,
                  "InEditMode": 1,
                  "OutEditMode": 1,
                  "InTangentAngle": 0.0,
                  "OutTangentAngle": -3.1415926535897931,
                  "Weighted": false,
                  "BrokenTangents": false
                }
              },
              "PreCurveMapping": 0,
              "PostCurveMapping": 0,
              "PreCurveMapper": {},
              "PostCurveMapper": {}
            }
          }
        ]
      }
    },
    {
      "Name": "Time",
      "MetaInstanceID": "9dc86860-058d-4496-b45c-2a1d6fe856c5",
      "MetaID": "253e302b-8141-4d17-96ee-42af092dbf59",
      "OperatorProperties": {
        "Name": "",
        "PosX": "159.564580444277",
        "PosY": "235.85782488903",
        "Width": "100",
        "Visible": "False",
        "Disabled": "False",
        "Inputs": [],
        "States": []
      }
    }
  ],
  "Connections": [
    {
      "SourceOp": "57519acc-33eb-467b-81ab-9ed94fd5922f",
      "SourceOpPart": "e8003528-731e-4480-b090-053763611ba9",
      "TargetOp": "566812ed-c186-402a-9b18-246a95550581",
      "TargetOpPart": "e26b3a5b-cd72-47c4-9e3f-96a679418f26"
    },
    {
      "SourceOp": "566812ed-c186-402a-9b18-246a95550581",
      "SourceOpPart": "76bdc878-f5e9-4b35-a44a-77a23d309c03",
      "TargetOp": "b1c552e7-eacc-442b-affe-582f84b761c8",
      "TargetOpPart": "43db4b66-089f-4222-82ed-2fb064a15371"
    },
    {
      "SourceOp": "5bfa2d42-a275-486c-b148-ddd4b0f4c1b6",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "934d4c08-b097-41d8-866b-910f6702de6a",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "934d4c08-b097-41d8-866b-910f6702de6a",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "b1c552e7-eacc-442b-affe-582f84b761c8",
      "TargetOpPart": "810e1039-99f0-401c-a106-3e87bd2811fb"
    },
    {
      "SourceOp": "803673bd-1d48-45d0-b616-b1e7ea86e094",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "dadb5ee7-987f-40b0-9701-634768ffe658",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "dadb5ee7-987f-40b0-9701-634768ffe658",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "b1c552e7-eacc-442b-affe-582f84b761c8",
      "TargetOpPart": "465c0f09-2564-4d74-97e5-f16e4a168bcf"
    },
    {
      "SourceOp": "dd9657fb-dc32-4fe5-b3ad-1e2db250484f",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "6a0a62af-7260-4e1d-ac7e-8b657c628258",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "6a0a62af-7260-4e1d-ac7e-8b657c628258",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "b1c552e7-eacc-442b-affe-582f84b761c8",
      "TargetOpPart": "db7fa71f-f8fd-4c13-b1a7-716a32ddb7c5"
    },
    {
      "SourceOp": "3918a412-6c6a-4f7d-810a-c494767b980a",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "09dc5954-3a40-463e-a994-315e8e9e5eae",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "09dc5954-3a40-463e-a994-315e8e9e5eae",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "b1c552e7-eacc-442b-affe-582f84b761c8",
      "TargetOpPart": "cd55616a-d11d-4b9b-ad6d-6071cac5e87b"
    },
    {
      "SourceOp": "59c0b808-029b-405c-a10a-a0f3ba4c0452",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "8fb2c1f0-912a-414c-bd32-ad687eef5081",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "8fb2c1f0-912a-414c-bd32-ad687eef5081",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "b1c552e7-eacc-442b-affe-582f84b761c8",
      "TargetOpPart": "28827d15-597c-4214-8be9-72762d229578"
    },
    {
      "SourceOp": "24078540-ec6a-4e2a-a099-abe6b5c90f37",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "4fcbd50e-eb41-4eb6-9de4-d412f68018f7",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "4fcbd50e-eb41-4eb6-9de4-d412f68018f7",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "b1c552e7-eacc-442b-affe-582f84b761c8",
      "TargetOpPart": "7dcec0b7-d396-406c-9291-c6a82a371e47"
    },
    {
      "SourceOp": "b1c552e7-eacc-442b-affe-582f84b761c8",
      "SourceOpPart": "682960d0-f2eb-4d1f-891d-cfbbd3d8a911",
      "TargetOp": "07e01411-c80b-46d5-a166-7f0eb30e286d",
      "TargetOpPart": "20401aaf-1499-4a95-81a8-d2a0728ea3ad"
    },
    {
      "SourceOp": "07e01411-c80b-46d5-a166-7f0eb30e286d",
      "SourceOpPart": "66cd2eaf-9dee-47a2-aa39-a70fa6daaf29",
      "TargetOp": "4e050cd4-2e82-417a-b9b2-bc750106760f",
      "TargetOpPart": "1944a8ac-41ce-4d96-9406-fe49d814d719"
    },
    {
      "SourceOp": "cfaef625-7780-4c87-ac23-1845dfe8bc54",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "1d15c6eb-32bd-4f7b-91d1-76f21db78b63",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "1d15c6eb-32bd-4f7b-91d1-76f21db78b63",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "4e050cd4-2e82-417a-b9b2-bc750106760f",
      "TargetOpPart": "1c992df9-496b-4d87-a43f-de5702aef102"
    },
    {
      "SourceOp": "f6009268-7f50-4de2-a03e-4cca9ee25a15",
      "SourceOpPart": "93b119c0-4467-428d-91be-32ebdeed0a07",
      "TargetOp": "932f6abb-0c77-4ab8-a580-499cd211c3f6",
      "TargetOpPart": "91003f98-786e-44cd-b21f-8485bb82e6bc"
    },
    {
      "SourceOp": "4e050cd4-2e82-417a-b9b2-bc750106760f",
      "SourceOpPart": "cae7b4ea-ca40-4033-9819-904e99638eb8",
      "TargetOp": "f6009268-7f50-4de2-a03e-4cca9ee25a15",
      "TargetOpPart": "3b4927be-6a67-4872-aeb7-b1dee2136f29"
    },
    {
      "SourceOp": "07e01411-c80b-46d5-a166-7f0eb30e286d",
      "SourceOpPart": "66cd2eaf-9dee-47a2-aa39-a70fa6daaf29",
      "TargetOp": "f6009268-7f50-4de2-a03e-4cca9ee25a15",
      "TargetOpPart": "155e09d4-8fa1-4ea7-b7b6-dd3810328f4c"
    },
    {
      "SourceOp": "e8ac2446-eaee-475a-9a31-525992b69eeb",
      "SourceOpPart": "b8881370-4312-4973-9aff-d9caa5002c5c",
      "TargetOp": "57519acc-33eb-467b-81ab-9ed94fd5922f",
      "TargetOpPart": "7b630a81-ed6a-4a09-a78a-8de7aa373f0e"
    },
    {
      "SourceOp": "932f6abb-0c77-4ab8-a580-499cd211c3f6",
      "SourceOpPart": "a651e01f-5c4d-479b-9213-4d1fa7b5318c",
      "TargetOp": "fabee12e-387d-48fc-9da4-c2bccdf1c31e",
      "TargetOpPart": "e26b3a5b-cd72-47c4-9e3f-96a679418f26"
    },
    {
      "SourceOp": "64158800-7831-43cc-9f92-b11e824322f3",
      "SourceOpPart": "76bdc878-f5e9-4b35-a44a-77a23d309c03",
      "TargetOp": "541f8621-0ccf-4b07-a403-6e8b7a99794e",
      "TargetOpPart": "43db4b66-089f-4222-82ed-2fb064a15371"
    },
    {
      "SourceOp": "388fa374-fa98-43e5-b3ef-b168d0fe2d69",
      "SourceOpPart": "90b6418b-d87c-45be-af1b-a93c8c9144e7",
      "TargetOp": "64158800-7831-43cc-9f92-b11e824322f3",
      "TargetOpPart": "e26b3a5b-cd72-47c4-9e3f-96a679418f26"
    },
    {
      "SourceOp": "286e1bfa-6b1c-4a50-a148-1d80cae33899",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "943f2ec6-affb-4f68-bc7f-f8ae3eae9192",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "943f2ec6-affb-4f68-bc7f-f8ae3eae9192",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "6309dd7f-be33-4b7d-ae58-ede911b48129",
      "TargetOpPart": "f3cce3db-1ca4-4143-9d1d-604b35a49bb2"
    },
    {
      "SourceOp": "66acdcc3-72fa-427d-a029-94e487bbc21d",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "70ccde18-fdaa-4806-a361-eabdb82f0b7d",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "70ccde18-fdaa-4806-a361-eabdb82f0b7d",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "4f637de0-97fe-4780-915f-04e4c9ab91b1",
      "TargetOpPart": "f47cf579-dec8-487e-a027-71ef6b25fa62"
    },
    {
      "SourceOp": "65d74aeb-2319-44b5-93d5-06901835659b",
      "SourceOpPart": "95103d9c-ebb6-49d1-a434-493c6d189f53",
      "TargetOp": "de231753-04a5-4ca9-bdd6-4c10a9abb4c4",
      "TargetOpPart": "3b4927be-6a67-4872-aeb7-b1dee2136f29"
    },
    {
      "SourceOp": "c6077932-cf53-433e-be26-461e8b022320",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "69da92ac-dc82-4ff3-9fbe-fae77e55770d",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "69da92ac-dc82-4ff3-9fbe-fae77e55770d",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "f6df4b36-a4d7-4adf-80f5-793181725262",
      "TargetOpPart": "f3cce3db-1ca4-4143-9d1d-604b35a49bb2"
    },
    {
      "SourceOp": "b47a2660-14e6-4343-834a-27ad6494d310",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "b6e571d9-b168-433f-b3c1-7d394ffd60ff",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "b6e571d9-b168-433f-b3c1-7d394ffd60ff",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "f6df4b36-a4d7-4adf-80f5-793181725262",
      "TargetOpPart": "9ee7394d-2396-47c7-b513-9d39fc7174a6"
    },
    {
      "SourceOp": "5e8e1ea3-2066-4177-ab99-4eb1da39362e",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "89c000f5-d274-4aa3-ac49-92042c4992a5",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "89c000f5-d274-4aa3-ac49-92042c4992a5",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "f6df4b36-a4d7-4adf-80f5-793181725262",
      "TargetOpPart": "ca53b10c-7e9d-4dbb-a1bb-604846252f75"
    },
    {
      "SourceOp": "fbe9cead-084e-4ece-982d-3f97623a528e",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "0cf072e0-50b0-4a60-b91e-47ac5d73c174",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "0cf072e0-50b0-4a60-b91e-47ac5d73c174",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "f6df4b36-a4d7-4adf-80f5-793181725262",
      "TargetOpPart": "81a5c41c-3a53-439d-bc14-849c0fe26298"
    },
    {
      "SourceOp": "288e218c-cea4-46da-8dc5-7de46955f6e6",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "16211097-2bbc-4c4f-ac68-a094d8d7cbe9",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "16211097-2bbc-4c4f-ac68-a094d8d7cbe9",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "f6df4b36-a4d7-4adf-80f5-793181725262",
      "TargetOpPart": "bf6dea92-3b8d-40c1-891a-5fb89731531d"
    },
    {
      "SourceOp": "df07d4f7-404f-4549-aade-9419c8934314",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "c8539439-ce85-4030-bdc1-3def665d0596",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "c8539439-ce85-4030-bdc1-3def665d0596",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "f6df4b36-a4d7-4adf-80f5-793181725262",
      "TargetOpPart": "6cee59e5-f9aa-4ee3-99e4-436414d91605"
    },
    {
      "SourceOp": "1dfa7ce0-9067-41b0-a457-16ab8c3191da",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "07dedc0e-79a3-4bb6-ab2c-72b3d5962fab",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "07dedc0e-79a3-4bb6-ab2c-72b3d5962fab",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "f6df4b36-a4d7-4adf-80f5-793181725262",
      "TargetOpPart": "cbe2fa3e-e588-4c61-8426-f4b32b85d0fe"
    },
    {
      "SourceOp": "a9a9bd4d-8f64-41e7-b0a8-27f4753add06",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "686d890d-46ea-41a9-ab85-b61d353070ad",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "686d890d-46ea-41a9-ab85-b61d353070ad",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "f6df4b36-a4d7-4adf-80f5-793181725262",
      "TargetOpPart": "a7b48497-7c8e-4722-9ecd-114859f2d3ee"
    },
    {
      "SourceOp": "3fe41b81-a8d3-4dee-8371-22dc21d30038",
      "SourceOpPart": "76bdc878-f5e9-4b35-a44a-77a23d309c03",
      "TargetOp": "195fa4fd-8eb7-4c26-b817-fffcc034df6e",
      "TargetOpPart": "43db4b66-089f-4222-82ed-2fb064a15371"
    },
    {
      "SourceOp": "7b050d98-7ad2-4cba-b7c5-933f9dbd5259",
      "SourceOpPart": "90b6418b-d87c-45be-af1b-a93c8c9144e7",
      "TargetOp": "3fe41b81-a8d3-4dee-8371-22dc21d30038",
      "TargetOpPart": "e26b3a5b-cd72-47c4-9e3f-96a679418f26"
    },
    {
      "SourceOp": "9dc86860-058d-4496-b45c-2a1d6fe856c5",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "a6e2c9b9-e261-4c79-a810-d4d578121061",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "a6e2c9b9-e261-4c79-a810-d4d578121061",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "195fa4fd-8eb7-4c26-b817-fffcc034df6e",
      "TargetOpPart": "810e1039-99f0-401c-a106-3e87bd2811fb"
    },
    {
      "SourceOp": "2cdba04a-902b-40f6-96bf-3f22199d0b84",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "8c327cfd-e697-4088-911f-9d3d9719eadd",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "8c327cfd-e697-4088-911f-9d3d9719eadd",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "195fa4fd-8eb7-4c26-b817-fffcc034df6e",
      "TargetOpPart": "465c0f09-2564-4d74-97e5-f16e4a168bcf"
    },
    {
      "SourceOp": "05a4487c-3492-44fd-b25d-ace21ede8440",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "6d95620c-0043-45d4-a5f7-f49efc699848",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "6d95620c-0043-45d4-a5f7-f49efc699848",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "195fa4fd-8eb7-4c26-b817-fffcc034df6e",
      "TargetOpPart": "db7fa71f-f8fd-4c13-b1a7-716a32ddb7c5"
    },
    {
      "SourceOp": "50f68b25-c4a2-4a10-b2ac-159ca3e7c1cd",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "d3ad19de-5a90-41ce-818a-6e195b2318de",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "d3ad19de-5a90-41ce-818a-6e195b2318de",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "195fa4fd-8eb7-4c26-b817-fffcc034df6e",
      "TargetOpPart": "cd55616a-d11d-4b9b-ad6d-6071cac5e87b"
    },
    {
      "SourceOp": "e40493d3-524a-433b-bc35-a30344cef792",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "e2f74998-bf2c-4d0f-b889-5fb398113f6d",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "e2f74998-bf2c-4d0f-b889-5fb398113f6d",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "195fa4fd-8eb7-4c26-b817-fffcc034df6e",
      "TargetOpPart": "28827d15-597c-4214-8be9-72762d229578"
    },
    {
      "SourceOp": "c0fe5d37-6766-4808-be99-0b254ca6ebdb",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "e86a0453-f6c3-4a9e-b5bd-a480c90e10d0",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "e86a0453-f6c3-4a9e-b5bd-a480c90e10d0",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "195fa4fd-8eb7-4c26-b817-fffcc034df6e",
      "TargetOpPart": "7dcec0b7-d396-406c-9291-c6a82a371e47"
    },
    {
      "SourceOp": "060b1ab1-06cf-4d4f-a92c-11384ddc47de",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "c2bed027-a70d-4467-9968-f5d1fa1bda37",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "c2bed027-a70d-4467-9968-f5d1fa1bda37",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "7b050d98-7ad2-4cba-b7c5-933f9dbd5259",
      "TargetOpPart": "f3cce3db-1ca4-4143-9d1d-604b35a49bb2"
    },
    {
      "SourceOp": "4d442bd8-ae17-41c2-bc5a-8c656e60fcc7",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "7c9eb186-7c23-4df1-841a-9fb831e8d763",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "7c9eb186-7c23-4df1-841a-9fb831e8d763",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "7b050d98-7ad2-4cba-b7c5-933f9dbd5259",
      "TargetOpPart": "9ee7394d-2396-47c7-b513-9d39fc7174a6"
    },
    {
      "SourceOp": "d6b55c0e-0ffc-4e9b-be10-d92291763c9e",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "81499de7-3216-4d78-9374-43ba692434a8",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "81499de7-3216-4d78-9374-43ba692434a8",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "7b050d98-7ad2-4cba-b7c5-933f9dbd5259",
      "TargetOpPart": "ca53b10c-7e9d-4dbb-a1bb-604846252f75"
    },
    {
      "SourceOp": "041599a6-422d-4f40-adb1-83cba345635e",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "f7bf2395-128f-40ac-a614-3b4ce5b13ddb",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "f7bf2395-128f-40ac-a614-3b4ce5b13ddb",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "7b050d98-7ad2-4cba-b7c5-933f9dbd5259",
      "TargetOpPart": "81a5c41c-3a53-439d-bc14-849c0fe26298"
    },
    {
      "SourceOp": "2181513f-89de-4df7-ba63-b5796fdc1589",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "b89e3a84-5bd3-4468-b56c-c3ed816e8424",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "b89e3a84-5bd3-4468-b56c-c3ed816e8424",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "7b050d98-7ad2-4cba-b7c5-933f9dbd5259",
      "TargetOpPart": "bf6dea92-3b8d-40c1-891a-5fb89731531d"
    },
    {
      "SourceOp": "e498cab9-59ec-44bf-a0ab-e5e9c5ff3839",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "e4117c9d-f3bb-42e9-9ebb-b8e7bf2a3427",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "e4117c9d-f3bb-42e9-9ebb-b8e7bf2a3427",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "7b050d98-7ad2-4cba-b7c5-933f9dbd5259",
      "TargetOpPart": "6cee59e5-f9aa-4ee3-99e4-436414d91605"
    },
    {
      "SourceOp": "e77f81c6-c1b5-45c5-9453-2133a558b44e",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "773b8ef9-8bc4-45c7-ab53-efbc8b56d9d0",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "773b8ef9-8bc4-45c7-ab53-efbc8b56d9d0",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "7b050d98-7ad2-4cba-b7c5-933f9dbd5259",
      "TargetOpPart": "cbe2fa3e-e588-4c61-8426-f4b32b85d0fe"
    },
    {
      "SourceOp": "14c8561a-9d50-47d6-a104-56350c620824",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "e0d8fd5f-7f21-4a1d-a41e-ac19ebe114a7",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "e0d8fd5f-7f21-4a1d-a41e-ac19ebe114a7",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "7b050d98-7ad2-4cba-b7c5-933f9dbd5259",
      "TargetOpPart": "a7b48497-7c8e-4722-9ecd-114859f2d3ee"
    },
    {
      "SourceOp": "622143a6-ac29-4f63-a20f-232d2bb02601",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "04a5ac5f-c3c6-4d40-b0d3-f580eaf0c0ec",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "04a5ac5f-c3c6-4d40-b0d3-f580eaf0c0ec",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "7b050d98-7ad2-4cba-b7c5-933f9dbd5259",
      "TargetOpPart": "e9bbbdd8-dcf0-439a-bc80-81cd4831370f"
    },
    {
      "SourceOp": "cbd5acae-3296-4986-81f2-26069b043538",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "0ea6a65b-eed2-42cf-920a-8a57e6af74ba",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "0ea6a65b-eed2-42cf-920a-8a57e6af74ba",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "7b050d98-7ad2-4cba-b7c5-933f9dbd5259",
      "TargetOpPart": "a5c17649-ce38-43c0-8cad-9fe661c0e1cf"
    },
    {
      "SourceOp": "a2a05261-d2ba-41cd-a00d-a1f7abbd7890",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "c1fe48ca-4e67-4e2e-a404-ee8a9cbc6dbf",
      "TargetOpPart": "9de89cc6-2867-4eb3-9e16-e9568d14a31e"
    },
    {
      "SourceOp": "c1fe48ca-4e67-4e2e-a404-ee8a9cbc6dbf",
      "SourceOpPart": "fccdfff4-07c3-4c5c-9b4c-9a62c7ad7d66",
      "TargetOp": "7b050d98-7ad2-4cba-b7c5-933f9dbd5259",
      "TargetOpPart": "2d11f8c1-d04e-4598-a43e-095ecf5f7943"
    }
  ]
}