{
  "Name": "EquallyTriggered",
  "_id": "526ea21d-4dcc-424a-a1b3-2708d040a218",
  "Namespace": "lib.math.helper",
  "Description": "",
  "Inputs": [
    {
      "Name": "InputATrigger",
      "MetaInstanceID": "cefd62df-6ee7-49e0-af18-f795c6e6bbfa",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "InputBTrigger",
      "MetaInstanceID": "c090b375-6ce6-4b41-91a1-4100947d9c09",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "TimeEpsilon",
      "MetaInstanceID": "ec20a489-159f-4abf-80b9-d2fdef4607d8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Value",
      "MetaInstanceID": "4e81801f-4104-408f-93b6-4cb51f126731",
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "cc657ac9-a40a-4f7d-bfc7-27b003d33937",
      "MetaID": "f45e4748-aaa5-40e2-8192-c9ada6f06d5e",
      "Name": "EquallyTriggeredFunc",
      "Version": "e3937ba6-180a-44c6-9a76-4a23b16cca5e",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.IDf45e4748_aaa5_40e2_8192_c9ada6f06d5e",
        "{",
        "    public class Class_EquallyTriggered : OperatorPart.Function, Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            InputATrigger = 0,",
        "            InputBTrigger = 1,",
        "            TimeEpsilon = 2",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx)",
        "        {",
        "            //>>> _params",
        "            var InputATrigger = inputs[(int)InputId.InputATrigger].Eval(context).Value;",
        "            var InputBTrigger = inputs[(int)InputId.InputBTrigger].Eval(context).Value;",
        "            var TimeEpsilon = inputs[(int)InputId.TimeEpsilon].Eval(context).Value;",
        "            //<<< _params",
        "",
        "            if (context.Time < _tiggerInputATime || context.Time < _tiggerInputBTime)",
        "            {",
        "                _oldInputATrigger = 1;",
        "                _tiggerInputATime = context.Time;",
        "                _tiggerInputATimeValid = false;",
        "                _oldInputBTrigger = 1;",
        "                _tiggerInputBTime = context.Time;",
        "                _tiggerInputBTimeValid = false;",
        "                //Logger.Info(this, \"reset\");",
        "            }",
        "",
        "            bool inputATriggerUp = _oldInputATrigger < 0.5f && InputATrigger > 0.5f;",
        "            bool inputATriggerDown = _oldInputATrigger > 0.5f && InputATrigger < 0.5f;",
        "            _oldInputATrigger = InputATrigger;",
        "            bool inputBTriggerUp = _oldInputBTrigger < 0.5f && InputBTrigger > 0.5f;",
        "            bool inputBTriggerDown = _oldInputBTrigger > 0.5f && InputBTrigger < 0.5f;",
        "            _oldInputBTrigger = InputBTrigger;",
        "            if (inputATriggerUp)",
        "            {",
        "                _tiggerInputATime = context.Time;",
        "                _tiggerInputATimeValid = true;",
        "                //Logger.Info(this, \"up a\");",
        "            }",
        "            if (inputATriggerDown)",
        "            {",
        "                _tiggerInputATimeValid = false;",
        "                //Logger.Info(this, \"down a\");",
        "            }",
        "            if (inputBTriggerUp)",
        "            {",
        "                _tiggerInputBTime = context.Time;",
        "                _tiggerInputBTimeValid = true;",
        "                //Logger.Info(this, \"up b\");",
        "            }",
        "            if (inputBTriggerDown)",
        "            {",
        "                _tiggerInputBTimeValid = false;",
        "                //Logger.Info(this, \"down b\");",
        "            }",
        "            ",
        "            float val = (_tiggerInputATimeValid && _tiggerInputBTimeValid && ",
        "                         Math.Abs(_tiggerInputATime - _tiggerInputBTime) < TimeEpsilon/* &&",
        "                         Math.Abs(_tiggerInputATime - context.Time) < TimeEpsilon &&",
        "                         Math.Abs(_tiggerInputBTime - context.Time) < TimeEpsilon*/) ? 1.0f : 0.0f;",
        "            context.Value = val;",
        "            return context;",
        "        }",
        "",
        "        float _oldInputATrigger;",
        "        float _tiggerInputATime = 0;",
        "        bool _tiggerInputATimeValid = false;",
        "        float _oldInputBTrigger;",
        "        float _tiggerInputBTime = 0;",
        "        bool _tiggerInputBTimeValid = false;",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "cefd62df-6ee7-49e0-af18-f795c6e6bbfa",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "cc657ac9-a40a-4f7d-bfc7-27b003d33937"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c090b375-6ce6-4b41-91a1-4100947d9c09",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "cc657ac9-a40a-4f7d-bfc7-27b003d33937"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ec20a489-159f-4abf-80b9-d2fdef4607d8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "cc657ac9-a40a-4f7d-bfc7-27b003d33937"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "cc657ac9-a40a-4f7d-bfc7-27b003d33937",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4e81801f-4104-408f-93b6-4cb51f126731"
    }
  ]
}