{
  "Name": "FractalCityCoast",
  "_id": "b19c563c-c83f-4211-97bd-7ff5941b05bd",
  "Namespace": "projects.square.shaders",
  "Description": "NOw with texture and background image support.",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "ba98c3c0-a1bc-442f-8123-0dfcb1ca3dcb",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "float Minrad;",
          "float Scale;",
          "float3 Clamping;",
          "float2 Fold;",
          "float3 Increment;",
          "float MaxSteps;",
          "float StepSize;",
          "float MinDistance;",
          "float MaxDistance;",
          "float DistToColor;",
          "float4 Surface1;",
          "float4 Surface2;",
          "float4 Surface3;",
          "float4 Diffuse;",
          "float4 Specular;",
          "float2 Spec;",
          "float4 Glow;",
          "float4 AmbientOcclusion;",
          "float AODistance;",
          "float4 Background;",
          "float Fog;",
          "float3 LightPos;",
          "float3 SpherePos;",
          "float SphereRadius;",
          "float3 B;",
          "Texture2D Image;",
          "float Displace;",
          "//<<< _parameters\r",
          "float4x4 ViewToWorld;\r",
          "float4x4 WorldToView;\r",
          " \r",
          "//>>> setup\r",
          "SamplerState samLinear\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_LINEAR;\r",
          "    AddressU = Clamp;\r",
          "    AddressV = Clamp;\r",
          "};\r",
          "//<<< setup\r",
          "\r",
          "//>>> declarations\r",
          "struct VS_IN\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "    float2 texCoord : TEXCOORD;\r",
          "};\r",
          "\r",
          "struct PS_IN\r",
          "{\r",
          "    float4 pos : SV_POSITION;\r",
          "    float2 texCoord: TEXCOORD0;\t    \r",
          "    float3 worldTViewPos: TEXCOORD1;\r",
          "    float3 worldTViewDir: TEXCOORD2;\r",
          "};\r",
          "//<<< declarations\r",
          "\r",
          "struct PS_OUTPUT\r",
          "{\r",
          "    float4 color : SV_TARGET;\r",
          "    float depth : SV_DEPTH;\r",
          "};\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> VS \r",
          "PS_IN VS( VS_IN input )\r",
          "{\r",
          "    PS_IN output = (PS_IN)0;\r",
          "    input.pos = mul(input.pos, objectToWorldMatrix); \r",
          "    output.pos = mul(input.pos, worldToCameraMatrix);\r",
          "    output.pos = mul(output.pos, projMatrix);\r",
          "    output.texCoord = input.texCoord;\r",
          "\r",
          "    float4 viewTNearFragPos = float4(input.texCoord.x*2.0 - 1.0, -input.texCoord.y*2.0 + 1.0, 0.0, 1.0);\r",
          "    float4 worldTNearFragPos = mul(viewTNearFragPos, ViewToWorld);\r",
          "    worldTNearFragPos /= worldTNearFragPos.w;\r",
          "\r",
          "    float4 viewTFarFragPos = float4(input.texCoord.x*2.0 - 1.0, -input.texCoord.y*2.0 + 1.0, 1.0, 1.0);\r",
          "    float4 worldTFarFragPos = mul(viewTFarFragPos, ViewToWorld);\r",
          "    worldTFarFragPos /= worldTFarFragPos.w;\r",
          "\r",
          "    output.worldTViewDir = normalize(worldTFarFragPos.xyz - worldTNearFragPos.xyz);\r",
          "\r",
          "    output.worldTViewPos = worldTNearFragPos;\r",
          "    return output;\r",
          "}\r",
          "//<<< VS\r",
          "\r",
          "//>>> PS\r",
          "\r",
          "\r",
          "float dSphere(float3 p0) {\r",
          "    return length(p0+float4(SpherePos.xyz,1))-SphereRadius;\r",
          "}\r",
          "\r",
          "float udCubes(float3 p) {\r",
          "    float3 b= float3(1,10,0.2);\r",
          "    float3 c= float3(SpherePos.x,SpherePos.y,SpherePos.z);\r",
          "    float3 q = fmod(p,c)-0.5*c;\r",
          "    float3  di = abs(p) - b;\r",
          "    //float mc = maxcomp(di);\r",
          "    //return min(mc,length(max(di,0.0)));  \r",
          "    float rad=SphereRadius;\r",
          "    return length( max( abs(q) - b + float3(rad,rad,rad), 0.0 ) ) - rad;\r",
          "    //return length(max(abs(p)-b,0.0));\r",
          "    \r",
          "}\r",
          "\r",
          "float BOX_RADIUS= 0.03;\r",
          "float dBox(float3 p, float3 b) {\r",
          "    return length( max( abs(p) - b + float3(BOX_RADIUS,BOX_RADIUS,BOX_RADIUS), 0.0 ) ) - BOX_RADIUS;\r",
          "}\r",
          "\r",
          "\r",
          "float mod (float a, float b) {\r",
          "    return  a - b * floor(a/b);\r",
          "}\r",
          "\r",
          "float maxcomp(float3 v) {\r",
          "    if(v.x > v.y && v.x > v.z) return v.x;\r",
          "    if(v.y > v.z) return v.y;\r",
          "    return v.z;\r",
          "}\r",
          "\r",
          "float sdBox( float3 p, float3 b )\r",
          "{\r",
          "  float3  di = abs(p) - b;\r",
          "  float mc = maxcomp(di);\r",
          "  return min(mc,length(max(di,0.0)));\r",
          "}\r",
          "\r",
          "float sdBox2(float2 p, float2 b) {\r",
          "  float2  di = abs(p) - b;\r",
          "  float mc = max(di.x, di.y);\r",
          "  return min(mc,length(max(di,0.0)));\r",
          "}\r",
          "\r",
          "float sdCross( in float3 p, float d )\r",
          "{\r",
          "  float da = sdBox2(p.xy, float2(d, 1.0));\r",
          "  float db = sdBox2(p.yz,float2(d, 1.0));\r",
          "  float dc = sdBox2(p.zx,float2(d, 1.0));\r",
          "  return min(da,min(db,dc));\r",
          "}\r",
          "\r",
          "\r",
          "\r",
          "\r",
          "float3 rep(float3 p, float3 c) {\r",
          "    return float3( \r",
          "            mod(p.x,c.x),  \r",
          "            mod(p.y,c.y), \r",
          "            mod(p.z,c.z)) - 0.5*c;\r",
          "    \r",
          "\r",
          "}\r",
          "\r",
          "float dRepeatedXBars(float3 p, float3 r, float h, float w) {\r",
          "    float3 p1= rep(p, r);\r",
          "    return sdBox2(p1.xy, float2(h, w));;\r",
          "}\r",
          "\r",
          "float dRepeatedYBars(float3 p, float3 r, float h, float w) {\r",
          "    float3 p1= rep(p, r);\r",
          "    return sdBox2(p1.xz, float2(h, w));;\r",
          "}\r",
          "float dRepeatedZBars(float3 p, float3 r, float h, float w) {\r",
          "    float3 p1= rep(p, r);\r",
          "    return sdBox2(p1.yz, float2(h, w));;\r",
          "}\r",
          "\r",
          "//>>>Distance\r",
          "int iters =6;\r",
          "\r",
          "// Compute the distance from |pos| to the Mandelbox.\r",
          "float sdMandelBox(float3 pos) {\r",
          "    float4 pN = float4(pos,1);\r",
          "    // precomputed constants\r",
          "    float minRad2 = clamp(Minrad, 1.0e-9, 1.0);\r",
          "    float4 scale = float4(Scale, Scale, Scale, abs(Scale)) / minRad2 ;\r",
          "    float absScalem1 = abs(Scale - 1.0);\r",
          "    float AbsScaleRaisedTo1mIters = pow(abs(Scale), float(1-iters));\r",
          "    float DIST_MULTIPLIER = StepSize;\r",
          "\r",
          "    float4 p = float4(pos,1);\r",
          "    float4 p0 = p;  // p.w is the distance estimate\r",
          "  \r",
          "\r",
          "  for (int i=0; i<iters; i++) {\r",
          "     //box folding: \r",
          "     //if (p>1) p = 2-p; else if (p<-1) p = -2-p;\r",
          "    p.xyz = abs(1+p.xyz) - p.xyz - abs(1.0-p.xyz);  // add;add;abs.add;abs.add (130.4%)\r",
          "    //p.xyz = clamp(p.xyz*0.5+0.5, 0.0, 1.0) * 4.0 - 2.0 - p.xyz;  // mad.sat;mad;add (102.3%)    \r",
          "    //p.xyz = clamp(p.xyz, -1.0, 1.0) * 2.0 - p.xyz;  // min;max;mad    \r",
          "    p.xyz = clamp(p.xyz, Clamping.x, Clamping.y) * Clamping.z - p.xyz;  // min;max;mad\r",
          "    \r",
          "\r",
          "    // sphere folding: if (r2 < minRad2) p /= minRad2; else if (r2 < 1.0) p /= r2;\r",
          "    float r2 = dot(p.xyz, p.xyz);\r",
          "    p *= clamp(max(minRad2/r2, minRad2), Fold.x, Fold.y);  // dp3,div,max.sat,mul\r",
          "    p.xyz+= float3(Increment.x,Increment.y,Increment.z);\r",
          "    // scale, translate\r",
          "    p = p*scale + p0;\r",
          "  }\r",
          "  float d=((length(p.xyz) - absScalem1) / p.w - AbsScaleRaisedTo1mIters) * DIST_MULTIPLIER;\r",
          "  return d;\r",
          "  //d=0.1;\r",
          "  //return max(udCubes(p0),d );\r",
          "  //return max( udCubes(p0), dStillLogo(p0));\r",
          "  //return min(dStillLogo(pN), d);\r",
          "}\r",
          "\r",
          "\r",
          "float dRotatedBoxes(float3 p, float3 b, float3 r, float angle ) {\r",
          "    //float angle= SphereRadius;\r",
          "    float3 pRotated= float3(p.x * cos(angle) - p.z * sin(angle), \r",
          "                            p.y,\r",
          "                            p.x * sin(angle) + p.z * cos(angle));\r",
          "    pRotated= rep(pRotated, r);\r",
          "    return sdBox( pRotated, b);\r",
          "    \r",
          "}\r",
          "\r",
          "\r",
          "float getDistance(float3 p) {\r",
          "    //float dPlanes = dRotatedPlanes(p, 5);\r",
          "    //float dColumns= dBox( float3( mod(p.x,0),mod(p.y,3.2),mod(p.z,2))  - float3( 1,0,0), float3(10.5,2.5,0.5));\r",
          "    \r",
          "    //return max(dPlanes , dColumns);\r",
          "    //return dPlanes;\r",
          "    //return max(dPlanes, dBox(p, float3(4,4,4)));\r",
          "    //p= float3( mod(p.x,3),  mod(p.y,5), mod(p.z,6));\r",
          "    //p= rep(p, float3(SpherePos.x/p.y,SpherePos.y*p.x,SpherePos.z*p.x/p.y));\r",
          "    float3 p1= rep(p, float3(SpherePos.x,SpherePos.y, SpherePos.z));\r",
          "    float dBars= sdCross(p1, float3(20,16,7));\r",
          "    \r",
          "    //float3 p2= rep(p, float3(2,10, 1));\r",
          "    //float dBox= sdBox(p2, float3(1,10,14));\r",
          "    float d=10000;\r",
          "    \r",
          "    \r",
          "    \r",
          "    \r",
          "    //d= max(d, dRepeatedYBars(p, 0.2, 0.72,1.8));  //big blocks\r",
          "    \r",
          "    d= min( d, dRotatedBoxes(p,float3(0.23, 10, 0.5), float3(2.6, 1.4, 1.47) , B.x  ));\r",
          "    //d= max( d, -dRotatedBoxes(p,float3(0.63,10, 0.1), float3(1.6, 1.4, 1.47) , 25  ));\r",
          "    d= max(d, sdBox(p, float3(5, 4.5  ,5))); //limit to big block\r",
          "    \r",
          "    float d2= dRotatedBoxes(p,float3(1.03,10, 1.5), float3(2.1, 2.8, 1.47) , B.y  );\r",
          "    d2= max(d2, sdBox(p+float3(0, -4, 0), float3(6.1,3,6.1))); //limit to big block\r",
          "    d=max(d,-d2);\r",
          "    \r",
          "    float d3= dRotatedBoxes(p,float3(1.13, 10,4.3), float3(3.1, 1.8, 5.47) , B.z  );\r",
          "    d3= max(d3, sdBox(p+float3(0, -5, 0), float3(6.6,6,6.6))); //limit to big block\r",
          "    d=max(d,-d3);\r",
          "\r",
          "    //d=max(sdMandelBox(p+float3(0,0,0)), d);\r",
          "    d= min(d, sdBox(p+float3(0,4,0), float3(13,2,13)));  //Floor\r",
          "    d= d+ sdMandelBox(p+float3(0,0,0)) * SphereRadius ;\r",
          "\r",
          "    //d= min(d, dSphere(p));\r",
          "    \r",
          "    // surface ace offeset\r",
          "    //d+= clamp(dRepeatedYBars(p, SpherePos, 0.1,1) , \r",
          "    //    0,0.001);\r",
          "        \r",
          "    float offset= clamp(sdBox(\r",
          "                   rep(p,  float3(0.22, 0.25, 0.5)), \r",
          "                    float3(0.2, 0.01, 0.2)),\r",
          "                    -0.00, 0.01);\r",
          "    \r",
          "    // Vertical window panes    \r",
          "    //offset+= -clamp(sdBox(\r",
          "    //               rep(p,  float3(0.02, 0.04, 0.26)), \r",
          "    //                float3(0.008, 0.08, 0.1)),\r",
          "    //0,0.002);\r",
          "         \r",
          "     d+=clamp(offset,0.0,0.01);\r",
          "\r",
          "    \r",
          "\r",
          "    //streetx\r",
          "    //d= min(d, dRepeatedXBars(p, float3(5.1,1.1,0.1) , 0.01,0.02));\r",
          "    //d= min(d, dRepeatedZBars(p - float3(10.4,0.30,3.0) , float3(4.1,2.1,3.1) , 0.01,0.01));\r",
          "    \r",
          "    //d= min(d, sdBox( p+float3(0,7,0), float3(1000,1,1000)));\r",
          "    return d;\r",
          "    \r",
          "}\r",
          "//<<< Distance\r",
          "\r",
          "// Blinn-Phong shading model with rim lighting (diffuse light bleeding to the other side).\r",
          "// |normal|, |view| and |light| should be normalized.\r",
          "float3 blinn_phong(float3 normal, float3 view, float3 light, float3 diffuseColor) {\r",
          "  float3 halfLV = normalize(light + view);\r",
          "  float spe = pow(max( dot(normal, halfLV), Spec.x ), Spec.y);\r",
          "  float dif = dot(normal, light) * 0.1 + 0.15;\r",
          "  return dif*diffuseColor + spe*Specular*Specular.a;\r",
          "}\r",
          "\r",
          "\r",
          "\r",
          "\r",
          "\r",
          "float3 getNormal(float3 p)\r",
          "{\r",
          "    float dt=Displace;\r",
          "    float3 n=float3(getDistance(p+float3(dt,0,0)),\r",
          "                    getDistance(p+float3(0,dt,0)),\r",
          "                    getDistance(p+float3(0,0,dt)))-getDistance(p);\r",
          "    return normalize(n);\r",
          "}\r",
          "\r",
          "\r",
          "float getAO(float3 aoposition, float3 aonormal, float aodistance, float aoiterations, float aofactor)\r",
          "{\r",
          "    float ao = 0.0;\r",
          "    float k = aofactor;\r",
          "    aodistance /= aoiterations;\r",
          "    for (float i=1; i < 4; i += 1)\r",
          "    {\r",
          "        ao += (i * aodistance - getDistance(aoposition + aonormal * i * aodistance)) / pow(2,i);\r",
          "    }\r",
          "    return 1.0 - k * ao;\r",
          "}\r",
          "\r",
          "float4 getTexture(float3 p, float3 n) \r",
          "{\r",
          "    float s = 1.3;\r",
          "    float dx = abs(n.x);\r",
          "    float dy = abs(n.y);\r",
          "    float dz = abs(n.z);\r",
          "    float4 output= float4(0,0,0,0);\r",
          "    if (dx > dy  && dx > dz) {\r",
          "        output=  Image.Sample(samLinear, float2(frac(p.z*s), frac(p.y * s))); \r",
          "    }\r",
          "    else if (dy > dz) {\r",
          "        output=  Image.Sample(samLinear, float2(frac(p.x*s), frac(p.z * s)));\r",
          "    }\r",
          "    else {\r",
          "        output=  Image.Sample(samLinear, float2(frac(p.x*s), frac(p.y * s)));\r",
          "    }\r",
          "    return output;\r",
          "}\r",
          "\r",
          "\r",
          "float MAX_DIST=300;\r",
          "\r",
          "float3 surfaceColor1 = float3(0.95, 0.64, 0.1);\r",
          "float3 surfaceColor2 = float3(0.89, 0.95, 0.75);\r",
          "float3 surfaceColor3 = float3(0.55, 0.06, 0.03);\r",
          "\r",
          "// Compute the color at |pos|.\r",
          "float3 color(float3 pos) {\r",
          "  float3 p = pos, p0 = p;\r",
          "  float trap = 1.0;\r",
          "\r",
          "  for (int i=0; i<3; i++) {\r",
          "    p.xyz = clamp(p.xyz, -1.0, 1.0) * 2.0 - p.xyz;\r",
          "    float r2 = dot(p.xyz, p.xyz);\r",
          "    p *= clamp(max(Minrad/r2, Minrad), 0.0, 1.0);\r",
          "    p = p*Scale + p0.xyz;\r",
          "    trap = min(trap, r2);\r",
          "  }\r",
          "  // |c.x|: log final distance (fractional iteration count)\r",
          "  // |c.y|: spherical orbit trap at (0,0,0)\r",
          "  float2 c = clamp(float2( 0.33*log(dot(p,p))-1.0, sqrt(trap) ), 0.0, 1.0);\r",
          "\r",
          "  return lerp(lerp(Surface1, Surface2, c.y), Surface3, c.x);\r",
          "}\r",
          "\r",
          "\r",
          "PS_OUTPUT PS( PS_IN input )\r",
          "{\r",
          "    PS_OUTPUT output = (PS_OUTPUT)0;\r",
          "\r",
          "    //float4 filter= Image2.Sample(samLinear, input.texCoord);\r",
          "    float3 p = input.worldTViewPos;\r",
          "    float3 dp = normalize(input.worldTViewDir);\r",
          "\r",
          "  float totalD = 0.0;\r",
          "  float D = 3.4e38;\r",
          "  D=StepSize;\r",
          "  float extraD = 0.0;\r",
          "  float lastD;\r",
          "  \r",
          "  int steps;\r",
          "\r",
          "    /*  \r",
          "    // Intersect the view ray with the Mandelbox using raymarching.\r",
          "    for (steps=0; steps<MaxSteps; steps++) {\r",
          "        lastD = D;\r",
          "        D = getDistance(p + totalD * dp);\r",
          "\r",
          "        // Overstepping: have we jumped too far? Cancel last step.    \r",
          "        if (extraD > 0.0 && D < extraD) {\r",
          "            totalD -= extraD;\r",
          "            extraD = 0.0; \r",
          "            D = 3.4e38;\r",
          "            steps--;\r",
          "            continue;\r",
          "        }\r",
          "\r",
          "        if (D < MinDistance/1000) break;\r",
          "\r",
          "        totalD += D;\r",
          "\r",
          "        // Overstepping is based on the optimal length of the last step.\r",
          "        totalD += extraD = 0.096 * D*(D+extraD)/lastD;\r",
          "    }\r",
          "    */\r",
          "\r",
          "\r",
          "    // SImple iterator\r",
          "    \r",
          "    \r",
          "    for(steps=0;steps<MaxSteps && abs(D)>MinDistance/1000;steps++)\r",
          "    {\r",
          "        D=getDistance(p);\r",
          "        p+=dp*D;\t\r",
          "    }\r",
          "    \r",
          "    \r",
          "    //p += totalD * dp;\r",
          "\r",
          "\r",
          "\r",
          "\r",
          "    // Color the surface with Blinn-Phong shading, ambient occlusion and glow.\r",
          "    float3 col = Background;\r",
          "    float depth = 0.999;\r",
          "    float a=1;\r",
          "    // We've got a hit or we're not sure.\r",
          "    float3 _tex; //= float3(1,1,1);\r",
          "    if (D < MAX_DIST) {\r",
          "        float3 n = normalize( getNormal(p));        \r",
          "        _tex= getTexture(p*SpherePos, n);\r",
          "        \r",
          "        //float xx= _tex.x;\r",
          "        //float3 pp= p+_tex.xyz;\r",
          "        //p+= _tex.x*dp*Displace;\r",
          "        //n= normalize( getNormal(p));\r",
          "        \r",
          "        //n.xyz-=(tex-float3(0.5,0.5,0.5))*0.5;\r",
          "        col = color(p);    \r",
          "        col = blinn_phong(n, -dp, LightPos, col);\r",
          "        \r",
          "        col = lerp(AmbientOcclusion, col, clamp(getAO(p,n,AODistance, 5, AmbientOcclusion.a),0,1));\r",
          "        \r",
          "        float4 pInView = mul(float4(p, 1), WorldToView);\r",
          "        pInView /= pInView.w;\r",
          "        depth = pInView.z;    \r",
          "    \r",
          "        // We've gone through all steps, but we haven't hit anything.\r",
          "        // Mix in the background color.\r",
          "        if (D > MinDistance) {\r",
          "          a=1-clamp(log(D/MinDistance) * DistToColor, 0.0, 1.0);\r",
          "          col = lerp(col, Background, a);\r",
          "          depth = 0.999;\r",
          "        }\r",
          "    }\r",
          "    else {\r",
          "        a=0;\r",
          "    }\r",
          "\r",
          "    // Glow is based on the number of steps.\r",
          "    col = lerp(col, Glow, float(steps)/float(MaxSteps) * Glow.a);\r",
          "    col *= _tex;\r",
          "    \r",
          "    float f= clamp(log( length(p- input.worldTViewPos)/Fog), 0,1);\r",
          "    col = lerp(col, Background, f);\r",
          "    a*=(1-f*Background.a);\r",
          "    output.depth = depth; \r",
          "    output.color=     float4(col, a);\r",
          "    return output;\r",
          "\r",
          "\r",
          "\r",
          "\r",
          "\r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Minrad",
      "MetaInstanceID": "14d9f563-4a2a-4634-a882-8c54a842ac68",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.07"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scale",
      "MetaInstanceID": "c980a7c5-973b-4b10-8f18-d67563fbef86",
      "DefaultValue": {
        "Type": "Float",
        "Value": "5.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Clamping.X",
      "MetaInstanceID": "52cc7339-07a2-4629-9e2e-61239b8a9e10",
      "DefaultValue": {
        "Type": "Float",
        "Value": "-1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Clamping.Y",
      "MetaInstanceID": "60a25263-e8ff-4486-a074-95f4a2857329",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Clamping.Z",
      "MetaInstanceID": "7476654e-1626-4a72-a225-5e9cebff048a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Fold.Min",
      "MetaInstanceID": "87809f8f-b5cd-4385-9ef4-1ab9f3326224",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Fold.Max",
      "MetaInstanceID": "53924247-c4f5-4e96-8bf2-ae1b37a36e98",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Increment.X",
      "MetaInstanceID": "e4926aaf-e39f-404b-9d66-3b094fc5258f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Increment.Y",
      "MetaInstanceID": "d96b1e2f-cb96-4dd2-a99d-e50fc3de9bc7",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Increment.Z",
      "MetaInstanceID": "e8c29716-ff58-4ae5-8a21-cb1bb0ecfd91",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "MaxSteps",
      "MetaInstanceID": "72165a1d-6992-4d04-ba2a-7219d49b7548",
      "DefaultValue": {
        "Type": "Float",
        "Value": "24"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "1",
      "Max": "200",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StepSize",
      "MetaInstanceID": "fb2d8c0d-662d-4cff-b798-531e2db722af",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-1",
      "Max": "3",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "MinDistance",
      "MetaInstanceID": "019728d6-aa02-4d4c-85f7-e72f5d6f541b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.01"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "MaxDistance",
      "MetaInstanceID": "d916648b-776f-4dd3-bb75-bd8b71c44586",
      "DefaultValue": {
        "Type": "Float",
        "Value": "30"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "DistToColor",
      "MetaInstanceID": "e967dbe5-f7e2-4745-a35a-f2717f3f07be",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "2",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface1.R",
      "MetaInstanceID": "7da3c53d-2e90-46f0-ba1e-5dd03969e311",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.64"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface1.G",
      "MetaInstanceID": "a8000486-7e40-4787-9acf-ca7b503f30be",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.9"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface1.B",
      "MetaInstanceID": "28e8e217-292a-4a80-aca4-7db280083b76",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.6"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface1.A",
      "MetaInstanceID": "c39427ee-10f5-4edc-843d-f1505c5faaec",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface2.R",
      "MetaInstanceID": "8111f8a2-8ad4-4852-b83e-792d80b31970",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.4"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface2.G",
      "MetaInstanceID": "3a7f2827-4159-4aca-a45a-1a259c7d7879",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.37"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface2.B",
      "MetaInstanceID": "dd95cbc7-e8a1-415b-97c8-6d43b297fa35",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface2.A",
      "MetaInstanceID": "056a725d-1c1c-4397-b4fe-b70343e68b5f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface3.R",
      "MetaInstanceID": "ce72fcb2-cd60-4a9d-a6f5-8bb09b2dd3dc",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.55"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface3.G",
      "MetaInstanceID": "4f65600e-8923-4850-8ccc-356abbe9acd7",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.73"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface3.B",
      "MetaInstanceID": "9f3181ec-0761-4bf8-8f84-c64bc0d576d9",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.56"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface3.A",
      "MetaInstanceID": "495ec966-b248-455e-a4bc-b33624ccd8e6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Diffuse.R",
      "MetaInstanceID": "6fbb1679-f456-4827-aabf-edba0036f610",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Diffuse.G",
      "MetaInstanceID": "4e032a52-3809-47d6-b73f-6f66f5715420",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Diffuse.B",
      "MetaInstanceID": "f351408d-37b3-4597-886c-8ed3c619c2a7",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Diffuse.A",
      "MetaInstanceID": "6b3cd8a3-23c1-4bcd-8623-56261e14e0e2",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Specular.R",
      "MetaInstanceID": "fecb0800-2fca-4e1d-8e9f-803ce57ae8b6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Specular.G",
      "MetaInstanceID": "53d1effc-a59d-46e7-a2a8-de0386759a63",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Specular.B",
      "MetaInstanceID": "e35b88ec-115c-4c37-b44b-dc8821eb4d1b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Specular.A",
      "MetaInstanceID": "d5c4d4f9-530a-40ca-bab9-95f5930381f0",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10",
      "Max": "10",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Spec.Power",
      "MetaInstanceID": "6de487f3-89d0-4be1-acf8-9c8267df8d17",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.9"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100",
      "Max": "100",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Spec.FallOff",
      "MetaInstanceID": "7c41b2fc-0916-41d7-9eab-83009cafa6da",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100",
      "Max": "100",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Glow.R",
      "MetaInstanceID": "d8c903d8-9645-4e19-a9d7-f6f6a41462fb",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Glow.G",
      "MetaInstanceID": "6c4b5335-cf97-4a4a-875f-0f4a87e12989",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Glow.B",
      "MetaInstanceID": "f612510b-e572-44c4-876b-1cf6f9e1afaa",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Glow.A",
      "MetaInstanceID": "92c86e91-f7a2-417a-925f-6c9b5b5de378",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.24"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10",
      "Max": "10",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "AmbientOcclusion.R",
      "MetaInstanceID": "5c73cc6b-28b8-40d3-b589-7d73f4285fe0",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "AmbientOcclusion.G",
      "MetaInstanceID": "2b1fb8ac-dfdb-490d-96e5-1025752bc387",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "AmbientOcclusion.B",
      "MetaInstanceID": "686b8702-2255-4211-a31e-642b7f179a37",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "AmbientOcclusion.A",
      "MetaInstanceID": "20c8ff18-c8ba-48fd-9b62-b29e90224be7",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.43"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10",
      "Max": "10",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "AODistance",
      "MetaInstanceID": "b35486fa-b8f0-4d06-8542-6417c055f8db",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1.9"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Background.R",
      "MetaInstanceID": "be18847a-a5a5-4190-8385-abda7260696d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.08000004"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Background.G",
      "MetaInstanceID": "0ea65335-c53c-4676-af2f-1a387824181a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Background.B",
      "MetaInstanceID": "36297915-2fcd-46c8-b1ab-14724c869a0d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.06999999"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Background.A",
      "MetaInstanceID": "f89d59f1-cd97-4729-8d50-a4afc488e0c8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Fog",
      "MetaInstanceID": "afee728f-8b70-4c8c-a3e5-57680f10563c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "17"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LightPos.X",
      "MetaInstanceID": "e0a19e04-0c93-4aeb-94f3-7d14b4eec94c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.9"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LightPos.Y",
      "MetaInstanceID": "3491111f-e134-4d57-9a29-cbceeebe05b5",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1.1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LightPos.Z",
      "MetaInstanceID": "cad2aa94-1f76-48d4-8ed4-2bcff9d01fbb",
      "DefaultValue": {
        "Type": "Float",
        "Value": "-0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SpherePos.X",
      "MetaInstanceID": "b53cabd3-d229-4a1b-8c43-ab951b00ef99",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SpherePos.Y",
      "MetaInstanceID": "fe92a79a-02f7-41d9-859a-0f0f817dd480",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SpherePos.Z",
      "MetaInstanceID": "4d2fb7bf-5b56-4fcf-9cf8-b2f5f975fcda",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SphereRadius",
      "MetaInstanceID": "fce4d303-964c-4a7d-9b1b-5dfccae2b5a5",
      "DefaultValue": {
        "Type": "Float",
        "Value": "78.6"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "B.x",
      "MetaInstanceID": "63d8f9e8-e5dc-45b2-b650-275d5db22db8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "B.y",
      "MetaInstanceID": "66ea1917-3da6-47c0-be29-789d1db81287",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "B.z",
      "MetaInstanceID": "88714417-1322-4820-b090-fbe549c4aad2",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Image",
      "MetaInstanceID": "a8c757a3-de7a-450b-a0b6-cc19c69150f8",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Displace",
      "MetaInstanceID": "ba338c60-4442-4d8d-8345-9084e8247f36",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "575150ea-8ae0-43bd-a029-58106aecac6f",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "658f26b5-f74d-4df6-b0b8-41a622e128a4",
      "MetaID": "016f8d87-bbc5-41e8-92fa-d966d8ef3fd2",
      "Name": "FractalCityCoastFunc",
      "Version": "7f6eca4f-58b4-4356-be71-f9bb73c8af4b",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID016f8d87_bbc5_41e8_92fa_d966d8ef3fd2",
        "{",
        "    public class Class_FractalCityCoast : FXImageFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Minrad = 1,",
        "            Scale = 2,",
        "            ClampingX = 3,",
        "            ClampingY = 4,",
        "            ClampingZ = 5,",
        "            FoldMin = 6,",
        "            FoldMax = 7,",
        "            IncrementX = 8,",
        "            IncrementY = 9,",
        "            IncrementZ = 10,",
        "            MaxSteps = 11,",
        "            StepSize = 12,",
        "            MinDistance = 13,",
        "            MaxDistance = 14,",
        "            DistToColor = 15,",
        "            Surface1R = 16,",
        "            Surface1G = 17,",
        "            Surface1B = 18,",
        "            Surface1A = 19,",
        "            Surface2R = 20,",
        "            Surface2G = 21,",
        "            Surface2B = 22,",
        "            Surface2A = 23,",
        "            Surface3R = 24,",
        "            Surface3G = 25,",
        "            Surface3B = 26,",
        "            Surface3A = 27,",
        "            DiffuseR = 28,",
        "            DiffuseG = 29,",
        "            DiffuseB = 30,",
        "            DiffuseA = 31,",
        "            SpecularR = 32,",
        "            SpecularG = 33,",
        "            SpecularB = 34,",
        "            SpecularA = 35,",
        "            SpecPower = 36,",
        "            SpecFallOff = 37,",
        "            GlowR = 38,",
        "            GlowG = 39,",
        "            GlowB = 40,",
        "            GlowA = 41,",
        "            AmbientOcclusionR = 42,",
        "            AmbientOcclusionG = 43,",
        "            AmbientOcclusionB = 44,",
        "            AmbientOcclusionA = 45,",
        "            AODistance = 46,",
        "            BackgroundR = 47,",
        "            BackgroundG = 48,",
        "            BackgroundB = 49,",
        "            BackgroundA = 50,",
        "            Fog = 51,",
        "            LightPosX = 52,",
        "            LightPosY = 53,",
        "            LightPosZ = 54,",
        "            SpherePosX = 55,",
        "            SpherePosY = 56,",
        "            SpherePosZ = 57,",
        "            SphereRadius = 58,",
        "            BX = 59,",
        "            BY = 60,",
        "            BZ = 61,",
        "            Image = 62,",
        "            Displace = 63",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Minrad = inputs[(int)InputId.Minrad].Eval(context).Value;",
        "            var Scale = inputs[(int)InputId.Scale].Eval(context).Value;",
        "            var ClampingX = inputs[(int)InputId.ClampingX].Eval(context).Value;",
        "            var ClampingY = inputs[(int)InputId.ClampingY].Eval(context).Value;",
        "            var ClampingZ = inputs[(int)InputId.ClampingZ].Eval(context).Value;",
        "            var Clamping = new Vector3(ClampingX, ClampingY, ClampingZ);",
        "            var FoldMin = inputs[(int)InputId.FoldMin].Eval(context).Value;",
        "            var FoldMax = inputs[(int)InputId.FoldMax].Eval(context).Value;",
        "            var Fold = new Vector2(FoldMin, FoldMax);",
        "            var IncrementX = inputs[(int)InputId.IncrementX].Eval(context).Value;",
        "            var IncrementY = inputs[(int)InputId.IncrementY].Eval(context).Value;",
        "            var IncrementZ = inputs[(int)InputId.IncrementZ].Eval(context).Value;",
        "            var Increment = new Vector3(IncrementX, IncrementY, IncrementZ);",
        "            var MaxSteps = inputs[(int)InputId.MaxSteps].Eval(context).Value;",
        "            var StepSize = inputs[(int)InputId.StepSize].Eval(context).Value;",
        "            var MinDistance = inputs[(int)InputId.MinDistance].Eval(context).Value;",
        "            var MaxDistance = inputs[(int)InputId.MaxDistance].Eval(context).Value;",
        "            var DistToColor = inputs[(int)InputId.DistToColor].Eval(context).Value;",
        "            var Surface1R = inputs[(int)InputId.Surface1R].Eval(context).Value;",
        "            var Surface1G = inputs[(int)InputId.Surface1G].Eval(context).Value;",
        "            var Surface1B = inputs[(int)InputId.Surface1B].Eval(context).Value;",
        "            var Surface1A = inputs[(int)InputId.Surface1A].Eval(context).Value;",
        "            var Surface1 = new Color4(Surface1R, Surface1G, Surface1B, Surface1A);",
        "            var Surface2R = inputs[(int)InputId.Surface2R].Eval(context).Value;",
        "            var Surface2G = inputs[(int)InputId.Surface2G].Eval(context).Value;",
        "            var Surface2B = inputs[(int)InputId.Surface2B].Eval(context).Value;",
        "            var Surface2A = inputs[(int)InputId.Surface2A].Eval(context).Value;",
        "            var Surface2 = new Color4(Surface2R, Surface2G, Surface2B, Surface2A);",
        "            var Surface3R = inputs[(int)InputId.Surface3R].Eval(context).Value;",
        "            var Surface3G = inputs[(int)InputId.Surface3G].Eval(context).Value;",
        "            var Surface3B = inputs[(int)InputId.Surface3B].Eval(context).Value;",
        "            var Surface3A = inputs[(int)InputId.Surface3A].Eval(context).Value;",
        "            var Surface3 = new Color4(Surface3R, Surface3G, Surface3B, Surface3A);",
        "            var DiffuseR = inputs[(int)InputId.DiffuseR].Eval(context).Value;",
        "            var DiffuseG = inputs[(int)InputId.DiffuseG].Eval(context).Value;",
        "            var DiffuseB = inputs[(int)InputId.DiffuseB].Eval(context).Value;",
        "            var DiffuseA = inputs[(int)InputId.DiffuseA].Eval(context).Value;",
        "            var Diffuse = new Color4(DiffuseR, DiffuseG, DiffuseB, DiffuseA);",
        "            var SpecularR = inputs[(int)InputId.SpecularR].Eval(context).Value;",
        "            var SpecularG = inputs[(int)InputId.SpecularG].Eval(context).Value;",
        "            var SpecularB = inputs[(int)InputId.SpecularB].Eval(context).Value;",
        "            var SpecularA = inputs[(int)InputId.SpecularA].Eval(context).Value;",
        "            var Specular = new Color4(SpecularR, SpecularG, SpecularB, SpecularA);",
        "            var SpecPower = inputs[(int)InputId.SpecPower].Eval(context).Value;",
        "            var SpecFallOff = inputs[(int)InputId.SpecFallOff].Eval(context).Value;",
        "            var Spec = new Vector2(SpecPower, SpecFallOff);",
        "            var GlowR = inputs[(int)InputId.GlowR].Eval(context).Value;",
        "            var GlowG = inputs[(int)InputId.GlowG].Eval(context).Value;",
        "            var GlowB = inputs[(int)InputId.GlowB].Eval(context).Value;",
        "            var GlowA = inputs[(int)InputId.GlowA].Eval(context).Value;",
        "            var Glow = new Color4(GlowR, GlowG, GlowB, GlowA);",
        "            var AmbientOcclusionR = inputs[(int)InputId.AmbientOcclusionR].Eval(context).Value;",
        "            var AmbientOcclusionG = inputs[(int)InputId.AmbientOcclusionG].Eval(context).Value;",
        "            var AmbientOcclusionB = inputs[(int)InputId.AmbientOcclusionB].Eval(context).Value;",
        "            var AmbientOcclusionA = inputs[(int)InputId.AmbientOcclusionA].Eval(context).Value;",
        "            var AmbientOcclusion = new Color4(AmbientOcclusionR, AmbientOcclusionG, AmbientOcclusionB, AmbientOcclusionA);",
        "            var AODistance = inputs[(int)InputId.AODistance].Eval(context).Value;",
        "            var BackgroundR = inputs[(int)InputId.BackgroundR].Eval(context).Value;",
        "            var BackgroundG = inputs[(int)InputId.BackgroundG].Eval(context).Value;",
        "            var BackgroundB = inputs[(int)InputId.BackgroundB].Eval(context).Value;",
        "            var BackgroundA = inputs[(int)InputId.BackgroundA].Eval(context).Value;",
        "            var Background = new Color4(BackgroundR, BackgroundG, BackgroundB, BackgroundA);",
        "            var Fog = inputs[(int)InputId.Fog].Eval(context).Value;",
        "            var LightPosX = inputs[(int)InputId.LightPosX].Eval(context).Value;",
        "            var LightPosY = inputs[(int)InputId.LightPosY].Eval(context).Value;",
        "            var LightPosZ = inputs[(int)InputId.LightPosZ].Eval(context).Value;",
        "            var LightPos = new Vector3(LightPosX, LightPosY, LightPosZ);",
        "            var SpherePosX = inputs[(int)InputId.SpherePosX].Eval(context).Value;",
        "            var SpherePosY = inputs[(int)InputId.SpherePosY].Eval(context).Value;",
        "            var SpherePosZ = inputs[(int)InputId.SpherePosZ].Eval(context).Value;",
        "            var SpherePos = new Vector3(SpherePosX, SpherePosY, SpherePosZ);",
        "            var SphereRadius = inputs[(int)InputId.SphereRadius].Eval(context).Value;",
        "            var BX = inputs[(int)InputId.BX].Eval(context).Value;",
        "            var BY = inputs[(int)InputId.BY].Eval(context).Value;",
        "            var BZ = inputs[(int)InputId.BZ].Eval(context).Value;",
        "            var B = new Vector3(BX, BY, BZ);",
        "            var Image = inputs[(int)InputId.Image].Eval(context).Image; if (Image == null) return context;",
        "            var Displace = inputs[(int)InputId.Displace].Eval(context).Value;",
        "            //<<< _params",
        "",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                using (var ImageView = new ShaderResourceView(context.D3DDevice, Image))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Minrad\").AsScalar().Set(Minrad);",
        "                    _effect.GetVariableByName(\"Scale\").AsScalar().Set(Scale);",
        "                    _effect.GetVariableByName(\"Clamping\").AsVector().Set(new Vector3(ClampingX, ClampingY, ClampingZ));",
        "                    _effect.GetVariableByName(\"Fold\").AsVector().Set(new Vector2(FoldMin, FoldMax));",
        "                    _effect.GetVariableByName(\"Increment\").AsVector().Set(new Vector3(IncrementX, IncrementY, IncrementZ));",
        "                    _effect.GetVariableByName(\"MaxSteps\").AsScalar().Set(MaxSteps);",
        "                    _effect.GetVariableByName(\"StepSize\").AsScalar().Set(StepSize);",
        "                    _effect.GetVariableByName(\"MinDistance\").AsScalar().Set(MinDistance);",
        "                    _effect.GetVariableByName(\"MaxDistance\").AsScalar().Set(MaxDistance);",
        "                    _effect.GetVariableByName(\"DistToColor\").AsScalar().Set(DistToColor);",
        "                    _effect.GetVariableByName(\"Surface1\").AsVector().Set(new Vector4(Surface1R, Surface1G, Surface1B, Surface1A));",
        "                    _effect.GetVariableByName(\"Surface2\").AsVector().Set(new Vector4(Surface2R, Surface2G, Surface2B, Surface2A));",
        "                    _effect.GetVariableByName(\"Surface3\").AsVector().Set(new Vector4(Surface3R, Surface3G, Surface3B, Surface3A));",
        "                    _effect.GetVariableByName(\"Diffuse\").AsVector().Set(new Vector4(DiffuseR, DiffuseG, DiffuseB, DiffuseA));",
        "                    _effect.GetVariableByName(\"Specular\").AsVector().Set(new Vector4(SpecularR, SpecularG, SpecularB, SpecularA));",
        "                    _effect.GetVariableByName(\"Spec\").AsVector().Set(new Vector2(SpecPower, SpecFallOff));",
        "                    _effect.GetVariableByName(\"Glow\").AsVector().Set(new Vector4(GlowR, GlowG, GlowB, GlowA));",
        "                    _effect.GetVariableByName(\"AmbientOcclusion\").AsVector().Set(new Vector4(AmbientOcclusionR, AmbientOcclusionG, AmbientOcclusionB, AmbientOcclusionA));",
        "                    _effect.GetVariableByName(\"AODistance\").AsScalar().Set(AODistance);",
        "                    _effect.GetVariableByName(\"Background\").AsVector().Set(new Vector4(BackgroundR, BackgroundG, BackgroundB, BackgroundA));",
        "                    _effect.GetVariableByName(\"Fog\").AsScalar().Set(Fog);",
        "                    _effect.GetVariableByName(\"LightPos\").AsVector().Set(new Vector3(LightPosX, LightPosY, LightPosZ));",
        "                    _effect.GetVariableByName(\"SpherePos\").AsVector().Set(new Vector3(SpherePosX, SpherePosY, SpherePosZ));",
        "                    _effect.GetVariableByName(\"SphereRadius\").AsScalar().Set(SphereRadius);",
        "                    _effect.GetVariableByName(\"B\").AsVector().Set(new Vector3(BX, BY, BZ));",
        "                    _effect.GetVariableByName(\"Image\").AsShaderResource().SetResource(ImageView);",
        "                    _effect.GetVariableByName(\"Displace\").AsScalar().Set(Displace);",
        "                //<<< _setup",
        "                var worldToView = context.WorldToCamera*context.CameraProjection;",
        "                var viewToWorld = Matrix.Invert(worldToView);",
        "                _effect.GetVariableByName(\"ViewToWorld\").AsMatrix().SetMatrix(viewToWorld);",
        "                _effect.GetVariableByName(\"WorldToView\").AsMatrix().SetMatrix(worldToView);",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "575150ea-8ae0-43bd-a029-58106aecac6f"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ba98c3c0-a1bc-442f-8123-0dfcb1ca3dcb",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "14d9f563-4a2a-4634-a882-8c54a842ac68",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c980a7c5-973b-4b10-8f18-d67563fbef86",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "52cc7339-07a2-4629-9e2e-61239b8a9e10",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "60a25263-e8ff-4486-a074-95f4a2857329",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7476654e-1626-4a72-a225-5e9cebff048a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "87809f8f-b5cd-4385-9ef4-1ab9f3326224",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "53924247-c4f5-4e96-8bf2-ae1b37a36e98",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e4926aaf-e39f-404b-9d66-3b094fc5258f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d96b1e2f-cb96-4dd2-a99d-e50fc3de9bc7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e8c29716-ff58-4ae5-8a21-cb1bb0ecfd91",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "72165a1d-6992-4d04-ba2a-7219d49b7548",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "fb2d8c0d-662d-4cff-b798-531e2db722af",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "019728d6-aa02-4d4c-85f7-e72f5d6f541b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d916648b-776f-4dd3-bb75-bd8b71c44586",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e967dbe5-f7e2-4745-a35a-f2717f3f07be",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7da3c53d-2e90-46f0-ba1e-5dd03969e311",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a8000486-7e40-4787-9acf-ca7b503f30be",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "28e8e217-292a-4a80-aca4-7db280083b76",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c39427ee-10f5-4edc-843d-f1505c5faaec",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8111f8a2-8ad4-4852-b83e-792d80b31970",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "3a7f2827-4159-4aca-a45a-1a259c7d7879",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "dd95cbc7-e8a1-415b-97c8-6d43b297fa35",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "056a725d-1c1c-4397-b4fe-b70343e68b5f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ce72fcb2-cd60-4a9d-a6f5-8bb09b2dd3dc",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4f65600e-8923-4850-8ccc-356abbe9acd7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9f3181ec-0761-4bf8-8f84-c64bc0d576d9",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "495ec966-b248-455e-a4bc-b33624ccd8e6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "6fbb1679-f456-4827-aabf-edba0036f610",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4e032a52-3809-47d6-b73f-6f66f5715420",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f351408d-37b3-4597-886c-8ed3c619c2a7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "6b3cd8a3-23c1-4bcd-8623-56261e14e0e2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "fecb0800-2fca-4e1d-8e9f-803ce57ae8b6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "53d1effc-a59d-46e7-a2a8-de0386759a63",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e35b88ec-115c-4c37-b44b-dc8821eb4d1b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d5c4d4f9-530a-40ca-bab9-95f5930381f0",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "6de487f3-89d0-4be1-acf8-9c8267df8d17",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7c41b2fc-0916-41d7-9eab-83009cafa6da",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d8c903d8-9645-4e19-a9d7-f6f6a41462fb",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "6c4b5335-cf97-4a4a-875f-0f4a87e12989",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f612510b-e572-44c4-876b-1cf6f9e1afaa",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "92c86e91-f7a2-417a-925f-6c9b5b5de378",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5c73cc6b-28b8-40d3-b589-7d73f4285fe0",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2b1fb8ac-dfdb-490d-96e5-1025752bc387",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "686b8702-2255-4211-a31e-642b7f179a37",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "20c8ff18-c8ba-48fd-9b62-b29e90224be7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b35486fa-b8f0-4d06-8542-6417c055f8db",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "be18847a-a5a5-4190-8385-abda7260696d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0ea65335-c53c-4676-af2f-1a387824181a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "36297915-2fcd-46c8-b1ab-14724c869a0d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f89d59f1-cd97-4729-8d50-a4afc488e0c8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "afee728f-8b70-4c8c-a3e5-57680f10563c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e0a19e04-0c93-4aeb-94f3-7d14b4eec94c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "3491111f-e134-4d57-9a29-cbceeebe05b5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "cad2aa94-1f76-48d4-8ed4-2bcff9d01fbb",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b53cabd3-d229-4a1b-8c43-ab951b00ef99",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "fe92a79a-02f7-41d9-859a-0f0f817dd480",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4d2fb7bf-5b56-4fcf-9cf8-b2f5f975fcda",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "fce4d303-964c-4a7d-9b1b-5dfccae2b5a5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "63d8f9e8-e5dc-45b2-b650-275d5db22db8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "66ea1917-3da6-47c0-be29-789d1db81287",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "88714417-1322-4820-b090-fbe549c4aad2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a8c757a3-de7a-450b-a0b6-cc19c69150f8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ba338c60-4442-4d8d-8345-9084e8247f36",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "658f26b5-f74d-4df6-b0b8-41a622e128a4"
    }
  ]
}