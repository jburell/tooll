{
  "Name": "Kaleidoskope",
  "_id": "37ad19fa-d5e9-4ca5-afc5-5c8a6f3311f0",
  "Namespace": "lib.image.effect",
  "Description": "",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "86dcc41b-4c87-4121-9d7f-cff132ab5a68",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D Image;",
          "float Sides;",
          "float Rotate;",
          "float2 Offset;",
          "float Scale;",
          "//<<< _parameters\r",
          " \r",
          "//>>> setup\r",
          "SamplerState samLinear\r",
          "{\r",
          "    Filter = MIN_MAG_LINEAR_MIP_POINT;\r",
          "    //Filter = MIN_MAG_LINEAR;\r",
          "    AddressU = Wrap;\r",
          "    AddressV = Wrap;\r",
          "};\r",
          "//<<< setup\r",
          "\r",
          "//>>> declarations\r",
          "struct VS_IN\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "    float2 texCoord : TEXCOORD;\r",
          "};\r",
          "\r",
          "struct PS_IN\r",
          "{\r",
          "    float4 pos : SV_POSITION;\r",
          "    float2 texCoord: TEXCOORD0;\t    \r",
          "    float3 worldTViewPos: TEXCOORD1;\r",
          "    float3 worldTViewDir: TEXCOORD2;\r",
          "};\r",
          "//<<< declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{    \r",
          "    float tau = 2.0 * 3.1416;\r",
          "    float2 tex = input.texCoord;\r",
          "\r",
          "    float2 p = tex.xy - 0.5;\r",
          "    float r = length(p);\r",
          "    float a = atan2(p.x, p.y) + tau + Rotate / 180* 3.1415;\r",
          "    \r",
          "    float sideAngle = tau/Sides;\r",
          "    a %= sideAngle;\r",
          "    if( a > sideAngle/2) \r",
          "        a = sideAngle - a;\r",
          "    \r",
          "    float2 position = Scale* r * float2(sin(a), cos(a)) + 0.5 + Offset;\r",
          "    float4 c =  Image.Sample(samLinear, position); \r",
          "    c.a = 1;\r",
          "    c.rgb = clamp( c.rgb, 0, 1000);\r",
          "    return  c;\r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Image",
      "MetaInstanceID": "018873ba-c59f-43ad-9818-6a0fa27aa192",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Sides",
      "MetaInstanceID": "c009b675-4938-4492-99ee-282f0bdb18c0",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Rotate",
      "MetaInstanceID": "dcbd0563-b0dd-4a73-a425-7f96b48a1e76",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Offset.X",
      "MetaInstanceID": "cd232d2e-f483-4512-8bf1-6ff3451b1ee8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Offset.Y",
      "MetaInstanceID": "bef65740-3ce6-4490-8735-665edc7e0fad",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scale",
      "MetaInstanceID": "330ca25a-842b-4c37-8fac-e4e1e21654ff",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "374efb04-2db1-4cce-93eb-94b69d8e8cd0",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "0878906d-61f8-400a-90e8-f6028eb3687c",
      "MetaID": "50fade39-3324-43dc-a4fc-916b37b069aa",
      "Name": "KaleidoskopeFunc",
      "Version": "9f488f39-fadf-4fdb-ab41-8c4202bff6f8",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID50fade39_3324_43dc_a4fc_916b37b069aa",
        "{",
        "    public class Class_Kaleidoskope : FXImageFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Image = 1,",
        "            Sides = 2,",
        "            Rotate = 3,",
        "            OffsetX = 4,",
        "            OffsetY = 5,",
        "            Scale = 6",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx)",
        "        {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Image = inputs[(int)InputId.Image].Eval(context).Image; // Needs to be checked for null!",
        "            var Sides = inputs[(int)InputId.Sides].Eval(context).Value;",
        "            var Rotate = inputs[(int)InputId.Rotate].Eval(context).Value;",
        "            var OffsetX = inputs[(int)InputId.OffsetX].Eval(context).Value;",
        "            var OffsetY = inputs[(int)InputId.OffsetY].Eval(context).Value;",
        "            var Offset = new Vector2(OffsetX, OffsetY);",
        "            var Scale = inputs[(int)InputId.Scale].Eval(context).Value;",
        "            //<<< _params",
        "",
        "",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                using (var ImageView = new ShaderResourceView(context.D3DDevice, Image))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Image\").AsShaderResource().SetResource(ImageView);",
        "                    _effect.GetVariableByName(\"Sides\").AsScalar().Set(Sides);",
        "                    _effect.GetVariableByName(\"Rotate\").AsScalar().Set(Rotate);",
        "                    _effect.GetVariableByName(\"Offset\").AsVector().Set(new Vector2(OffsetX, OffsetY));",
        "                    _effect.GetVariableByName(\"Scale\").AsScalar().Set(Scale);",
        "                //<<< _setup",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0878906d-61f8-400a-90e8-f6028eb3687c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "374efb04-2db1-4cce-93eb-94b69d8e8cd0"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "86dcc41b-4c87-4121-9d7f-cff132ab5a68",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0878906d-61f8-400a-90e8-f6028eb3687c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "018873ba-c59f-43ad-9818-6a0fa27aa192",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0878906d-61f8-400a-90e8-f6028eb3687c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c009b675-4938-4492-99ee-282f0bdb18c0",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0878906d-61f8-400a-90e8-f6028eb3687c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "dcbd0563-b0dd-4a73-a425-7f96b48a1e76",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0878906d-61f8-400a-90e8-f6028eb3687c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "cd232d2e-f483-4512-8bf1-6ff3451b1ee8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0878906d-61f8-400a-90e8-f6028eb3687c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "bef65740-3ce6-4490-8735-665edc7e0fad",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0878906d-61f8-400a-90e8-f6028eb3687c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "330ca25a-842b-4c37-8fac-e4e1e21654ff",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0878906d-61f8-400a-90e8-f6028eb3687c"
    }
  ]
}