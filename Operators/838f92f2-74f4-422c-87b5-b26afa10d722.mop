{
  "Name": "SetStateTime",
  "_id": "838f92f2-74f4-422c-87b5-b26afa10d722",
  "Namespace": "projects.scene-org.helpers",
  "Description": "Tries to get a StartTime of a the named State from the Variables in the context and sets Time to a local time since the state got invoked.\r\nThis operator is only useful in conjunction with SimpleStateMachine for the scene.org-awards project.",
  "Inputs": [
    {
      "Name": "Input",
      "MetaInstanceID": "2f29e9fd-4279-4b37-a563-1d4e0046b4e7",
      "DefaultValue": {
        "Type": "Generic",
        "Value": "Framefield.Core.Generic"
      },
      "MetaID": "9f831cf2-a1ec-41f4-ba80-cced9736af6b",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "TimeVariableName",
      "MetaInstanceID": "2c23580b-2b8e-45ea-a10e-0f010bb73e16",
      "DefaultValue": {
        "Type": "Text",
        "Value": ""
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "AtEnd",
      "MetaInstanceID": "47a37466-9629-46ea-8a95-38df67884b77",
      "DefaultValue": {
        "Type": "Float",
        "Value": "2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "2",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": [
        {
          "Name": "Continue",
          "Value": "0"
        },
        {
          "Name": "Wrap",
          "Value": "1"
        },
        {
          "Name": "Stop",
          "Value": "2"
        }
      ]
    },
    {
      "Name": "StartTime",
      "MetaInstanceID": "80b2c0d3-0d75-46a5-a249-03b18a91ebae",
      "DefaultValue": {
        "Type": "Float",
        "Value": "10"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "EndTime",
      "MetaInstanceID": "8003d988-009b-42ad-a8cb-2b8c5ead9238",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SceneWithoutWrapping",
      "MetaInstanceID": "3ff1c82d-5898-4c33-9431-d6993f1ab5cc",
      "DefaultValue": {
        "Type": "Scene",
        "Value": "Framefield.Core.Scene"
      },
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Output",
      "MetaInstanceID": "71f3e530-2ccb-4bb8-8b2e-d26eaa394c8b",
      "MetaID": "9f831cf2-a1ec-41f4-ba80-cced9736af6b"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "be8eaf0d-f27c-406f-8d5d-15e64628d31d",
      "MetaID": "244f16b8-d905-4598-8ffe-763ef64bd907",
      "Name": "SetStateTimeFunc",
      "Version": "76c67fd9-57a6-40aa-98ee-bad0eceee576",
      "Type": "Generic",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID244f16b8_d905_4598_8ffe_763ef64bd907",
        "{",
        "    public class Class_SetStateTime : OperatorPart.Function, Framefield.Core.OperatorPartTraits.IVariableAccessor, Framefield.Core.OperatorPartTraits.ITimeClip",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Input = 0,",
        "            TimeVariableName = 1,",
        "            AtEnd = 2,",
        "            StartTime = 3,",
        "            EndTime = 4,",
        "            SceneWithoutWrapping = 5",
        "        }",
        "        //<<< _inputids",
        "",
        "        public string VariableName",
        "        {",
        "            get",
        "            {",
        "                return OperatorPartUtilities.GetInputTextValue(OperatorPart.Connections[(int)InputId.TimeVariableName]);",
        "            }",
        "        }",
        "",
        "        public double StartTime",
        "        {",
        "            get { return GetInputValue((int)InputId.StartTime); }",
        "            set",
        "            {",
        "                _startTime = value;",
        "                SetInputValue((int)InputId.StartTime, value);",
        "                OperatorPart.EmitChangedEvent();",
        "            }",
        "        }",
        "",
        "        public double EndTime",
        "        {",
        "            get { return GetInputValue((int)InputId.EndTime); }",
        "            set",
        "            {",
        "                _endTime = value;",
        "                SetInputValue((int)InputId.EndTime, value);",
        "                OperatorPart.EmitChangedEvent();",
        "            }",
        "        }",
        "",
        "        public double SourceStartTime",
        "        {",
        "            get { return _sourceStartTime; }",
        "            set { _sourceStartTime = value; OperatorPart.EmitChangedEvent(); }",
        "        }",
        "",
        "        public double SourceEndTime",
        "        {",
        "            get { return _sourceEndTime; }",
        "            set { _sourceEndTime = value; OperatorPart.EmitChangedEvent(); }",
        "        }",
        "",
        "        public int Layer",
        "        {",
        "            get { return _layer; }",
        "            set { _layer = value; OperatorPart.EmitChangedEvent(); }",
        "        }",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx)",
        "        {",
        "            //>>> _params ",
        "            var Input = inputs[(int)InputId.Input];",
        "            var TimeVariableName = inputs[(int)InputId.TimeVariableName].Eval(context).Text;",
        "            var AtEnd = (int) inputs[(int)InputId.AtEnd].Eval(context).Value;",
        "            var StartTime = inputs[(int)InputId.StartTime].Eval(context).Value;",
        "            var EndTime = inputs[(int)InputId.EndTime].Eval(context).Value;",
        "            var SceneWithoutWrapping = inputs[(int)InputId.SceneWithoutWrapping];",
        "            //<<< _params ",
        "",
        "            var t = 0.0f;",
        "            context.Variables.TryGetValue(TimeVariableName, out t);",
        "",
        "            var oldTime = context.Time;",
        "            _startTime = StartTime;",
        "            _endTime = EndTime;",
        "",
        "            switch (AtEnd)",
        "            {",
        "                case 0 : //continue",
        "                    context.Time = t + (float)_startTime;",
        "                    break;",
        "                case 1 : //wrap",
        "                    context.Time = t%(float)(_endTime - _startTime) + (float)_startTime;",
        "                    break;",
        "                case 2 : //stop",
        "                    context.Time = (float)Utilities.Clamp(t + _startTime, _startTime, _endTime);",
        "                    break;",
        "            }",
        "",
        "            _timeAccessorInvalidator.Clear();",
        "            Input.TraverseWithFunctionUseSpecificBehavior(null, _timeAccessorInvalidator);",
        "            Input.Eval(context);",
        "            ",
        "            context.Time = t + (float)_startTime;            ",
        "            SceneWithoutWrapping.Eval(context);",
        "",
        "",
        "            context.Time = oldTime;",
        "            return context;",
        "        }",
        "",
        "        private void SetInputValue(int index, double val)",
        "        {",
        "            OperatorPart opPart = OperatorPart.Connections[index];",
        "            if (opPart.Connections.Count == 0)",
        "            {",
        "                opPart.Func = Utilities.CreateValueFunction(new Float((float)val));",
        "            }",
        "        }",
        "        ",
        "        private double GetInputValue(int index)",
        "        {",
        "            return OperatorPartUtilities.GetInputFloatValue(OperatorPart.Connections[index]);",
        "        }",
        "",
        "        double _startTime = 0;",
        "        double _endTime = 10;",
        "        double _sourceStartTime = 0;",
        "        double _sourceEndTime = 10;",
        "        int _layer = 0;",
        "        OperatorPart.InvalidateTimeAccessors _timeAccessorInvalidator = new OperatorPart.InvalidateTimeAccessors();",
        "    }",
        "}",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2f29e9fd-4279-4b37-a563-1d4e0046b4e7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "be8eaf0d-f27c-406f-8d5d-15e64628d31d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2c23580b-2b8e-45ea-a10e-0f010bb73e16",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "be8eaf0d-f27c-406f-8d5d-15e64628d31d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "47a37466-9629-46ea-8a95-38df67884b77",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "be8eaf0d-f27c-406f-8d5d-15e64628d31d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "80b2c0d3-0d75-46a5-a249-03b18a91ebae",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "be8eaf0d-f27c-406f-8d5d-15e64628d31d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8003d988-009b-42ad-a8cb-2b8c5ead9238",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "be8eaf0d-f27c-406f-8d5d-15e64628d31d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "3ff1c82d-5898-4c33-9431-d6993f1ab5cc",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "be8eaf0d-f27c-406f-8d5d-15e64628d31d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "be8eaf0d-f27c-406f-8d5d-15e64628d31d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "71f3e530-2ccb-4bb8-8b2e-d26eaa394c8b"
    }
  ]
}