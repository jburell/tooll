{
  "Name": "RadialCutShader",
  "_id": "f00df498-cc97-4ffd-a5af-b1834b33ee40",
  "Namespace": "projects.kitsch.research",
  "Description": "",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "2f2fa947-ddca-4154-a7c2-2e564054ed51",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "float4x4 objectToWorldMatrix;\r",
          "float4x4 worldToCameraMatrix;\r",
          "float4x4 cameraToObjectMatrix; // modelview inverse\r",
          "float4x4 projMatrix;\r",
          "float4x4 textureMatrix;\r",
          "\r",
          "\r",
          "//>>> _parameters\r",
          "float NumberOfCopies;",
          "float Id;",
          "float Rotate;",
          "float4 NearColor;",
          "float4 FarColor;",
          "float2 Line;",
          "float4 LineColor;",
          "float4 BackColor;",
          "float ColorBias;",
          "//<<< _parameters\r",
          "\r",
          "struct PointLight\r",
          "{\r",
          "    float4 position;\r",
          "    float4 ambient;\r",
          "    float4 diffuse;\r",
          "    float4 specular;\r",
          "    float4 attenuation;\r",
          "};\r",
          "\r",
          "struct SpotLight\r",
          "{\r",
          "    float4 ambient;\r",
          "    float4 diffuse;\r",
          "    float4 specular;\r",
          "    float constantAttenuation;\r",
          "    float linearAttenuation;\r",
          "    float quadraticAttenuation;\r",
          "    float spotCutoff;\r",
          "    float spotCosCutoff;\r",
          "    float spotExponent;\r",
          "};\r",
          "\r",
          "cbuffer FogSettings\r",
          "{\r",
          "    float4 fogColor;\r",
          "    float fogStart;\r",
          "    float fogEnd;\r",
          "    float fogScale;\r",
          "}\r",
          "\r",
          "cbuffer MaterialBuffer\r",
          "{\r",
          "    float4 materialAmbient;\r",
          "    float4 materialDiffuse;\r",
          "    float4 materialSpecular;\r",
          "    float4 materialEmission;\r",
          "    float materialShininess;\r",
          "};\r",
          "\r",
          "\r",
          "cbuffer PointLightsBuffer\r",
          "{\r",
          "    int numPointLights;\r",
          "    PointLight pointLights[3];\r",
          "};\r",
          "\r",
          "\r",
          "Texture2D txDiffuse;\r",
          "\r",
          "SamplerState samLinear\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_LINEAR;\r",
          "    AddressU = Wrap;\r",
          "    AddressV = Wrap;\r",
          "};\r",
          "\r",
          "\r",
          "struct VS_IN\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "    float3 normal : NORMAL;\r",
          "    float4 col : COLOR;\r",
          "    float2 texCoord : TEXCOORD0;\r",
          "    float3 tangent : TANGENT0;\r",
          "    float3 binormal : BINORMAL0;\r",
          "};\r",
          "\r",
          "\r",
          "struct PS_IN\r",
          "{\r",
          "    float4 pos : SV_POSITION;\r",
          "    float4 posInWorld  : WORLD_POS;\r",
          "    float3 normal : NORMAL;   \r",
          "    float2 texCoord : TEXCOORD0;\r",
          "    float4 vertexColor : COLOR;\r",
          "    float3 fragPosToCamPos : POS;\r",
          "    float fogFragCoord : FALLO;\r",
          "};\r",
          "\r",
          "\r",
          "float mod(float a, float b)\r",
          "{\r",
          "    return a - b*floor(a/b);\r",
          "}\r",
          "\r",
          "float3 mod(float3 a, float b)\r",
          "{\r",
          "    return a - b*floor(a/b);\r",
          "}\r",
          "\r",
          "\r",
          "//>>> VS\r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.posInWorld = mul(input.pos, objectToWorldMatrix);",
          "    output.pos = mul(output.posInWorld, worldToCameraMatrix);",
          "    output.normal = mul(input.normal, (float3x3)objectToWorldMatrix);",
          "    output.fogFragCoord = abs(output.pos.z / input.pos.w);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = mul(float4(input.texCoord, 0, 1), textureMatrix).xy;",
          "    output.fragPosToCamPos = normalize(mul(cameraToObjectMatrix[3], objectToWorldMatrix) - output.posInWorld);",
          "    output.vertexColor = input.col;",
          "      ",
          "    return output;",
          "}",
          "//<<< VS\r",
          "\r",
          "float4 calcLightSource(float3 fragPosInWorld, int lightIdx, float3 cameraVector, float3 norm, float4 baseColor)\r",
          "{\r",
          "    float3 lightVector = pointLights[lightIdx].position - fragPosInWorld;\r",
          "    float dist = length(lightVector);\r",
          "    lightVector = normalize(lightVector);\r",
          "    float nxDir = max(0.0, dot(norm, lightVector));\r",
          "    float4 diffuse = pointLights[lightIdx].diffuse * nxDir;\r",
          "    float specularPower = 0.0;\r",
          "    if (nxDir > 0.0)\r",
          "    {\r",
          "        float3 r = reflect(-lightVector, norm);\r",
          "        float rl = max(0.0, dot(r, cameraVector));\r",
          "        specularPower = pow(rl, materialShininess);\r",
          "    }\r",
          "\r",
          "    float attenuation = 1.0 / (pointLights[lightIdx].attenuation.x +\r",
          "                               pointLights[lightIdx].attenuation.y * dist +\r",
          "                               pointLights[lightIdx].attenuation.z * dist * dist);\r",
          "    float4 color = materialAmbient * pointLights[lightIdx].ambient * attenuation +\r",
          "                   materialDiffuse * (diffuse * baseColor * attenuation) +\r",
          "                   materialSpecular * pointLights[lightIdx].specular * specularPower * attenuation;\r",
          "                   \r",
          "    return color;\r",
          "}\r",
          "\r",
          "\r",
          "\r",
          "//>>> PS\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float2 newTexCoords = input.texCoord;\r",
          "    float3 norm = normalize(input.normal);\r",
          "    float4 baseColor = txDiffuse.Sample(samLinear, newTexCoords);\r",
          "  \r",
          "    float4 color = float4(0, 0, 0, 1);\r",
          "    for (int lightIdx = 0; lightIdx < numPointLights; ++lightIdx)\r",
          "    {\r",
          "        color += calcLightSource(input.posInWorld, lightIdx, input.fragPosToCamPos, norm, baseColor);\r",
          "    }\r",
          "\r",
          "    float fog = (fogEnd - input.fogFragCoord) * fogScale;\r",
          "    fog = clamp(fog, 0.0, 1.0);\r",
          "    \r",
          "    float angle = atan2(input.posInWorld.z, input.posInWorld.x);\r",
          "    if( angle < 0) {\r",
          "        angle = 2*3.14+angle;\r",
          "    }\r",
          "    \r",
          "    float beta= 2*3.141578 / NumberOfCopies;\r",
          "    \r",
          "    //if (mod(angle + Rotate, beta) < beta /2) {\r",
          "    angle= 2*3.141578-angle;\r",
          "    if (angle < beta* Id || angle > beta * (Id+1)) {\r",
          "        discard;\r",
          "    }\r",
          "    \r",
          "    //color += materialEmission*baseColor;\r",
          "   \r",
          "    color.a=1;\r",
          "        \r",
          "    color= float4(lerp(fogColor.rgb, color.rgb, fog), materialDiffuse.a * baseColor.a);\r",
          "    //color.r= angle/6.1415;\r",
          "    //color.gb=0;\r",
          "    return color;    \r",
          "\r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "technique10 Render\r",
          "{\r",
          "    pass P0\r",
          "    {\r",
          "        SetGeometryShader( 0 );\r",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );\r",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );\r",
          "    }\r",
          "} "
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scene",
      "MetaInstanceID": "85cdb75c-b4b7-45f9-8e95-4bf5be11a379",
      "DefaultValue": {
        "Type": "Scene",
        "Value": "Framefield.Core.Scene"
      },
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "NumberOfCopies",
      "MetaInstanceID": "0c1f8458-5c0e-4bda-b5a7-7b1ce632b5c2",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Relevant",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Id",
      "MetaInstanceID": "c3c1f177-ee8e-4ac2-ab89-608e5ff9c644",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Relevant",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Rotate",
      "MetaInstanceID": "83e113f5-da43-4171-8e25-9cc4b667a1ce",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Relevant",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "NearColor.R",
      "MetaInstanceID": "067532e4-3771-46c0-9d32-b73a510b7006",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "NearColor.G",
      "MetaInstanceID": "e94e69ff-8441-4e01-a894-8d0f23648f5c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "NearColor.B",
      "MetaInstanceID": "5946275e-e722-475b-ae4b-8eb634507026",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "NearColor.A",
      "MetaInstanceID": "0052f1f3-e863-4128-b055-7db18401a538",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "FarColor.R",
      "MetaInstanceID": "c49f6571-fa7b-4011-8201-32f161e8df49",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "FarColor.G",
      "MetaInstanceID": "39517536-e4fa-42d3-a7b3-5423298cf5cf",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "FarColor.B",
      "MetaInstanceID": "03d4ac83-26e6-4269-805a-418f927ca54a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "FarColor.A",
      "MetaInstanceID": "2c57622d-a177-4069-82d6-5bdf818007c5",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Line.Distance",
      "MetaInstanceID": "c8a6cba0-5cdb-446c-bc9a-d1ac363f5a15",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Line.Width",
      "MetaInstanceID": "be364d1c-7496-4b5d-8432-ff30057b43f8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-1",
      "Max": "100",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LineColor.R",
      "MetaInstanceID": "c9db8a5a-75d9-4c12-8201-bf3e514b441a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LineColor.G",
      "MetaInstanceID": "f209d7d2-4051-4f03-9a75-11e2b4d91bac",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LineColor.B",
      "MetaInstanceID": "8dd9bae4-8cab-41c4-a5d3-01b7c2ca76d7",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LineColor.A",
      "MetaInstanceID": "81f74347-c832-46c8-bb57-e4fd1e1607b2",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "BackColor.R",
      "MetaInstanceID": "9c0ff4c8-b383-4e8a-8721-808d3bf4bcdc",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "BackColor.G",
      "MetaInstanceID": "1f416c4e-4c4a-40b2-9082-e238088fc23c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "BackColor.B",
      "MetaInstanceID": "72640d15-feb5-46b7-a986-b7edf313ef0b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "BackColor.A",
      "MetaInstanceID": "0e1c31ee-a150-43c1-935d-f3f6a7d69733",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ColorBias",
      "MetaInstanceID": "443bb1e0-3ff9-4a43-93c3-13495b9fecf1",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Scene",
      "MetaInstanceID": "edad2cdb-a02c-44d4-ba66-6eb112f5f1d3",
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5",
      "MetaID": "714c7007-0342-48a0-a241-f46d95439c3c",
      "Name": "RadialCutShaderFunc",
      "Version": "53bafa08-39aa-4828-8cb9-089cc1a49cfa",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "using Framefield.Core.Rendering;",
        "",
        "namespace Framefield.Core.ID714c7007_0342_48a0_a241_f46d95439c3c",
        "{",
        "    public class Class_RadialCutShader : FXSourceCodeFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Scene = 1,",
        "            NumberOfCopies = 2,",
        "            Id = 3,",
        "            Rotate = 4,",
        "            NearColorR = 5,",
        "            NearColorG = 6,",
        "            NearColorB = 7,",
        "            NearColorA = 8,",
        "            FarColorR = 9,",
        "            FarColorG = 10,",
        "            FarColorB = 11,",
        "            FarColorA = 12,",
        "            LineDistance = 13,",
        "            LineWidth = 14,",
        "            LineColorR = 15,",
        "            LineColorG = 16,",
        "            LineColorB = 17,",
        "            LineColorA = 18,",
        "            BackColorR = 19,",
        "            BackColorG = 20,",
        "            BackColorB = 21,",
        "            BackColorA = 22,",
        "            ColorBias = 23",
        "        }",
        "        //<<< _inputids",
        "        #region Renderer",
        "        public class Renderer : BaseRenderer",
        "        {",
        "            public override void SetupEffect(OperatorPartContext context)",
        "            {",
        "                base.SetupEffect(context);",
        "                try",
        "                {",
        "                    SetupMaterialConstBuffer(context);",
        "                    SetupFogSettingsConstBuffer(context);",
        "                    SetupPointLightsConstBuffer(context);",
        "                }",
        "                catch (Exception e)",
        "                {",
        "                    Logger.Error(ParentFunc,\"Error building constant buffer: {0} - Source: {1}\", e.Message, e.Source);",
        "                }",
        "            }",
        "            public OperatorPart.Function ParentFunc{get;set;}",
        "        }",
        "        #endregion",
        "",
        "        public Class_RadialCutShader()",
        "        {",
        "            _renderer = new Renderer(){ParentFunc=this};",
        "        }",
        "",
        "        public override void Dispose()",
        "        {",
        "            Utilities.DisposeObj(ref _renderer);",
        "            base.Dispose();",
        "        }",
        "",
        "        bool _firstEval = true;",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx)",
        "        {",
        "            // >>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Scene = inputs[(int)InputId.Scene];",
        "            var NumberOfCopies = inputs[(int)InputId.NumberOfCopies].Eval(context).Value;",
        "            var Id = inputs[(int)InputId.Id].Eval(context).Value;",
        "            var Rotate = inputs[(int)InputId.Rotate].Eval(context).Value;",
        "            var NearColorR = inputs[(int)InputId.NearColorR].Eval(context).Value;",
        "            var NearColorG = inputs[(int)InputId.NearColorG].Eval(context).Value;",
        "            var NearColorB = inputs[(int)InputId.NearColorB].Eval(context).Value;",
        "            var NearColorA = inputs[(int)InputId.NearColorA].Eval(context).Value;",
        "            var NearColor = new Color4(NearColorR, NearColorG, NearColorB, NearColorA);",
        "            var FarColorR = inputs[(int)InputId.FarColorR].Eval(context).Value;",
        "            var FarColorG = inputs[(int)InputId.FarColorG].Eval(context).Value;",
        "            var FarColorB = inputs[(int)InputId.FarColorB].Eval(context).Value;",
        "            var FarColorA = inputs[(int)InputId.FarColorA].Eval(context).Value;",
        "            var FarColor = new Color4(FarColorR, FarColorG, FarColorB, FarColorA);",
        "            var LineDistance = inputs[(int)InputId.LineDistance].Eval(context).Value;",
        "            var LineWidth = inputs[(int)InputId.LineWidth].Eval(context).Value;",
        "            var Line = new Vector2(LineDistance, LineWidth);",
        "            var LineColorR = inputs[(int)InputId.LineColorR].Eval(context).Value;",
        "            var LineColorG = inputs[(int)InputId.LineColorG].Eval(context).Value;",
        "            var LineColorB = inputs[(int)InputId.LineColorB].Eval(context).Value;",
        "            var LineColorA = inputs[(int)InputId.LineColorA].Eval(context).Value;",
        "            var LineColor = new Color4(LineColorR, LineColorG, LineColorB, LineColorA);",
        "            var BackColorR = inputs[(int)InputId.BackColorR].Eval(context).Value;",
        "            var BackColorG = inputs[(int)InputId.BackColorG].Eval(context).Value;",
        "            var BackColorB = inputs[(int)InputId.BackColorB].Eval(context).Value;",
        "            var BackColorA = inputs[(int)InputId.BackColorA].Eval(context).Value;",
        "            var BackColor = new Color4(BackColorR, BackColorG, BackColorB, BackColorA);",
        "            var ColorBias = inputs[(int)InputId.ColorBias].Eval(context).Value;",
        "            // <<< _params",
        "",
        "            if (_firstEval)",
        "            {",
        "                for (int i = 0; i < NumCodes(); ++i)",
        "                    Compile(i);",
        "                _firstEval = false;",
        "                Changed = true;",
        "            }",
        "",
        "            using (new PropertyStasher<OperatorPartContext>(context, \"Effect\", \"Renderer\"))",
        "            {",
        "                //_effect.GetVariableByName(\"Range\").AsVector().Set(new Vector2(RangeX, RangeY));",
        "                _effect.GetVariableByName(\"NumberOfCopies\").AsScalar().Set(NumberOfCopies);",
        "                _effect.GetVariableByName(\"Id\").AsScalar().Set(Id);",
        "                _effect.GetVariableByName(\"Rotate\").AsScalar().Set(Rotate);",
        "                context.Effect = _effect;",
        "                context.Renderer = _renderer;",
        "                Scene.Eval(context);",
        "            }",
        "",
        "            /*",
        "            //>>> _setup",
        "            {",
        "                _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                _effect.GetVariableByName(\"NumberOfCopies\").AsScalar().Set(NumberOfCopies);",
        "                _effect.GetVariableByName(\"Id\").AsScalar().Set(Id);",
        "                _effect.GetVariableByName(\"Rotate\").AsScalar().Set(Rotate);",
        "                _effect.GetVariableByName(\"NearColor\").AsVector().Set(new Vector4(NearColorR, NearColorG, NearColorB, NearColorA));",
        "                _effect.GetVariableByName(\"FarColor\").AsVector().Set(new Vector4(FarColorR, FarColorG, FarColorB, FarColorA));",
        "                _effect.GetVariableByName(\"Line\").AsVector().Set(new Vector2(LineDistance, LineWidth));",
        "                _effect.GetVariableByName(\"LineColor\").AsVector().Set(new Vector4(LineColorR, LineColorG, LineColorB, LineColorA));",
        "                _effect.GetVariableByName(\"BackColor\").AsVector().Set(new Vector4(BackColorR, BackColorG, BackColorB, BackColorA));",
        "                _effect.GetVariableByName(\"ColorBias\").AsScalar().Set(ColorBias);",
        "            //<<< _setup            ",
        "            */",
        "            return context;",
        "        }",
        "",
        "        Renderer _renderer;",
        "    }",
        "}",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "edad2cdb-a02c-44d4-ba66-6eb112f5f1d3"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2f2fa947-ddca-4154-a7c2-2e564054ed51",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "85cdb75c-b4b7-45f9-8e95-4bf5be11a379",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0c1f8458-5c0e-4bda-b5a7-7b1ce632b5c2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c3c1f177-ee8e-4ac2-ab89-608e5ff9c644",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "83e113f5-da43-4171-8e25-9cc4b667a1ce",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "067532e4-3771-46c0-9d32-b73a510b7006",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e94e69ff-8441-4e01-a894-8d0f23648f5c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5946275e-e722-475b-ae4b-8eb634507026",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0052f1f3-e863-4128-b055-7db18401a538",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c49f6571-fa7b-4011-8201-32f161e8df49",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "39517536-e4fa-42d3-a7b3-5423298cf5cf",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "03d4ac83-26e6-4269-805a-418f927ca54a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2c57622d-a177-4069-82d6-5bdf818007c5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c8a6cba0-5cdb-446c-bc9a-d1ac363f5a15",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "be364d1c-7496-4b5d-8432-ff30057b43f8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c9db8a5a-75d9-4c12-8201-bf3e514b441a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f209d7d2-4051-4f03-9a75-11e2b4d91bac",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8dd9bae4-8cab-41c4-a5d3-01b7c2ca76d7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "81f74347-c832-46c8-bb57-e4fd1e1607b2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9c0ff4c8-b383-4e8a-8721-808d3bf4bcdc",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "1f416c4e-4c4a-40b2-9082-e238088fc23c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "72640d15-feb5-46b7-a986-b7edf313ef0b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0e1c31ee-a150-43c1-935d-f3f6a7d69733",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "443bb1e0-3ff9-4a43-93c3-13495b9fecf1",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "401bb151-4f2c-4304-9bfd-9dcf284fa4d5"
    }
  ]
}