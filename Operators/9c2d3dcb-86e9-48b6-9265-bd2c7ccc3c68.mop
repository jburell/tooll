{
  "Name": "StillLogoDF (2)",
  "_id": "9c2d3dcb-86e9-48b6-9265-bd2c7ccc3c68",
  "Namespace": "projects.square.shaders",
  "Description": "Loads an imagelk.",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "db8f356f-ed86-4901-b633-777c8caad5c2",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "float Minrad;",
          "float Scale;",
          "float3 Clamping;",
          "float2 Fold;",
          "float3 Increment;",
          "float MaxSteps;",
          "float StepSize;",
          "float MinDistance;",
          "float MaxDistance;",
          "float DistToColor;",
          "float4 Surface1;",
          "float4 Surface2;",
          "float4 Surface3;",
          "float4 Diffuse;",
          "float4 Specular;",
          "float2 Spec;",
          "float4 Glow;",
          "float4 AmbientOcclusion;",
          "float AODistance;",
          "float4 Background;",
          "float Fog;",
          "float3 LightPos;",
          "float3 SpherePos;",
          "float SphereRadius;",
          "float3 B;",
          "//<<< _parameters\r",
          "float4x4 ViewToWorld;\r",
          "float4x4 WorldToView;\r",
          " \r",
          "//>>> setup\r",
          "SamplerState samLinear\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_LINEAR;\r",
          "    AddressU = Clamp;\r",
          "    AddressV = Clamp;\r",
          "};\r",
          "//<<< setup\r",
          "\r",
          "//>>> declarations\r",
          "struct VS_IN\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "    float2 texCoord : TEXCOORD;\r",
          "};\r",
          "\r",
          "struct PS_IN\r",
          "{\r",
          "    float4 pos : SV_POSITION;\r",
          "    float2 texCoord: TEXCOORD0;\t    \r",
          "    float3 worldTViewPos: TEXCOORD1;\r",
          "    float3 worldTViewDir: TEXCOORD2;\r",
          "};\r",
          "//<<< declarations\r",
          "\r",
          "struct PS_OUTPUT\r",
          "{\r",
          "    float4 color : SV_TARGET;\r",
          "    float depth : SV_DEPTH;\r",
          "};\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> VS \r",
          "PS_IN VS( VS_IN input )\r",
          "{\r",
          "    PS_IN output = (PS_IN)0;\r",
          "    input.pos = mul(input.pos, objectToWorldMatrix); \r",
          "    output.pos = mul(input.pos, worldToCameraMatrix);\r",
          "    output.pos = mul(output.pos, projMatrix);\r",
          "    output.texCoord = input.texCoord;\r",
          "\r",
          "    float4 viewTNearFragPos = float4(input.texCoord.x*2.0 - 1.0, -input.texCoord.y*2.0 + 1.0, 0.0, 1.0);\r",
          "    float4 worldTNearFragPos = mul(viewTNearFragPos, ViewToWorld);\r",
          "    worldTNearFragPos /= worldTNearFragPos.w;\r",
          "\r",
          "    float4 viewTFarFragPos = float4(input.texCoord.x*2.0 - 1.0, -input.texCoord.y*2.0 + 1.0, 1.0, 1.0);\r",
          "    float4 worldTFarFragPos = mul(viewTFarFragPos, ViewToWorld);\r",
          "    worldTFarFragPos /= worldTFarFragPos.w;\r",
          "\r",
          "    output.worldTViewDir = normalize(worldTFarFragPos.xyz - worldTNearFragPos.xyz);\r",
          "\r",
          "    output.worldTViewPos = worldTNearFragPos;\r",
          "    return output;\r",
          "}\r",
          "//<<< VS\r",
          "\r",
          "//>>> PS\r",
          "\r",
          "\r",
          "float dSphere(float3 p0) {\r",
          "    return length(p0+float4(SpherePos.xyz,1))-SphereRadius;\r",
          "}\r",
          "\r",
          "float udCubes(float3 p) {\r",
          "    float3 b= float3(1,10,0.2);\r",
          "    float3 c= float3(SpherePos.x,SpherePos.y,SpherePos.z);\r",
          "    float3 q = fmod(p,c)-0.5*c;\r",
          "    float3  di = abs(p) - b;\r",
          "    //float mc = maxcomp(di);\r",
          "    //return min(mc,length(max(di,0.0)));  \r",
          "    float rad=SphereRadius;\r",
          "    return length( max( abs(q) - b + float3(rad,rad,rad), 0.0 ) ) - rad;\r",
          "    //return length(max(abs(p)-b,0.0));\r",
          "    \r",
          "}\r",
          "\r",
          "float BOX_RADIUS= 0.03;\r",
          "float dBox(float3 p, float3 b) {\r",
          "    return length( max( abs(p) - b + float3(BOX_RADIUS,BOX_RADIUS,BOX_RADIUS), 0.0 ) ) - BOX_RADIUS;\r",
          "}\r",
          "\r",
          "\r",
          "float mod (float a, float b) {\r",
          "    return  a - b * floor(a/b);\r",
          "}\r",
          "\r",
          "float maxcomp(float3 v) {\r",
          "    if(v.x > v.y && v.x > v.z) return v.x;\r",
          "    if(v.y > v.z) return v.y;\r",
          "    return v.z;\r",
          "}\r",
          "\r",
          "float sdBox( float3 p, float3 b )\r",
          "{\r",
          "  float3  di = abs(p) - b;\r",
          "  float mc = maxcomp(di);\r",
          "  return min(mc,length(max(di,0.0)));\r",
          "}\r",
          "\r",
          "float sdBox2(float2 p, float2 b) {\r",
          "  float2  di = abs(p) - b;\r",
          "  float mc = max(di.x, di.y);\r",
          "  return min(mc,length(max(di,0.0)));\r",
          "}\r",
          "\r",
          "float sdCross( in float3 p, float d )\r",
          "{\r",
          "  float da = sdBox2(p.xy, float2(d, 1.0));\r",
          "  float db = sdBox2(p.yz,float2(d, 1.0));\r",
          "  float dc = sdBox2(p.zx,float2(d, 1.0));\r",
          "  return min(da,min(db,dc));\r",
          "}\r",
          "\r",
          "\r",
          "\r",
          "\r",
          "float3 rep(float3 p, float3 c) {\r",
          "    return float3( \r",
          "            mod(p.x,c.x),  \r",
          "            mod(p.y,c.y), \r",
          "            mod(p.z,c.z)) - 0.5*c;\r",
          "    \r",
          "\r",
          "}\r",
          "\r",
          "float dRepeatedXBars(float3 p, float3 r, float h, float w) {\r",
          "    float3 p1= rep(p, r);\r",
          "    return sdBox2(p1.xy, float2(h, w));;\r",
          "}\r",
          "\r",
          "float dRepeatedYBars(float3 p, float3 r, float h, float w) {\r",
          "    float3 p1= rep(p, r);\r",
          "    return sdBox2(p1.xz, float2(h, w));;\r",
          "}\r",
          "float dRepeatedZBars(float3 p, float3 r, float h, float w) {\r",
          "    float3 p1= rep(p, r);\r",
          "    return sdBox2(p1.yz, float2(h, w));;\r",
          "}\r",
          "\r",
          "\r",
          "int iters =4;\r",
          "\r",
          "// Compute the distance from |pos| to the Mandelbox.\r",
          "float sdMandelBox(float3 pos) {\r",
          "    float4 pN = float4(pos,1);\r",
          "    // precomputed constants\r",
          "    float minRad2 = clamp(Minrad, 1.0e-9, 1.0);\r",
          "    float4 scale = float4(Scale, Scale, Scale, abs(Scale)) / minRad2 ;\r",
          "    float absScalem1 = abs(Scale - 1.0);\r",
          "    float AbsScaleRaisedTo1mIters = pow(abs(Scale), float(1-iters));\r",
          "    float DIST_MULTIPLIER = StepSize;\r",
          "\r",
          "    float4 p = float4(pos,1);\r",
          "    float4 p0 = p;  // p.w is the distance estimate\r",
          "  \r",
          "\r",
          "  for (int i=0; i<iters; i++) {\r",
          "     //box folding: \r",
          "     //if (p>1) p = 2-p; else if (p<-1) p = -2-p;\r",
          "    p.xyz = abs(1+p.xyz) - p.xyz - abs(1.0-p.xyz);  // add;add;abs.add;abs.add (130.4%)\r",
          "    //p.xyz = clamp(p.xyz*0.5+0.5, 0.0, 1.0) * 4.0 - 2.0 - p.xyz;  // mad.sat;mad;add (102.3%)    \r",
          "    //p.xyz = clamp(p.xyz, -1.0, 1.0) * 2.0 - p.xyz;  // min;max;mad    \r",
          "    p.xyz = clamp(p.xyz, Clamping.x, Clamping.y) * Clamping.z - p.xyz;  // min;max;mad\r",
          "    \r",
          "\r",
          "    // sphere folding: if (r2 < minRad2) p /= minRad2; else if (r2 < 1.0) p /= r2;\r",
          "    float r2 = dot(p.xyz, p.xyz);\r",
          "    p *= clamp(max(minRad2/r2, minRad2), Fold.x, Fold.y);  // dp3,div,max.sat,mul\r",
          "    p.xyz+= float3(Increment.x,Increment.y,Increment.z);\r",
          "    // scale, translate\r",
          "    p = p*scale + p0;\r",
          "  }\r",
          "  float d=((length(p.xyz) - absScalem1) / p.w - AbsScaleRaisedTo1mIters) * DIST_MULTIPLIER;\r",
          "  return d;\r",
          "  //d=0.1;\r",
          "  //return max(udCubes(p0),d );\r",
          "  //return max( udCubes(p0), dStillLogo(p0));\r",
          "  //return min(dStillLogo(pN), d);\r",
          "}\r",
          "\r",
          "\r",
          "float dRotatedBoxes(float3 p, float3 b, float3 r, float angle ) {\r",
          "    //float angle= SphereRadius;\r",
          "    float3 pRotated= float3(p.x * cos(angle) - p.z * sin(angle), \r",
          "                            p.y,\r",
          "                            p.x * sin(angle) + p.z * cos(angle));\r",
          "    pRotated= rep(pRotated, r);\r",
          "    return sdBox( pRotated, b);\r",
          "    \r",
          "}\r",
          "\r",
          "\r",
          "float getDistance(float3 p) {\r",
          "    //float dPlanes = dRotatedPlanes(p, 5);\r",
          "    //float dColumns= dBox( float3( mod(p.x,0),mod(p.y,3.2),mod(p.z,2))  - float3( 1,0,0), float3(10.5,2.5,0.5));\r",
          "    \r",
          "    //return max(dPlanes , dColumns);\r",
          "    //return dPlanes;\r",
          "    //return max(dPlanes, dBox(p, float3(4,4,4)));\r",
          "    //p= float3( mod(p.x,3),  mod(p.y,5), mod(p.z,6));\r",
          "    //p= rep(p, float3(SpherePos.x/p.y,SpherePos.y*p.x,SpherePos.z*p.x/p.y));\r",
          "    float3 p1= rep(p, float3(SpherePos.x,SpherePos.y, SpherePos.z));\r",
          "    float dBars= sdCross(p1, float3(20,16,7));\r",
          "    \r",
          "    //float3 p2= rep(p, float3(2,10, 1));\r",
          "    //float dBox= sdBox(p2, float3(1,10,14));\r",
          "    float d=10000;\r",
          "    \r",
          "    \r",
          "    \r",
          "    \r",
          "    //d= max(d, dRepeatedYBars(p, 0.2, 0.72,1.8));  //big blocks\r",
          "    \r",
          "    d= min( d, dRotatedBoxes(p,float3(0.53,10, 0.5), float3(1.6, 1.4, 1.47) , B.x  ));\r",
          "    d= max( d, -dRotatedBoxes(p,float3(0.63,10, 0.1), float3(1.6, 1.4, 1.47) , 25  ));\r",
          "    d= max(d, sdBox(p, float3(5,4,5))); //limit to big block\r",
          "    \r",
          "    float d2= dRotatedBoxes(p,float3(0.53,10, 1.5), float3(2.1, 1.8, 1.47) , B.y  );\r",
          "    d2= max(d2, sdBox(p+float3(0, -2, 0), float3(4.9,2,4.9))); //limit to big block\r",
          "    d=max(d,-d2);\r",
          "    \r",
          "    float d3= dRotatedBoxes(p,float3(0.73,10, 1.3), float3(2.1, 1.8, 1.47) , B.z  );\r",
          "    d3= max(d3, sdBox(p+float3(0, -3, 0), float3(5.8,4,5.8))); //limit to big block\r",
          "    d=max(d,-d3);\r",
          "\r",
          "    d=max(d,sdMandelBox(p+float3(0,0,0)));\r",
          "\r",
          "    //d= min(d, dSphere(p));\r",
          "    \r",
          "    // surface ace offeset\r",
          "    //d+= clamp(dRepeatedYBars(p, SpherePos, 0.1,1) , \r",
          "    //    0,0.001);\r",
          "        \r",
          "    float offset= clamp(sdBox(\r",
          "                   rep(p,  float3(0.22, 0.13, 0.46)), \r",
          "                    float3(0.2, 0.01, 0.2)),\r",
          "                    -0.00, 0.01);\r",
          "                    \r",
          "    offset+= -clamp(sdBox(\r",
          "                   rep(p,  float3(0.02, 0.04, 0.26)), \r",
          "                    float3(0.008, 0.08, 0.1)),\r",
          "    0,0.002);\r",
          "         \r",
          "     d+=clamp(offset,0.0,0.01);\r",
          "\r",
          "    //streetx\r",
          "    d= min(d, dRepeatedXBars(p, float3(5.1,1.1,0.1) , 0.01,0.02));\r",
          "    d= min(d, dRepeatedZBars(p - float3(10.4,0.30,3.0) , float3(4.1,2.1,3.1) , 0.01,0.01));\r",
          "    \r",
          "    //d= min(d, sdBox( p+float3(0,7,0), float3(1000,1,1000)));\r",
          "    return d;\r",
          "    \r",
          "}\r",
          "\r",
          "\r",
          "// Blinn-Phong shading model with rim lighting (diffuse light bleeding to the other side).\r",
          "// |normal|, |view| and |light| should be normalized.\r",
          "float3 blinn_phong(float3 normal, float3 view, float3 light, float3 diffuseColor) {\r",
          "  float3 halfLV = normalize(light + view);\r",
          "  float spe = pow(max( dot(normal, halfLV), Spec.x ), Spec.y);\r",
          "  float dif = dot(normal, light) * 0.1 + 0.15;\r",
          "  return dif*diffuseColor + spe*Specular*Specular.a;\r",
          "}\r",
          "\r",
          "\r",
          "\r",
          "\r",
          "\r",
          "float3 getNormal(float3 p, float offset)\r",
          "{\r",
          "    float dt=.0001;\r",
          "    float3 n=float3(getDistance(p+float3(dt,0,0)),\r",
          "                    getDistance(p+float3(0,dt,0)),\r",
          "                    getDistance(p+float3(0,0,dt)))-getDistance(p);\r",
          "    return normalize(n);\r",
          "}\r",
          "\r",
          "\r",
          "float getAO(float3 aoposition, float3 aonormal, float aodistance, float aoiterations, float aofactor)\r",
          "{\r",
          "    float ao = 0.0;\r",
          "    float k = aofactor;\r",
          "    aodistance /= aoiterations;\r",
          "    for (float i=1; i < 4; i += 1)\r",
          "    {\r",
          "        ao += (i * aodistance - getDistance(aoposition + aonormal * i * aodistance)) / pow(2,i);\r",
          "    }\r",
          "    return 1.0 - k * ao;\r",
          "}\r",
          "/*\r",
          "float4 getTexture2(float3 p, float3 n) \r",
          "{\r",
          "    float s = 1.3;\r",
          "    float dx = abs(n.x);\r",
          "    float dy = abs(n.y);\r",
          "    float dz = abs(n.z);\r",
          "    if (dx > dy  > dz) return  Image.Sample(samLinear, float2(frac(p.z*s), frac(p.y * s))); \r",
          "    if (dy > dz) return  Image.Sample(samLinear, float2(frac(p.x*s), frac(p.z * s)));\r",
          "    return  Image.Sample(samLinear, float2(frac(p.x*s), frac(p.y * s)));\r",
          "}*/\r",
          "\r",
          "float MAX_DIST=300;\r",
          "\r",
          "float3 surfaceColor1 = float3(0.95, 0.64, 0.1);\r",
          "float3 surfaceColor2 = float3(0.89, 0.95, 0.75);\r",
          "float3 surfaceColor3 = float3(0.55, 0.06, 0.03);\r",
          "\r",
          "// Compute the color at |pos|.\r",
          "float3 color(float3 pos) {\r",
          "  float3 p = pos, p0 = p;\r",
          "  float trap = 1.0;\r",
          "\r",
          "  for (int i=0; i<3; i++) {\r",
          "    p.xyz = clamp(p.xyz, -1.0, 1.0) * 2.0 - p.xyz;\r",
          "    float r2 = dot(p.xyz, p.xyz);\r",
          "    p *= clamp(max(Minrad/r2, Minrad), 0.0, 1.0);\r",
          "    p = p*Scale + p0.xyz;\r",
          "    trap = min(trap, r2);\r",
          "  }\r",
          "  // |c.x|: log final distance (fractional iteration count)\r",
          "  // |c.y|: spherical orbit trap at (0,0,0)\r",
          "  float2 c = clamp(float2( 0.33*log(dot(p,p))-1.0, sqrt(trap) ), 0.0, 1.0);\r",
          "\r",
          "  return lerp(lerp(Surface1, Surface2, c.y), Surface3, c.x);\r",
          "}\r",
          "\r",
          "\r",
          "PS_OUTPUT PS( PS_IN input )\r",
          "{\r",
          "    PS_OUTPUT output = (PS_OUTPUT)0;\r",
          "\r",
          "    //float4 filter= Image2.Sample(samLinear, input.texCoord);\r",
          "    float3 p = input.worldTViewPos;\r",
          "    float3 dp = normalize(input.worldTViewDir);\r",
          "\r",
          "  float totalD = 0.0;\r",
          "  float D = 3.4e38;\r",
          "  D=StepSize;\r",
          "  float extraD = 0.0;\r",
          "  float lastD;\r",
          "  \r",
          "  int steps;\r",
          "\r",
          "    /*  \r",
          "    // Intersect the view ray with the Mandelbox using raymarching.\r",
          "    for (steps=0; steps<MaxSteps; steps++) {\r",
          "        lastD = D;\r",
          "        D = getDistance(p + totalD * dp);\r",
          "\r",
          "        // Overstepping: have we jumped too far? Cancel last step.    \r",
          "        if (extraD > 0.0 && D < extraD) {\r",
          "            totalD -= extraD;\r",
          "            extraD = 0.0; \r",
          "            D = 3.4e38;\r",
          "            steps--;\r",
          "            continue;\r",
          "        }\r",
          "\r",
          "        if (D < MinDistance/1000) break;\r",
          "\r",
          "        totalD += D;\r",
          "\r",
          "        // Overstepping is based on the optimal length of the last step.\r",
          "        totalD += extraD = 0.096 * D*(D+extraD)/lastD;\r",
          "    }\r",
          "    */\r",
          "\r",
          "\r",
          "    // SImple iterator\r",
          "    \r",
          "    \r",
          "    for(steps=0;steps<MaxSteps && abs(D)>MinDistance/1000;steps++)\r",
          "    {\r",
          "        D=getDistance(p);\r",
          "        p+=dp*D;\t\r",
          "    }\r",
          "    \r",
          "    \r",
          "    p += totalD * dp;\r",
          "\r",
          "\r",
          "  // Color the surface with Blinn-Phong shading, ambient occlusion and glow.\r",
          "  float3 col = Background;\r",
          "  float depth = 0.999;\r",
          "\r",
          "  // We've got a hit or we're not sure.\r",
          "  if (D < MAX_DIST) {\r",
          "    float3 n = normalize( getNormal(p, D));\r",
          "    //n*=float3(1,1,10);\r",
          "    n= normalize(n);\r",
          "    col = color(p);\r",
          "    //col = blinn_phong(n, -dp, normalize(input.worldTViewPos+float3(10,1,0)+dp), col);\r",
          "    col = blinn_phong(n, -dp, LightPos, col);\r",
          "    \r",
          "    //float getAO(float3 aoposition, float3 aonormal, float aodistance, float aoiterations, float aofactor)\r",
          "    float distanceLight = pow(Diffuse.a, length(p-LightPos));\r",
          "\r",
          "    col = lerp(AmbientOcclusion, col + distanceLight*Diffuse, getAO(p,n,AODistance, 4, AmbientOcclusion.a));\r",
          "\r",
          "    float4 pInView = mul(float4(p, 1), WorldToView);\r",
          "    pInView /= pInView.w;\r",
          "    depth = pInView.z;\r",
          "\r",
          "    // We've gone through all steps, but we haven't hit anything.\r",
          "    // Mix in the background color.\r",
          "    if (D > MinDistance) {\r",
          "      col = lerp(col, Background, clamp(log(D/MinDistance) * DistToColor, 0.0, 1.0));\r",
          "      depth = 0.999;\r",
          "    }\r",
          "  }\r",
          "\r",
          "    // Glow is based on the number of steps.\r",
          "    col = lerp(col, Glow, float(steps)/float(MaxSteps) * Glow.a);\r",
          "    col = lerp(col, Background, clamp(log( length(p- input.worldTViewPos)/Fog), 0,1));\r",
          "    //col = float3(1,1,0);\r",
          "    output.color = float4(col, 1);\r",
          "\r",
          "    output.depth = depth;\r",
          "\r",
          "    return output;\r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Minrad",
      "MetaInstanceID": "50fa392d-ee4f-4af7-a60a-88c06f5aee6c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.07"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scale",
      "MetaInstanceID": "0b498748-e414-460e-b7e4-a7e327fb4162",
      "DefaultValue": {
        "Type": "Float",
        "Value": "5.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Clamping.X",
      "MetaInstanceID": "f808723e-12f2-4fcf-903d-529818fd1a61",
      "DefaultValue": {
        "Type": "Float",
        "Value": "-1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Clamping.Y",
      "MetaInstanceID": "e5426a4d-a607-4e04-9f68-81b3427e15d5",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Clamping.Z",
      "MetaInstanceID": "f47cf579-dec8-487e-a027-71ef6b25fa62",
      "DefaultValue": {
        "Type": "Float",
        "Value": "2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Fold.Min",
      "MetaInstanceID": "4d6077c9-fc12-4adf-9e2c-2a0ce69be992",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Fold.Max",
      "MetaInstanceID": "7241ca63-8676-4d2b-a186-cc8cd8a26940",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Increment.X",
      "MetaInstanceID": "311054cd-808d-4e23-b3bb-f933a490b53d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Increment.Y",
      "MetaInstanceID": "0e4fe48b-052f-4410-9fea-922cbe96f168",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Increment.Z",
      "MetaInstanceID": "90410430-9530-46bd-98ca-cd2a54080ec9",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "MaxSteps",
      "MetaInstanceID": "ad98904c-34b2-4b26-910b-31ce55ff540a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "24"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "1",
      "Max": "200",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StepSize",
      "MetaInstanceID": "d08badc1-d9b0-4273-b888-33e70dc876e0",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-1",
      "Max": "3",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "MinDistance",
      "MetaInstanceID": "0708b112-d31c-4423-b3da-e488e71d29f9",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.01"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "MaxDistance",
      "MetaInstanceID": "64d46e5f-feb4-482a-88fc-fe5392672d60",
      "DefaultValue": {
        "Type": "Float",
        "Value": "30"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "DistToColor",
      "MetaInstanceID": "c4a879f7-7245-4925-a860-00b4f1484ec5",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "2",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface1.R",
      "MetaInstanceID": "c6b558c5-53d9-4486-b062-0741a78f26d4",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.64"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface1.G",
      "MetaInstanceID": "e53fe4a1-294a-4fce-ac78-0aa39e7d05d6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.9"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface1.B",
      "MetaInstanceID": "f2de921a-2077-47e4-a4f9-5bdf43cb99f5",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.6"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface1.A",
      "MetaInstanceID": "f23ca752-9bb4-43b7-9c12-788d087d5082",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface2.R",
      "MetaInstanceID": "d12a728a-c022-4ca9-9bfd-f107a884fa5d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.4"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface2.G",
      "MetaInstanceID": "ba2d2524-af66-4a16-aeb9-9bf9046436e6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.37"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface2.B",
      "MetaInstanceID": "b8448f02-7dca-4205-af37-308aa4175b71",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface2.A",
      "MetaInstanceID": "20064c28-fd3d-4767-b0a8-e469484c5517",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface3.R",
      "MetaInstanceID": "596788f7-0936-486f-ae76-b54e798373b3",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.55"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface3.G",
      "MetaInstanceID": "87a7da0b-c0ca-4fd3-acee-cfc33208f8ce",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.73"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface3.B",
      "MetaInstanceID": "ddd9947b-ccc6-4f8b-80fa-07d2556e54e4",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.56"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Surface3.A",
      "MetaInstanceID": "9bad3d9e-eb18-41e3-a6c6-6db8c29479fc",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Diffuse.R",
      "MetaInstanceID": "79567d82-4873-4dce-9163-7fec2b5c68af",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Diffuse.G",
      "MetaInstanceID": "9afee583-88ba-4dca-9029-ae60ad2d8c96",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Diffuse.B",
      "MetaInstanceID": "42311f1a-65c8-4195-81a1-15b80ab6ed71",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Diffuse.A",
      "MetaInstanceID": "3ffe4380-a349-44f5-877a-d03bdb40af0c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Specular.R",
      "MetaInstanceID": "7aabbd96-d01b-4dc2-98ec-2376c7969cc1",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Specular.G",
      "MetaInstanceID": "9f921bc6-1a41-4826-826c-c45983689685",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Specular.B",
      "MetaInstanceID": "717b116c-7ee4-41dd-8814-2b423db14d9b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Specular.A",
      "MetaInstanceID": "338a3f3a-4e19-42a4-8660-e653dcf05ca6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10",
      "Max": "10",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Spec.Power",
      "MetaInstanceID": "2126145b-fa6c-4378-91da-9b0945799a4d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.9"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100",
      "Max": "100",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Spec.FallOff",
      "MetaInstanceID": "d1abe0d5-e1e3-44fa-bbed-04f27792a87b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100",
      "Max": "100",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Glow.R",
      "MetaInstanceID": "5cacbd98-e044-4050-8775-709ecdeaf214",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Glow.G",
      "MetaInstanceID": "9c4e14ed-9a1a-4f2b-9c7f-0c9bd08ceeee",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Glow.B",
      "MetaInstanceID": "54f80d02-7e1c-44f1-8160-38442b460801",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Glow.A",
      "MetaInstanceID": "d86cae98-be36-41b1-acea-679cda54940c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.24"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10",
      "Max": "10",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "AmbientOcclusion.R",
      "MetaInstanceID": "d6bd69fa-0529-46c9-aae5-81d3da131dc7",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "AmbientOcclusion.G",
      "MetaInstanceID": "430bd365-0973-4461-a7cd-756ba70f1ba1",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "AmbientOcclusion.B",
      "MetaInstanceID": "75e9fb3e-06c0-4dd9-82e5-157725655d68",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "AmbientOcclusion.A",
      "MetaInstanceID": "03eefc4a-8931-4cc9-9bc8-c8d7e25a86f1",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.43"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10",
      "Max": "10",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "AODistance",
      "MetaInstanceID": "243d7a10-f29a-430a-9508-e13722d8428b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1.9"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Background.R",
      "MetaInstanceID": "2cd53fc3-1fe5-43bc-a291-cf8d9a37e292",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.08000004"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Background.G",
      "MetaInstanceID": "8dd81d5d-f5f0-451c-856b-ae726a94ae6b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Background.B",
      "MetaInstanceID": "e0d7068b-9822-410d-b040-ee785c319263",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.06999999"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Background.A",
      "MetaInstanceID": "3c73ee05-1a5a-4461-9fdd-f3806a9fcc22",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Fog",
      "MetaInstanceID": "a2e6394a-2893-4d5d-aab5-c266c71acce7",
      "DefaultValue": {
        "Type": "Float",
        "Value": "17"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LightPos.X",
      "MetaInstanceID": "70c8b33c-06ec-4a6e-92b1-26d3287e5bb2",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.9"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LightPos.Y",
      "MetaInstanceID": "03c8c509-7f9f-4f82-92c9-95798da471fc",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1.1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LightPos.Z",
      "MetaInstanceID": "a017e884-6629-443a-b7a9-91a3edbe506f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "-0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SpherePos.X",
      "MetaInstanceID": "984e9743-f238-4185-8395-032be0cd8906",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SpherePos.Y",
      "MetaInstanceID": "e1ea8dbf-0034-4fa8-b4d8-8702e25dc16b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SpherePos.Z",
      "MetaInstanceID": "e1de88a8-a354-4c9f-919a-d1f9d6b22a36",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SphereRadius",
      "MetaInstanceID": "2e582bff-c737-446b-bfb3-75e17edd9f3d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "78.6"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "B.x",
      "MetaInstanceID": "26579aed-a909-41d2-ae41-9c78a522a709",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "B.y",
      "MetaInstanceID": "d57b8aee-7d64-46ed-ae71-2cc817350367",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "B.z",
      "MetaInstanceID": "54d03cab-d879-4231-ac4d-e023e6430e2e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "f8a54442-2b20-4d1d-a37c-da8e98baecf5",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce",
      "MetaID": "f532c016-1b26-4e9a-add8-cb60b70cb00d",
      "Name": "StillLogoDF (2)Func",
      "Version": "32b6da62-98f7-421b-a079-851852bb2692",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.IDf532c016_1b26_4e9a_add8_cb60b70cb00d",
        "{",
        "    public class Class_StillLogoDF__2_ : FXImageFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Minrad = 1,",
        "            Scale = 2,",
        "            ClampingX = 3,",
        "            ClampingY = 4,",
        "            ClampingZ = 5,",
        "            FoldMin = 6,",
        "            FoldMax = 7,",
        "            IncrementX = 8,",
        "            IncrementY = 9,",
        "            IncrementZ = 10,",
        "            MaxSteps = 11,",
        "            StepSize = 12,",
        "            MinDistance = 13,",
        "            MaxDistance = 14,",
        "            DistToColor = 15,",
        "            Surface1R = 16,",
        "            Surface1G = 17,",
        "            Surface1B = 18,",
        "            Surface1A = 19,",
        "            Surface2R = 20,",
        "            Surface2G = 21,",
        "            Surface2B = 22,",
        "            Surface2A = 23,",
        "            Surface3R = 24,",
        "            Surface3G = 25,",
        "            Surface3B = 26,",
        "            Surface3A = 27,",
        "            DiffuseR = 28,",
        "            DiffuseG = 29,",
        "            DiffuseB = 30,",
        "            DiffuseA = 31,",
        "            SpecularR = 32,",
        "            SpecularG = 33,",
        "            SpecularB = 34,",
        "            SpecularA = 35,",
        "            SpecPower = 36,",
        "            SpecFallOff = 37,",
        "            GlowR = 38,",
        "            GlowG = 39,",
        "            GlowB = 40,",
        "            GlowA = 41,",
        "            AmbientOcclusionR = 42,",
        "            AmbientOcclusionG = 43,",
        "            AmbientOcclusionB = 44,",
        "            AmbientOcclusionA = 45,",
        "            AODistance = 46,",
        "            BackgroundR = 47,",
        "            BackgroundG = 48,",
        "            BackgroundB = 49,",
        "            BackgroundA = 50,",
        "            Fog = 51,",
        "            LightPosX = 52,",
        "            LightPosY = 53,",
        "            LightPosZ = 54,",
        "            SpherePosX = 55,",
        "            SpherePosY = 56,",
        "            SpherePosZ = 57,",
        "            SphereRadius = 58,",
        "            BX = 59,",
        "            BY = 60,",
        "            BZ = 61",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Minrad = inputs[(int)InputId.Minrad].Eval(context).Value;",
        "            var Scale = inputs[(int)InputId.Scale].Eval(context).Value;",
        "            var ClampingX = inputs[(int)InputId.ClampingX].Eval(context).Value;",
        "            var ClampingY = inputs[(int)InputId.ClampingY].Eval(context).Value;",
        "            var ClampingZ = inputs[(int)InputId.ClampingZ].Eval(context).Value;",
        "            var Clamping = new Vector3(ClampingX, ClampingY, ClampingZ);",
        "            var FoldMin = inputs[(int)InputId.FoldMin].Eval(context).Value;",
        "            var FoldMax = inputs[(int)InputId.FoldMax].Eval(context).Value;",
        "            var Fold = new Vector2(FoldMin, FoldMax);",
        "            var IncrementX = inputs[(int)InputId.IncrementX].Eval(context).Value;",
        "            var IncrementY = inputs[(int)InputId.IncrementY].Eval(context).Value;",
        "            var IncrementZ = inputs[(int)InputId.IncrementZ].Eval(context).Value;",
        "            var Increment = new Vector3(IncrementX, IncrementY, IncrementZ);",
        "            var MaxSteps = inputs[(int)InputId.MaxSteps].Eval(context).Value;",
        "            var StepSize = inputs[(int)InputId.StepSize].Eval(context).Value;",
        "            var MinDistance = inputs[(int)InputId.MinDistance].Eval(context).Value;",
        "            var MaxDistance = inputs[(int)InputId.MaxDistance].Eval(context).Value;",
        "            var DistToColor = inputs[(int)InputId.DistToColor].Eval(context).Value;",
        "            var Surface1R = inputs[(int)InputId.Surface1R].Eval(context).Value;",
        "            var Surface1G = inputs[(int)InputId.Surface1G].Eval(context).Value;",
        "            var Surface1B = inputs[(int)InputId.Surface1B].Eval(context).Value;",
        "            var Surface1A = inputs[(int)InputId.Surface1A].Eval(context).Value;",
        "            var Surface1 = new Color4(Surface1R, Surface1G, Surface1B, Surface1A);",
        "            var Surface2R = inputs[(int)InputId.Surface2R].Eval(context).Value;",
        "            var Surface2G = inputs[(int)InputId.Surface2G].Eval(context).Value;",
        "            var Surface2B = inputs[(int)InputId.Surface2B].Eval(context).Value;",
        "            var Surface2A = inputs[(int)InputId.Surface2A].Eval(context).Value;",
        "            var Surface2 = new Color4(Surface2R, Surface2G, Surface2B, Surface2A);",
        "            var Surface3R = inputs[(int)InputId.Surface3R].Eval(context).Value;",
        "            var Surface3G = inputs[(int)InputId.Surface3G].Eval(context).Value;",
        "            var Surface3B = inputs[(int)InputId.Surface3B].Eval(context).Value;",
        "            var Surface3A = inputs[(int)InputId.Surface3A].Eval(context).Value;",
        "            var Surface3 = new Color4(Surface3R, Surface3G, Surface3B, Surface3A);",
        "            var DiffuseR = inputs[(int)InputId.DiffuseR].Eval(context).Value;",
        "            var DiffuseG = inputs[(int)InputId.DiffuseG].Eval(context).Value;",
        "            var DiffuseB = inputs[(int)InputId.DiffuseB].Eval(context).Value;",
        "            var DiffuseA = inputs[(int)InputId.DiffuseA].Eval(context).Value;",
        "            var Diffuse = new Color4(DiffuseR, DiffuseG, DiffuseB, DiffuseA);",
        "            var SpecularR = inputs[(int)InputId.SpecularR].Eval(context).Value;",
        "            var SpecularG = inputs[(int)InputId.SpecularG].Eval(context).Value;",
        "            var SpecularB = inputs[(int)InputId.SpecularB].Eval(context).Value;",
        "            var SpecularA = inputs[(int)InputId.SpecularA].Eval(context).Value;",
        "            var Specular = new Color4(SpecularR, SpecularG, SpecularB, SpecularA);",
        "            var SpecPower = inputs[(int)InputId.SpecPower].Eval(context).Value;",
        "            var SpecFallOff = inputs[(int)InputId.SpecFallOff].Eval(context).Value;",
        "            var Spec = new Vector2(SpecPower, SpecFallOff);",
        "            var GlowR = inputs[(int)InputId.GlowR].Eval(context).Value;",
        "            var GlowG = inputs[(int)InputId.GlowG].Eval(context).Value;",
        "            var GlowB = inputs[(int)InputId.GlowB].Eval(context).Value;",
        "            var GlowA = inputs[(int)InputId.GlowA].Eval(context).Value;",
        "            var Glow = new Color4(GlowR, GlowG, GlowB, GlowA);",
        "            var AmbientOcclusionR = inputs[(int)InputId.AmbientOcclusionR].Eval(context).Value;",
        "            var AmbientOcclusionG = inputs[(int)InputId.AmbientOcclusionG].Eval(context).Value;",
        "            var AmbientOcclusionB = inputs[(int)InputId.AmbientOcclusionB].Eval(context).Value;",
        "            var AmbientOcclusionA = inputs[(int)InputId.AmbientOcclusionA].Eval(context).Value;",
        "            var AmbientOcclusion = new Color4(AmbientOcclusionR, AmbientOcclusionG, AmbientOcclusionB, AmbientOcclusionA);",
        "            var AODistance = inputs[(int)InputId.AODistance].Eval(context).Value;",
        "            var BackgroundR = inputs[(int)InputId.BackgroundR].Eval(context).Value;",
        "            var BackgroundG = inputs[(int)InputId.BackgroundG].Eval(context).Value;",
        "            var BackgroundB = inputs[(int)InputId.BackgroundB].Eval(context).Value;",
        "            var BackgroundA = inputs[(int)InputId.BackgroundA].Eval(context).Value;",
        "            var Background = new Color4(BackgroundR, BackgroundG, BackgroundB, BackgroundA);",
        "            var Fog = inputs[(int)InputId.Fog].Eval(context).Value;",
        "            var LightPosX = inputs[(int)InputId.LightPosX].Eval(context).Value;",
        "            var LightPosY = inputs[(int)InputId.LightPosY].Eval(context).Value;",
        "            var LightPosZ = inputs[(int)InputId.LightPosZ].Eval(context).Value;",
        "            var LightPos = new Vector3(LightPosX, LightPosY, LightPosZ);",
        "            var SpherePosX = inputs[(int)InputId.SpherePosX].Eval(context).Value;",
        "            var SpherePosY = inputs[(int)InputId.SpherePosY].Eval(context).Value;",
        "            var SpherePosZ = inputs[(int)InputId.SpherePosZ].Eval(context).Value;",
        "            var SpherePos = new Vector3(SpherePosX, SpherePosY, SpherePosZ);",
        "            var SphereRadius = inputs[(int)InputId.SphereRadius].Eval(context).Value;",
        "            var BX = inputs[(int)InputId.BX].Eval(context).Value;",
        "            var BY = inputs[(int)InputId.BY].Eval(context).Value;",
        "            var BZ = inputs[(int)InputId.BZ].Eval(context).Value;",
        "            var B = new Vector3(BX, BY, BZ);",
        "            //<<< _params",
        "",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Minrad\").AsScalar().Set(Minrad);",
        "                    _effect.GetVariableByName(\"Scale\").AsScalar().Set(Scale);",
        "                    _effect.GetVariableByName(\"Clamping\").AsVector().Set(new Vector3(ClampingX, ClampingY, ClampingZ));",
        "                    _effect.GetVariableByName(\"Fold\").AsVector().Set(new Vector2(FoldMin, FoldMax));",
        "                    _effect.GetVariableByName(\"Increment\").AsVector().Set(new Vector3(IncrementX, IncrementY, IncrementZ));",
        "                    _effect.GetVariableByName(\"MaxSteps\").AsScalar().Set(MaxSteps);",
        "                    _effect.GetVariableByName(\"StepSize\").AsScalar().Set(StepSize);",
        "                    _effect.GetVariableByName(\"MinDistance\").AsScalar().Set(MinDistance);",
        "                    _effect.GetVariableByName(\"MaxDistance\").AsScalar().Set(MaxDistance);",
        "                    _effect.GetVariableByName(\"DistToColor\").AsScalar().Set(DistToColor);",
        "                    _effect.GetVariableByName(\"Surface1\").AsVector().Set(new Vector4(Surface1R, Surface1G, Surface1B, Surface1A));",
        "                    _effect.GetVariableByName(\"Surface2\").AsVector().Set(new Vector4(Surface2R, Surface2G, Surface2B, Surface2A));",
        "                    _effect.GetVariableByName(\"Surface3\").AsVector().Set(new Vector4(Surface3R, Surface3G, Surface3B, Surface3A));",
        "                    _effect.GetVariableByName(\"Diffuse\").AsVector().Set(new Vector4(DiffuseR, DiffuseG, DiffuseB, DiffuseA));",
        "                    _effect.GetVariableByName(\"Specular\").AsVector().Set(new Vector4(SpecularR, SpecularG, SpecularB, SpecularA));",
        "                    _effect.GetVariableByName(\"Spec\").AsVector().Set(new Vector2(SpecPower, SpecFallOff));",
        "                    _effect.GetVariableByName(\"Glow\").AsVector().Set(new Vector4(GlowR, GlowG, GlowB, GlowA));",
        "                    _effect.GetVariableByName(\"AmbientOcclusion\").AsVector().Set(new Vector4(AmbientOcclusionR, AmbientOcclusionG, AmbientOcclusionB, AmbientOcclusionA));",
        "                    _effect.GetVariableByName(\"AODistance\").AsScalar().Set(AODistance);",
        "                    _effect.GetVariableByName(\"Background\").AsVector().Set(new Vector4(BackgroundR, BackgroundG, BackgroundB, BackgroundA));",
        "                    _effect.GetVariableByName(\"Fog\").AsScalar().Set(Fog);",
        "                    _effect.GetVariableByName(\"LightPos\").AsVector().Set(new Vector3(LightPosX, LightPosY, LightPosZ));",
        "                    _effect.GetVariableByName(\"SpherePos\").AsVector().Set(new Vector3(SpherePosX, SpherePosY, SpherePosZ));",
        "                    _effect.GetVariableByName(\"SphereRadius\").AsScalar().Set(SphereRadius);",
        "                    _effect.GetVariableByName(\"B\").AsVector().Set(new Vector3(BX, BY, BZ));",
        "                //<<< _setup",
        "                var worldToView = context.WorldToCamera*context.CameraProjection;",
        "                var viewToWorld = Matrix.Invert(worldToView);",
        "                _effect.GetVariableByName(\"ViewToWorld\").AsMatrix().SetMatrix(viewToWorld);",
        "                _effect.GetVariableByName(\"WorldToView\").AsMatrix().SetMatrix(worldToView);",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f8a54442-2b20-4d1d-a37c-da8e98baecf5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "db8f356f-ed86-4901-b633-777c8caad5c2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "50fa392d-ee4f-4af7-a60a-88c06f5aee6c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0b498748-e414-460e-b7e4-a7e327fb4162",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f808723e-12f2-4fcf-903d-529818fd1a61",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e5426a4d-a607-4e04-9f68-81b3427e15d5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f47cf579-dec8-487e-a027-71ef6b25fa62",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4d6077c9-fc12-4adf-9e2c-2a0ce69be992",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7241ca63-8676-4d2b-a186-cc8cd8a26940",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "311054cd-808d-4e23-b3bb-f933a490b53d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0e4fe48b-052f-4410-9fea-922cbe96f168",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "90410430-9530-46bd-98ca-cd2a54080ec9",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ad98904c-34b2-4b26-910b-31ce55ff540a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d08badc1-d9b0-4273-b888-33e70dc876e0",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0708b112-d31c-4423-b3da-e488e71d29f9",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "64d46e5f-feb4-482a-88fc-fe5392672d60",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c4a879f7-7245-4925-a860-00b4f1484ec5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c6b558c5-53d9-4486-b062-0741a78f26d4",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e53fe4a1-294a-4fce-ac78-0aa39e7d05d6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f2de921a-2077-47e4-a4f9-5bdf43cb99f5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f23ca752-9bb4-43b7-9c12-788d087d5082",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d12a728a-c022-4ca9-9bfd-f107a884fa5d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ba2d2524-af66-4a16-aeb9-9bf9046436e6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b8448f02-7dca-4205-af37-308aa4175b71",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "20064c28-fd3d-4767-b0a8-e469484c5517",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "596788f7-0936-486f-ae76-b54e798373b3",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "87a7da0b-c0ca-4fd3-acee-cfc33208f8ce",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ddd9947b-ccc6-4f8b-80fa-07d2556e54e4",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9bad3d9e-eb18-41e3-a6c6-6db8c29479fc",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "79567d82-4873-4dce-9163-7fec2b5c68af",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9afee583-88ba-4dca-9029-ae60ad2d8c96",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "42311f1a-65c8-4195-81a1-15b80ab6ed71",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "3ffe4380-a349-44f5-877a-d03bdb40af0c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7aabbd96-d01b-4dc2-98ec-2376c7969cc1",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9f921bc6-1a41-4826-826c-c45983689685",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "717b116c-7ee4-41dd-8814-2b423db14d9b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "338a3f3a-4e19-42a4-8660-e653dcf05ca6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2126145b-fa6c-4378-91da-9b0945799a4d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d1abe0d5-e1e3-44fa-bbed-04f27792a87b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5cacbd98-e044-4050-8775-709ecdeaf214",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9c4e14ed-9a1a-4f2b-9c7f-0c9bd08ceeee",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "54f80d02-7e1c-44f1-8160-38442b460801",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d86cae98-be36-41b1-acea-679cda54940c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d6bd69fa-0529-46c9-aae5-81d3da131dc7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "430bd365-0973-4461-a7cd-756ba70f1ba1",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "75e9fb3e-06c0-4dd9-82e5-157725655d68",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "03eefc4a-8931-4cc9-9bc8-c8d7e25a86f1",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "243d7a10-f29a-430a-9508-e13722d8428b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2cd53fc3-1fe5-43bc-a291-cf8d9a37e292",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8dd81d5d-f5f0-451c-856b-ae726a94ae6b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e0d7068b-9822-410d-b040-ee785c319263",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "3c73ee05-1a5a-4461-9fdd-f3806a9fcc22",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a2e6394a-2893-4d5d-aab5-c266c71acce7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "70c8b33c-06ec-4a6e-92b1-26d3287e5bb2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "03c8c509-7f9f-4f82-92c9-95798da471fc",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a017e884-6629-443a-b7a9-91a3edbe506f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "984e9743-f238-4185-8395-032be0cd8906",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e1ea8dbf-0034-4fa8-b4d8-8702e25dc16b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e1de88a8-a354-4c9f-919a-d1f9d6b22a36",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2e582bff-c737-446b-bfb3-75e17edd9f3d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "26579aed-a909-41d2-ae41-9c78a522a709",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d57b8aee-7d64-46ed-ae71-2cc817350367",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "54d03cab-d879-4231-ac4d-e023e6430e2e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e8b4cfd7-b49b-4cfe-b684-aad8c46b43ce"
    }
  ]
}