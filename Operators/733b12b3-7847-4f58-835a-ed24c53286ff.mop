{
  "Name": "AdjustProjectionShader",
  "_id": "733b12b3-7847-4f58-835a-ed24c53286ff",
  "Namespace": "user.pixtur.experiments.projection",
  "Description": "Provides basic functionality for persepective correction for projection by warping incoming geometry in the given range into a rectangle defined by four points (TopLeft, TopRight, BottomRIght, BottomLeft).\r\n\r\nWorks best by applying like...\r\n[Camera                        ]\r\n[AdjustProjection          ]\r\n[SetTexture                    ]\r\n[Plane] [RenderToImage]\r\n            [Your Scene       ]\r\n            \r\nThe Plane should have a high tesselation around 20. Also see [AdjustProjection]\r\n",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "753779ca-1566-4231-94ba-6b83c5657025",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//float4x4 objectToWorldMatrix;\r",
          "//float4x4 worldToCameraMatrix;\r",
          "//float4x4 cameraToObjectMatrix; // modelview inverse\r",
          "//float4x4 projMatrix;\r",
          "float4x4 textureMatrix;\r",
          "\r",
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "float2 RangeX;",
          "float2 RangeY;",
          "float2 P1;",
          "float2 P2;",
          "float2 P3;",
          "float2 P4;",
          "float2 Tangent1;",
          "float2 Tangent2;",
          "float2 Tangent3;",
          "float2 Tangent4;",
          "float TangentPow;",
          "//<<< _parameters\r",
          "\r",
          "struct PointLight\r",
          "{\r",
          "    float4 position;\r",
          "    float4 ambient;\r",
          "    float4 diffuse;\r",
          "    float4 specular;\r",
          "    float4 attenuation;\r",
          "};\r",
          "\r",
          "struct SpotLight\r",
          "{\r",
          "    float4 ambient;\r",
          "    float4 diffuse;\r",
          "    float4 specular;\r",
          "    float constantAttenuation;\r",
          "    float linearAttenuation;\r",
          "    float quadraticAttenuation;\r",
          "    float spotCutoff;\r",
          "    float spotCosCutoff;\r",
          "    float spotExponent;\r",
          "};\r",
          "\r",
          "cbuffer FogSettings\r",
          "{\r",
          "    float4 fogColor;\r",
          "    float fogStart;\r",
          "    float fogEnd;\r",
          "    float fogScale;\r",
          "}\r",
          "\r",
          "cbuffer MaterialBuffer\r",
          "{\r",
          "    float4 materialAmbient;\r",
          "    float4 materialDiffuse;\r",
          "    float4 materialSpecular;\r",
          "    float4 materialEmission;\r",
          "    float materialShininess;\r",
          "};\r",
          "\r",
          "\r",
          "cbuffer PointLightsBuffer\r",
          "{\r",
          "    int numPointLights;\r",
          "    PointLight pointLights[3];\r",
          "};\r",
          "\r",
          "\r",
          "//Texture2D txDiffuse;\r",
          "\r",
          "SamplerState samLinear\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_LINEAR;\r",
          "    AddressU = Wrap;\r",
          "    AddressV = Wrap;\r",
          "};\r",
          "\r",
          "\r",
          "struct VS_IN\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "    float3 normal : NORMAL;\r",
          "    float4 col : COLOR;\r",
          "    float2 texCoord : TEXCOORD0;\r",
          "    float3 tangent : TANGENT0;\r",
          "    float3 binormal : BINORMAL0;\r",
          "};\r",
          "\r",
          "\r",
          "struct PS_IN\r",
          "{\r",
          "    float4 pos : SV_POSITION;\r",
          "    float4 posInWorld  : WORLD_POS;\r",
          "    float3 normal : NORMAL;   \r",
          "    float2 texCoord : TEXCOORD0;\r",
          "    float4 vertexColor : COLOR;\r",
          "    float3 fragPosToCamPos : POS;\r",
          "    float fogFragCoord : FALLO;\r",
          "};\r",
          "\r",
          "\r",
          "float mod(float a, float b)\r",
          "{\r",
          "    return a - b*floor(a/b);\r",
          "}\r",
          "\r",
          "float3 mod(float3 a, float b)\r",
          "{\r",
          "    return a - b*floor(a/b);\r",
          "}\r",
          "\r",
          "\r",
          "\r",
          "//>>> VS\r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.posInWorld = mul(input.pos, objectToWorldMatrix);",
          "    ",
          "    float wx = (output.posInWorld.x - RangeX.x) / (RangeX.y - RangeX.x);",
          "    float wy = (output.posInWorld.y - RangeY.x) / (RangeY.y - RangeY.x);",
          "    ",
          "    float wp1= (1-wx)  * wy;",
          "    float wp2= wx * wy;",
          "    float wp3= wx * (1-wy);",
          "    float wp4= (1-wx) *(1-wy); ",
          "    ",
          "    ",
          "    ",
          "    float2 p= P1*wp1 + P2*wp2 + P3*wp3 + P4*wp4;",
          "    ",
          "    p.y += pow(1-wx,TangentPow)*wy * Tangent1.y     + pow(wx,TangentPow)*wy * Tangent2.y",
          "         + pow(1-wx,TangentPow)*(1-wy) * Tangent4.y + pow(wx,TangentPow)*(1-wy) * Tangent3.y;",
          "",
          "    p.x += pow(wy,TangentPow)*(1-wx) * Tangent1.x + pow(1-wy,TangentPow)*(1-wx) * Tangent4.x",
          "         + pow(wy,TangentPow)*   wx  * Tangent2.x + pow(1-wy,TangentPow)*(wx) * Tangent3.x;",
          "",
          "output.posInWorld.xy = p;    ",
          "    output.pos = mul(output.posInWorld, worldToCameraMatrix);",
          "    output.normal = mul(input.normal, (float3x3)objectToWorldMatrix);",
          "    output.fogFragCoord = abs(output.pos.z / input.pos.w);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = mul(float4(input.texCoord, 0, 1), textureMatrix).xy;",
          "    //output.fragPosToCamPos = normalize(mul(cameraToObjectMatrix[3], objectToWorldMatrix) - output.posInWorld);",
          "    output.vertexColor = input.col;",
          "      ",
          "    return output;",
          "}",
          "//<<< VS\r",
          "\r",
          "\r",
          "//>>> PS\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float2 newTexCoords = input.texCoord;\r",
          "    float3 norm = normalize(input.normal);\r",
          "    float4 baseColor = txDiffuse.Sample(samLinear, newTexCoords);\r",
          "\r",
          "    return  baseColor;\r",
          "    \r",
          "\r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "technique10 Render\r",
          "{\r",
          "    pass P0\r",
          "    {\r",
          "        SetGeometryShader( 0 );\r",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );\r",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );\r",
          "    }\r",
          "} "
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scene",
      "MetaInstanceID": "35a4a509-d86d-4389-8891-229c2d2af2de",
      "DefaultValue": {
        "Type": "Scene",
        "Value": "Framefield.Core.Scene"
      },
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RangeX.Min",
      "MetaInstanceID": "7da72c94-857a-4d30-bd65-ccac003d6430",
      "DefaultValue": {
        "Type": "Float",
        "Value": "-0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RangeX.Max",
      "MetaInstanceID": "8f5e7db1-cb67-4c18-b0e8-e1979bfcd475",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RangeY.Min",
      "MetaInstanceID": "2e1d3412-3973-46f3-814d-2a90209eed89",
      "DefaultValue": {
        "Type": "Float",
        "Value": "-0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RangeY.Max",
      "MetaInstanceID": "4aaa2835-376a-49ab-9575-4cc66f45f724",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "P1.X",
      "MetaInstanceID": "dee46230-9840-41e6-a638-e144449be9d7",
      "DefaultValue": {
        "Type": "Float",
        "Value": "-0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "P1.Y",
      "MetaInstanceID": "4055006c-0f77-4eb4-a735-7b437cb4b2ac",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "P2.X",
      "MetaInstanceID": "23d00ca4-5b51-4703-889e-e0dcaf2d82be",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "P2.Y",
      "MetaInstanceID": "9bf53806-705b-4fc0-b52d-831dcb34d1ea",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "P3.X",
      "MetaInstanceID": "9b930868-d045-45ba-a1b0-a098ab4cd9a1",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "P3.Y",
      "MetaInstanceID": "4a4d1457-4148-403c-a028-3964b917d676",
      "DefaultValue": {
        "Type": "Float",
        "Value": "-0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "P4.X",
      "MetaInstanceID": "b52fcc77-8b14-41d9-aa8a-c52472aea181",
      "DefaultValue": {
        "Type": "Float",
        "Value": "-0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "P4.Y",
      "MetaInstanceID": "90b677c1-6ea6-4a2c-8d15-4976b0b539ff",
      "DefaultValue": {
        "Type": "Float",
        "Value": "-0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Tangent1.X",
      "MetaInstanceID": "1350941c-b0e0-41ac-9752-3a37df716ced",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Tangent1.Y",
      "MetaInstanceID": "2fe95ba0-05fb-4f9e-96dd-7e1517ca3c9e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Tangent2.X",
      "MetaInstanceID": "5cd10ad6-7a7d-4184-ad01-7b350d15ade8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Tangent2.Y",
      "MetaInstanceID": "a5b7b31b-9bcc-4c2e-82d0-4ce8e583c0ff",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Tangent3.X",
      "MetaInstanceID": "f3e85167-a336-4720-a970-88e71fea86ad",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Tangent3.Y",
      "MetaInstanceID": "fe1ac6b7-5a5d-4431-a39f-c4a9582d069a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Tangent4.X",
      "MetaInstanceID": "d3a36cd1-b3be-4b64-ae66-fbddd076e68c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Tangent4.Y",
      "MetaInstanceID": "10655c95-062a-4332-b4e3-ae699ee975c2",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "TangentPow",
      "MetaInstanceID": "7f2843c4-e006-4c54-9ac8-eb2481ab3049",
      "DefaultValue": {
        "Type": "Float",
        "Value": "2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Scene",
      "MetaInstanceID": "7ed1be5e-5577-4539-b550-eaef5f3194f2",
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82",
      "MetaID": "020fcdc5-69b7-47b8-abd4-59d01e689ab3",
      "Name": "AdjustProjectionShaderFunc",
      "Version": "e8b4c857-eb26-47ec-b781-6499bb1a4e74",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "using Framefield.Core.Rendering;",
        "",
        "",
        "namespace Framefield.Core.ID020fcdc5_69b7_47b8_abd4_59d01e689ab3",
        "{",
        "",
        "    public class Class_AdjustProjectionShader : FXSourceCodeFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Scene = 1,",
        "            RangeXMin = 2,",
        "            RangeXMax = 3,",
        "            RangeYMin = 4,",
        "            RangeYMax = 5,",
        "            P1X = 6,",
        "            P1Y = 7,",
        "            P2X = 8,",
        "            P2Y = 9,",
        "            P3X = 10,",
        "            P3Y = 11,",
        "            P4X = 12,",
        "            P4Y = 13,",
        "            Tangent1X = 14,",
        "            Tangent1Y = 15,",
        "            Tangent2X = 16,",
        "            Tangent2Y = 17,",
        "            Tangent3X = 18,",
        "            Tangent3Y = 19,",
        "            Tangent4X = 20,",
        "            Tangent4Y = 21,",
        "            TangentPow = 22",
        "        }",
        "        //<<< _inputids",
        "        #region Renderer",
        "        public class Renderer : BaseRenderer",
        "        {",
        "            public override void SetupEffect(OperatorPartContext context) {",
        "                base.SetupEffect(context);",
        "",
        "                try {",
        "                    SetupMaterialConstBuffer(context);",
        "                    SetupFogSettingsConstBuffer(context);",
        "                    SetupPointLightsConstBuffer(context);",
        "                }",
        "                catch (Exception e) {",
        "                    Logger.Error(ParentFunc, \"Error building constant buffer: {0} - Source: {1}\", e.Message, e.Source);",
        "                }",
        "            }",
        "            public OperatorPart.Function ParentFunc {get;set;}            ",
        "        }",
        "        #endregion",
        "",
        "        public Class_AdjustProjectionShader() {",
        "            _renderer = new Renderer(){ParentFunc = this};",
        "        }",
        "",
        "        public override void Dispose() {",
        "            Utilities.DisposeObj(ref _renderer);",
        "            base.Dispose();",
        "        }",
        "",
        "        bool _firstEval = true;",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            // >>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Scene = inputs[(int)InputId.Scene];",
        "            var RangeXMin = inputs[(int)InputId.RangeXMin].Eval(context).Value;",
        "            var RangeXMax = inputs[(int)InputId.RangeXMax].Eval(context).Value;",
        "            var RangeX = new Vector2(RangeXMin, RangeXMax);",
        "            var RangeYMin = inputs[(int)InputId.RangeYMin].Eval(context).Value;",
        "            var RangeYMax = inputs[(int)InputId.RangeYMax].Eval(context).Value;",
        "            var RangeY = new Vector2(RangeYMin, RangeYMax);",
        "            var P1X = inputs[(int)InputId.P1X].Eval(context).Value;",
        "            var P1Y = inputs[(int)InputId.P1Y].Eval(context).Value;",
        "            var P1 = new Vector2(P1X, P1Y);",
        "            var P2X = inputs[(int)InputId.P2X].Eval(context).Value;",
        "            var P2Y = inputs[(int)InputId.P2Y].Eval(context).Value;",
        "            var P2 = new Vector2(P2X, P2Y);",
        "            var P3X = inputs[(int)InputId.P3X].Eval(context).Value;",
        "            var P3Y = inputs[(int)InputId.P3Y].Eval(context).Value;",
        "            var P3 = new Vector2(P3X, P3Y);",
        "            var P4X = inputs[(int)InputId.P4X].Eval(context).Value;",
        "            var P4Y = inputs[(int)InputId.P4Y].Eval(context).Value;",
        "            var P4 = new Vector2(P4X, P4Y);",
        "            var Tangent1X = inputs[(int)InputId.Tangent1X].Eval(context).Value;",
        "            var Tangent1Y = inputs[(int)InputId.Tangent1Y].Eval(context).Value;",
        "            var Tangent1 = new Vector2(Tangent1X, Tangent1Y);",
        "            var Tangent2X = inputs[(int)InputId.Tangent2X].Eval(context).Value;",
        "            var Tangent2Y = inputs[(int)InputId.Tangent2Y].Eval(context).Value;",
        "            var Tangent2 = new Vector2(Tangent2X, Tangent2Y);",
        "            var Tangent3X = inputs[(int)InputId.Tangent3X].Eval(context).Value;",
        "            var Tangent3Y = inputs[(int)InputId.Tangent3Y].Eval(context).Value;",
        "            var Tangent3 = new Vector2(Tangent3X, Tangent3Y);",
        "            var Tangent4X = inputs[(int)InputId.Tangent4X].Eval(context).Value;",
        "            var Tangent4Y = inputs[(int)InputId.Tangent4Y].Eval(context).Value;",
        "            var Tangent4 = new Vector2(Tangent4X, Tangent4Y);",
        "            var TangentPow = inputs[(int)InputId.TangentPow].Eval(context).Value;",
        "            // <<< _params",
        "            if (_firstEval) {",
        "                for (int i = 0; i < NumCodes(); ++i)",
        "                    Compile(i);",
        "                _firstEval = false;",
        "                Changed = true;",
        "            }",
        "",
        "            using (new PropertyStasher<OperatorPartContext>(context, \"Effect\", \"Renderer\")) {                ",
        "                _effect.GetVariableByName(\"RangeX\").AsVector().Set(new Vector2(RangeXMin, RangeXMax));",
        "                _effect.GetVariableByName(\"RangeY\").AsVector().Set(new Vector2(RangeYMin, RangeYMax));",
        "                _effect.GetVariableByName(\"P1\").AsVector().Set(new Vector2(P1X, P1Y));",
        "                _effect.GetVariableByName(\"P2\").AsVector().Set(new Vector2(P2X, P2Y));",
        "                _effect.GetVariableByName(\"P3\").AsVector().Set(new Vector2(P3X, P3Y));",
        "                _effect.GetVariableByName(\"P4\").AsVector().Set(new Vector2(P4X, P4Y));",
        "                _effect.GetVariableByName(\"Tangent1\").AsVector().Set(new Vector2(Tangent1X, Tangent1Y));",
        "                _effect.GetVariableByName(\"Tangent2\").AsVector().Set(new Vector2(Tangent2X, Tangent2Y));",
        "                _effect.GetVariableByName(\"Tangent3\").AsVector().Set(new Vector2(Tangent3X, Tangent3Y));",
        "                _effect.GetVariableByName(\"Tangent4\").AsVector().Set(new Vector2(Tangent4X, Tangent4Y));",
        "                _effect.GetVariableByName(\"TangentPow\").AsScalar().Set(TangentPow);",
        "                context.Effect = _effect;",
        "                context.Renderer = _renderer;",
        "                Scene.Eval(context);",
        "            }",
        "",
        "            /*",
        "            //>>> _setup",
        "            {",
        "                _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                _effect.GetVariableByName(\"RangeX\").AsVector().Set(new Vector2(RangeXMin, RangeXMax));",
        "                _effect.GetVariableByName(\"RangeY\").AsVector().Set(new Vector2(RangeYMin, RangeYMax));",
        "                _effect.GetVariableByName(\"P1\").AsVector().Set(new Vector2(P1X, P1Y));",
        "                _effect.GetVariableByName(\"P2\").AsVector().Set(new Vector2(P2X, P2Y));",
        "                _effect.GetVariableByName(\"P3\").AsVector().Set(new Vector2(P3X, P3Y));",
        "                _effect.GetVariableByName(\"P4\").AsVector().Set(new Vector2(P4X, P4Y));",
        "                _effect.GetVariableByName(\"Tangent1\").AsVector().Set(new Vector2(Tangent1X, Tangent1Y));",
        "                _effect.GetVariableByName(\"Tangent2\").AsVector().Set(new Vector2(Tangent2X, Tangent2Y));",
        "                _effect.GetVariableByName(\"Tangent3\").AsVector().Set(new Vector2(Tangent3X, Tangent3Y));",
        "                _effect.GetVariableByName(\"Tangent4\").AsVector().Set(new Vector2(Tangent4X, Tangent4Y));",
        "                _effect.GetVariableByName(\"TangentPow\").AsScalar().Set(TangentPow);",
        "            //<<< _setup            ",
        "            */",
        "            return context;",
        "        }",
        "",
        "        Renderer _renderer;",
        "    }",
        "}",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7ed1be5e-5577-4539-b550-eaef5f3194f2"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "753779ca-1566-4231-94ba-6b83c5657025",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "35a4a509-d86d-4389-8891-229c2d2af2de",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7da72c94-857a-4d30-bd65-ccac003d6430",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8f5e7db1-cb67-4c18-b0e8-e1979bfcd475",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2e1d3412-3973-46f3-814d-2a90209eed89",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4aaa2835-376a-49ab-9575-4cc66f45f724",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "dee46230-9840-41e6-a638-e144449be9d7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4055006c-0f77-4eb4-a735-7b437cb4b2ac",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "23d00ca4-5b51-4703-889e-e0dcaf2d82be",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9bf53806-705b-4fc0-b52d-831dcb34d1ea",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9b930868-d045-45ba-a1b0-a098ab4cd9a1",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4a4d1457-4148-403c-a028-3964b917d676",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b52fcc77-8b14-41d9-aa8a-c52472aea181",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "90b677c1-6ea6-4a2c-8d15-4976b0b539ff",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "1350941c-b0e0-41ac-9752-3a37df716ced",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2fe95ba0-05fb-4f9e-96dd-7e1517ca3c9e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5cd10ad6-7a7d-4184-ad01-7b350d15ade8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a5b7b31b-9bcc-4c2e-82d0-4ce8e583c0ff",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f3e85167-a336-4720-a970-88e71fea86ad",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "fe1ac6b7-5a5d-4431-a39f-c4a9582d069a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d3a36cd1-b3be-4b64-ae66-fbddd076e68c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "10655c95-062a-4332-b4e3-ae699ee975c2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7f2843c4-e006-4c54-9ac8-eb2481ab3049",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d2857063-f63c-4f00-9ae7-7fc8d6b43a82"
    }
  ]
}