{
  "Name": "CountPixels",
  "_id": "9c61dbdf-4c24-4432-987b-fe9b6ffe0734",
  "Namespace": "lib.image.experimental",
  "Description": "Counts the pixels in the input which have a color above the threshold.\r\nAbove means, that each color component is larger than the corresponding other color component.",
  "Inputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "8fd83f18-7a32-415a-9a6f-b1fb9a793ec0",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ThresholdColor.R",
      "MetaInstanceID": "848d1f6e-624d-4180-8d2f-fc64f4842dc8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ThresholdColor.G",
      "MetaInstanceID": "b34d8e66-f0e7-46b1-9a84-719072dafc9e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ThresholdColor.B",
      "MetaInstanceID": "e7369dc8-4561-4c12-a5b9-c957a7f5d22c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ThresholdColor.A",
      "MetaInstanceID": "1a599571-78b8-40ad-a07f-98733ff34558",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Output",
      "MetaInstanceID": "45e485ea-73a9-424b-a6c1-2c233212c278",
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "df29c39e-6f32-4224-8bd2-458cee0ef5b3",
      "MetaID": "e3fbabf6-2fc8-4e85-89fd-31fb5bd9e9e6",
      "Name": "CountPixelsFunc",
      "Version": "d95d9331-0108-4521-8da0-2b978fe24737",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "using SharpDX.DXGI;",
        "",
        "namespace Framefield.Core.IDe3fbabf6_2fc8_4e85_89fd_31fb5bd9e9e6",
        "{",
        "    public class Class_CountPixels : OperatorPart.Function",
        "    {",
        "        public override void Dispose()",
        "        {   ",
        "            Utilities.DisposeObj(ref _imageWithCPUAccess);",
        "        }",
        "    ",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Image = 0,",
        "            ThresholdColorR = 1,",
        "            ThresholdColorG = 2,",
        "            ThresholdColorB = 3,",
        "            ThresholdColorA = 4",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) ",
        "        {",
        "            //>>> _params",
        "            var Image = inputs[(int)InputId.Image].Eval(context).Image; if (Image == null) return context;",
        "            var ThresholdColorR = inputs[(int)InputId.ThresholdColorR].Eval(context).Value;",
        "            var ThresholdColorG = inputs[(int)InputId.ThresholdColorG].Eval(context).Value;",
        "            var ThresholdColorB = inputs[(int)InputId.ThresholdColorB].Eval(context).Value;",
        "            var ThresholdColorA = inputs[(int)InputId.ThresholdColorA].Eval(context).Value;",
        "            var ThresholdColor = new Color4(ThresholdColorR, ThresholdColorG, ThresholdColorB, ThresholdColorA);",
        "            //<<< _params",
        "",
        "            var immediateContext = D3DDevice.Device.ImmediateContext;",
        "            if (_imageWithCPUAccess == null ||",
        "                _imageWithCPUAccess.Description.Format != Image.Description.Format ||",
        "                _imageWithCPUAccess.Description.Width != Image.Description.Width ||",
        "                _imageWithCPUAccess.Description.Height != Image.Description.Height ||",
        "                _imageWithCPUAccess.Description.MipLevels != Image.Description.MipLevels)",
        "            {",
        "                var desc = new Texture2DDescription()",
        "                               {",
        "                                   BindFlags = BindFlags.None,",
        "                                   Format = Image.Description.Format,",
        "                                   Width = Image.Description.Width,",
        "                                   Height = Image.Description.Height,",
        "                                   MipLevels = Image.Description.MipLevels,",
        "                                   SampleDescription = new SampleDescription(1, 0),",
        "                                   Usage = ResourceUsage.Staging,",
        "                                   OptionFlags = ResourceOptionFlags.None,",
        "                                   CpuAccessFlags = CpuAccessFlags.Read,",
        "                                   ArraySize = 1",
        "                               };",
        "                Utilities.DisposeObj(ref _imageWithCPUAccess);",
        "                _imageWithCPUAccess = new Texture2D(D3DDevice.Device, desc);",
        "            }",
        "",
        "            long countedPixel = 0;",
        "            if (Changed)",
        "            {",
        "                immediateContext.CopyResource(Image, _imageWithCPUAccess);",
        "                DataStream imageStream = null;",
        "                DataBox dataBox = immediateContext.MapSubresource(_imageWithCPUAccess, 0, 0, MapMode.Read, SharpDX.Direct3D11.MapFlags.None, out imageStream);",
        "",
        "                using (imageStream)",
        "                {",
        "                    imageStream.Position = 0;",
        "                    var desc = Image.Description;",
        "                    for (int y = 0; y < desc.Height; ++y)",
        "                    {",
        "                        for (int x = 0; x < desc.Width; ++x)",
        "                        {",
        "                            Color4 currentC = new Color4(imageStream.Read<Int32>());",
        "                            if (currentC.Red >= ThresholdColor.Red &&",
        "                                currentC.Green >= ThresholdColor.Green &&",
        "                                currentC.Blue >= ThresholdColor.Blue &&",
        "                                currentC.Alpha >= ThresholdColor.Alpha)",
        "                            {",
        "                                ++countedPixel;",
        "                            }",
        "                        }",
        "                        imageStream.Position += dataBox.RowPitch - desc.Width*4;",
        "                    }",
        "        ",
        "                    immediateContext.UnmapSubresource(_imageWithCPUAccess, 0);",
        "                }",
        "            }",
        "            context.Value = (float)countedPixel;",
        "            Changed = false;",
        "            return context;",
        "        }",
        "        Texture2D _imageWithCPUAccess;",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "df29c39e-6f32-4224-8bd2-458cee0ef5b3",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "45e485ea-73a9-424b-a6c1-2c233212c278"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8fd83f18-7a32-415a-9a6f-b1fb9a793ec0",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "df29c39e-6f32-4224-8bd2-458cee0ef5b3"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "848d1f6e-624d-4180-8d2f-fc64f4842dc8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "df29c39e-6f32-4224-8bd2-458cee0ef5b3"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b34d8e66-f0e7-46b1-9a84-719072dafc9e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "df29c39e-6f32-4224-8bd2-458cee0ef5b3"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e7369dc8-4561-4c12-a5b9-c957a7f5d22c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "df29c39e-6f32-4224-8bd2-458cee0ef5b3"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "1a599571-78b8-40ad-a07f-98733ff34558",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "df29c39e-6f32-4224-8bd2-458cee0ef5b3"
    }
  ]
}