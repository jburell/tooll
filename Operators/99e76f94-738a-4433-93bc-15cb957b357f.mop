{
  "Name": "SplineDistort (3)",
  "_id": "99e76f94-738a-4433-93bc-15cb957b357f",
  "Namespace": "projects.igravity.shaders",
  "Description": "Distorts a set of vertical rectangles into ribbons\r\n\r\nribbonIndex-derived from x-position\r\n",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "c0d7cc53-0040-4a1d-9785-dafe85a56830",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _parameters\r",
          "float Shift;",
          "float3 StraightRegion;",
          "float RibbonWidth;",
          "float StraightSpacing;",
          "float3 SpinRegion;",
          "float3 Spin;",
          "float RibbonShift;",
          "float3 SinRegion;",
          "float3 PeriodA;",
          "float3 AmplitudeA;",
          "float3 PhaseA;",
          "float3 PeriodB;",
          "float3 AmplitudeB;",
          "float3 PhaseB;",
          "float3 CircleRegion;",
          "float CircleRadius;",
          "float CircleCircumfence;",
          "float CircleSpin;",
          "float StraightOffset;",
          "float3 StraightDirection;",
          "float2 SinSplit;",
          "//<<< _parameters\r",
          "\r",
          "float2 RenderTargetSize;\r",
          "\r",
          "struct Vertex\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "    float3 normal : NORMAL;\r",
          "    float4 col : COLOR;\r",
          "    float2 texCoord : TEXCOORD0;\r",
          "    float3 tangent : TANGENT0;\r",
          "    float3 binormal : BINORMAL0;\r",
          "};\r",
          "\r",
          "Vertex VertexMain(Vertex input)\r",
          "{\r",
          "    return input;\r",
          "}\r",
          "\r",
          "float _noiseTime=0;\r",
          "float _frequency=0;\r",
          "\r",
          "SamplerState samLinear\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_LINEAR;\r",
          "    AddressU = Wrap;\r",
          "    AddressV = Wrap;\r",
          "};\r",
          "\r",
          "\r",
          "\r",
          "float Lerp(float a, float b, float t)\r",
          "{\r",
          "    return a + t*(b - a);\r",
          "}\r",
          "\r",
          "\r",
          "/*\r",
          "float smoothStep( float t, float step, float smooth) {\r",
          "    t = (t-step) / smooth;\r",
          "    t=  t * t * t * (t * (t * 6 - 15) + 10);    \r",
          "    return clamp(t,0,1);\r",
          "}*/\r",
          "\r",
          "matrix rotationMatrix(float3 axis, float angle)\r",
          "{\r",
          "    axis = normalize(axis);\r",
          "    float s = sin(angle);\r",
          "    float c = cos(angle);\r",
          "    float oc = 1.0 - c;\r",
          "    \r",
          "    return matrix(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,\r",
          "                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,\r",
          "                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,\r",
          "                0.0,                                0.0,                                0.0,                                1.0);\r",
          "}\r",
          "\r",
          "\r",
          "float withinRegion(float u, float umin, float umax, float blend) \r",
          "{\r",
          "    float lower = smoothstep(umin, umin+blend,  u);\r",
          "    float upper = 1-smoothstep(umax, umax+blend,u);\r",
          "    return lower*upper;\r",
          "}\r",
          "\r",
          "\r",
          "float3 posFromU(float u, float ribbonIndex)\r",
          "{\r",
          "    float3 pos= float3(0,0,0);\r",
          "    \r",
          "    float ribbonRegion = withinRegion(u, StraightRegion.x, StraightRegion.y, StraightRegion.z);\r",
          "    pos.x = StraightSpacing * ribbonIndex * ribbonRegion;\r",
          "    pos += (u-StraightOffset) * StraightDirection * ribbonRegion;\r",
          "    \r",
          "    \r",
          "    float sinRegion = withinRegion(u, SinRegion.x, SinRegion.y, SinRegion.z);\r",
          "    pos+= sinRegion * sin(u * PeriodA + PhaseA + ribbonIndex * SinSplit.x) * AmplitudeA;\r",
          "    pos+= sinRegion * sin(u * PeriodB + PhaseB + ribbonIndex * SinSplit.y) * AmplitudeB;\r",
          "    return pos;\r",
          "    \r",
          "}\r",
          "\r",
          "[maxvertexcount(3)]\r",
          "void GeometryMain(triangle Vertex input[3], inout TriangleStream<Vertex> outputStream)\r",
          "{\r",
          "    \r",
          "    for (int i = 0; i < 3; i++)\r",
          "\t{\r",
          "        Vertex vertex = input[i];\r",
          "        float4 p = vertex.pos;\r",
          "\r",
          "        float ribbonIndex = round(p.x);\r",
          "        p.y+=Shift + ribbonIndex * RibbonShift;\r",
          "        float u = p.y;\r",
          "\t\r",
          "        float3 pU = posFromU(u, ribbonIndex);\r",
          "\r",
          "        float3 pU1 = posFromU(u + 0.01, ribbonIndex);\r",
          "        float3 axis = pU1 - pU;\r",
          "        float3 orto= normalize(cross( float3(0,0,-1), axis));\r",
          "        //axis= float3(0,1,0);\r",
          "        float edgeLength = (p.x - round(p.x)) * RibbonWidth;\r",
          "        //float3 vEdge = float3(edgeLength,0,0);\r",
          "        float3 vEdge = orto * edgeLength;\r",
          "        float edgeFlip = edgeLength <0 ? -1: 1;\r",
          "\r",
          "        float spinWeight = withinRegion(u, SpinRegion.x, SpinRegion.y, SpinRegion.z);\r",
          "        float angle = (u + Spin.y) / Spin.x + Spin.z* ribbonIndex;\r",
          "        float4 vEdgeRotated = mul(rotationMatrix(axis, angle * spinWeight ) ,float4(vEdge.xyz,0) );\r",
          "        \r",
          "        float3 vNormal = cross(axis,vEdgeRotated) * edgeFlip;\r",
          "        \r",
          "        \r",
          "        float3 pEdge = pU + vEdgeRotated;\r",
          "        \r",
          "        float textureSplit = 150;\r",
          "        vertex.texCoord.y+= ribbonIndex * textureSplit;\r",
          "\r",
          "        vertex.pos.xyz = pEdge;\r",
          "        vertex.normal = vNormal;        \r",
          "        outputStream.Append(vertex);\r",
          "    }\r",
          "    \r",
          "    outputStream.RestartStrip();\r",
          "};\r",
          "\r",
          "\r",
          "GeometryShader pGSComp = CompileShader(gs_5_0, GeometryMain());\r",
          "GeometryShader pGSwSO = ConstructGSWithSO(pGSComp, \"POSITION; NORMAL.xyz; COLOR; TEXCOORD0.xy; TANGENT0.xyz; BINORMAL0.xyz\", NULL, NULL, NULL, 0);\r",
          "\r",
          "\r",
          "technique11 Render\r",
          "{\r",
          "    pass \r",
          "    {\r",
          "        SetVertexShader(CompileShader(vs_5_0, VertexMain()));\r",
          "        SetGeometryShader(pGSwSO);\r",
          "        SetPixelShader(NULL);\r",
          "    }\r",
          "}\r",
          "\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scene",
      "MetaInstanceID": "411bb86a-055c-48f0-ae73-5f0406b97284",
      "DefaultValue": {
        "Type": "Scene",
        "Value": "Framefield.Core.Scene"
      },
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Shift",
      "MetaInstanceID": "57d4f536-3727-4ea4-98f1-a23ec0061616",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StraightRegion.Start",
      "MetaInstanceID": "0ba7d483-8876-40d8-a78d-8d17e7dffe93",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StraightRegion.End",
      "MetaInstanceID": "4c73fa68-4f16-40da-afdd-f310e27e43c3",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StraightRegion.Blend",
      "MetaInstanceID": "0afaf52f-068a-4966-9f33-f35a6c338ffd",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RibbonWidth",
      "MetaInstanceID": "98507e02-7c94-420e-b54a-ea1935442861",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StraightSpacing",
      "MetaInstanceID": "9db16303-3dbb-44ea-878d-94b5b51340d9",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SpinRegion.Start",
      "MetaInstanceID": "ccccada3-a957-4ab1-ae3d-096a2d97dd14",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SpinRegion.End",
      "MetaInstanceID": "a3899bc7-4c15-469e-bbc5-747a61ca8186",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SpinRegion.Blend",
      "MetaInstanceID": "e59bf57f-3868-4d1e-9b7b-f3b4f1c0b116",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Spin.Period",
      "MetaInstanceID": "edf02442-0c7c-48fa-9825-c3449cee7b47",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Spin.Phase",
      "MetaInstanceID": "1b3789a6-4de4-41b9-aa75-ab20044674b4",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Spin.RibbonOffset",
      "MetaInstanceID": "1ebab5af-8685-4aa9-8802-81ba461bded6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RibbonShift",
      "MetaInstanceID": "712adcdf-d3dc-40b0-9d13-758c421f5add",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SinRegion.Start",
      "MetaInstanceID": "5dff0702-9074-4195-a1cc-8c407c37cd41",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SinRegion.End",
      "MetaInstanceID": "5a04bcae-240d-42ab-8189-d9a0d46bf91d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SinRegion.Blend",
      "MetaInstanceID": "be7d77cd-2a6c-42db-9097-929443754f78",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "PeriodA.X",
      "MetaInstanceID": "830df1f3-ad0b-4ccf-80f8-feb16432a1c7",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "PeriodA.Y",
      "MetaInstanceID": "0d5ad523-b38a-44db-bcf3-1811b35e0ffc",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "PeriodA.Z",
      "MetaInstanceID": "082eec01-5e6c-4f13-b826-9feaea765158",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "AmplitudeA.X",
      "MetaInstanceID": "9400f934-d973-4327-988d-c6f5df3aaad4",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "AmplitudeA.Y",
      "MetaInstanceID": "21a9ce2f-c12e-4b72-aefd-73158f4ab3d0",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "AmplitudeA.Z",
      "MetaInstanceID": "4ed19349-ec9e-4e1e-a1fc-6b84aac6e839",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "PhaseA.X",
      "MetaInstanceID": "995ae8e8-90c4-4631-b454-914fa26f3282",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "PhaseA.Y",
      "MetaInstanceID": "59282c7f-8dcd-4b2b-a433-bfa2cf3956ae",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "PhaseA.Z",
      "MetaInstanceID": "8609bcab-91ad-48ec-a92b-214697069dd0",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "PeriodB.X",
      "MetaInstanceID": "03543f89-0a2b-4332-8369-b84984a242c2",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "PeriodB.Y",
      "MetaInstanceID": "fedd9ebe-4df1-49ba-b57f-f39570751e2d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "PeriodB.Z",
      "MetaInstanceID": "264b1e09-26bd-469b-ba81-c9e9f0f6e246",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "AmplitudeB.X",
      "MetaInstanceID": "020b97b4-cb52-4399-bed1-101e346dd7d0",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "AmplitudeB.Y",
      "MetaInstanceID": "3b729a52-8265-436e-a028-04b287c7af93",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "AmplitudeB.Z",
      "MetaInstanceID": "d8e5b43b-f9b3-44d3-b9c1-0f5605974ca4",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "PhaseB.X",
      "MetaInstanceID": "9bd08b04-0e3a-483c-beda-29b97c9456c7",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "PhaseB.Y",
      "MetaInstanceID": "fbbdf5ed-0aac-493d-84fb-4f97136e6eec",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "PhaseB.Z",
      "MetaInstanceID": "da4043bb-d727-4c04-9ccd-4b375cb9f1aa",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CircleRegion.Start",
      "MetaInstanceID": "e1e23ed9-5bfd-40b9-88f6-d2139d37c5a9",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CircleRegion.End",
      "MetaInstanceID": "ecfabdb1-60c0-42b4-bc2b-98438b254f7b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CircleRegion.Blend",
      "MetaInstanceID": "afb4ed6c-78b5-4404-b571-1f8565c7cea2",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CircleRadius",
      "MetaInstanceID": "68ce2700-d21f-4c5b-b3fe-ac64f61fd099",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CircleCircumfence",
      "MetaInstanceID": "3a16e8a2-b1a4-46df-9bf9-9df500aa22a9",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CircleSpin",
      "MetaInstanceID": "2b5f98ea-32b3-4641-97ef-5528b0c81ab8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StraightOffset",
      "MetaInstanceID": "935eacf9-015f-4247-afdc-26262f52baa6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StraightDirection.X",
      "MetaInstanceID": "c1417f6c-3be6-407c-a02a-d88de2b8ec59",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StraightDirection.Y",
      "MetaInstanceID": "064204f5-4ab9-4bae-906f-4364f4821cff",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StraightDirection.Z",
      "MetaInstanceID": "88f8a93e-dda8-49a6-9193-320c97b86b2f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SinSplit.A",
      "MetaInstanceID": "4fc3d89f-467d-4661-8591-eb9805877362",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SinSplit.B",
      "MetaInstanceID": "81400883-690a-49e2-8685-81719eda3963",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Scene",
      "MetaInstanceID": "6b184ec6-832a-4523-a503-2ff112d3688f",
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "4b7bb107-5b77-44c0-8630-70d9e5274a2b",
      "MetaID": "e4a7cffe-2f87-4754-82fb-414a59eff411",
      "Name": "SplineDistort (3)Func",
      "Version": "e4400f30-32d4-4477-a6ca-48a6736d2534",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "using Framefield.Core.OperatorPartTraits;",
        "using Framefield.Core.Rendering;",
        "using Buffer = SharpDX.Direct3D11.Buffer;",
        "using SharpDX.Direct3D;",
        "",
        "namespace Framefield.Core.IDe4a7cffe_2f87_4754_82fb_414a59eff411",
        "{",
        "    public class Class_SplineDistort__3_ : FXSourceCodeFunction, IFXSceneSourceCode, IMeshSupplier",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Scene = 1,",
        "            Shift = 2,",
        "            StraightRegionStart = 3,",
        "            StraightRegionEnd = 4,",
        "            StraightRegionBlend = 5,",
        "            RibbonWidth = 6,",
        "            StraightSpacing = 7,",
        "            SpinRegionStart = 8,",
        "            SpinRegionEnd = 9,",
        "            SpinRegionBlend = 10,",
        "            SpinPeriod = 11,",
        "            SpinPhase = 12,",
        "            SpinRibbonOffset = 13,",
        "            RibbonShift = 14,",
        "            SinRegionStart = 15,",
        "            SinRegionEnd = 16,",
        "            SinRegionBlend = 17,",
        "            PeriodAX = 18,",
        "            PeriodAY = 19,",
        "            PeriodAZ = 20,",
        "            AmplitudeAX = 21,",
        "            AmplitudeAY = 22,",
        "            AmplitudeAZ = 23,",
        "            PhaseAX = 24,",
        "            PhaseAY = 25,",
        "            PhaseAZ = 26,",
        "            PeriodBX = 27,",
        "            PeriodBY = 28,",
        "            PeriodBZ = 29,",
        "            AmplitudeBX = 30,",
        "            AmplitudeBY = 31,",
        "            AmplitudeBZ = 32,",
        "            PhaseBX = 33,",
        "            PhaseBY = 34,",
        "            PhaseBZ = 35,",
        "            CircleRegionStart = 36,",
        "            CircleRegionEnd = 37,",
        "            CircleRegionBlend = 38,",
        "            CircleRadius = 39,",
        "            CircleCircumfence = 40,",
        "            CircleSpin = 41,",
        "            StraightOffset = 42,",
        "            StraightDirectionX = 43,",
        "            StraightDirectionY = 44,",
        "            StraightDirectionZ = 45,",
        "            SinSplitA = 46,",
        "            SinSplitB = 47",
        "        }",
        "        //<<< _inputids",
        "",
        "        public Class_SplineDistort__3_()",
        "        {",
        "            _meshCollector = new MeshCollector(this);",
        "        }",
        "",
        "        public override void Dispose() ",
        "        {",
        "            Utilities.DisposeObj(ref _mesh);",
        "            base.Dispose();",
        "        }",
        "",
        "        public void AddMeshesTo(ICollection<Mesh> meshes)",
        "        {",
        "            UpdateMesh(new OperatorPartContext(), OperatorPart.Connections);",
        "            if (_mesh != null)",
        "                meshes.Add(_mesh);",
        "        }",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx)",
        "        {",
        "            try",
        "            {",
        "                UpdateMesh(context, inputs);",
        "",
        "                if (_mesh.Vertices != null)",
        "                {",
        "                    // render stream output to screen or whatever target is set",
        "                    context.Renderer.SetupEffect(context);",
        "                    context.Renderer.Render(_mesh, context);",
        "                }",
        "            }",
        "            catch (Exception exception)",
        "            {",
        "                Logger.Error(this, \"Load Effect error: {0}\", exception.Message);",
        "            }",
        "",
        "            return context;",
        "        }",
        "",
        "        bool _firstEval = true;",
        "        private void UpdateMesh(OperatorPartContext context, List<OperatorPart> inputs)",
        "        {",
        "            if (_firstEval)",
        "            {",
        "                for (int i = 0; i < NumCodes(); ++i)",
        "                    Compile(i);",
        "                _firstEval = false;",
        "                Changed = true;",
        "            }",
        "",
        "            if (!Changed && _mesh.Vertices != null)",
        "                return;",
        "",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Scene = inputs[(int)InputId.Scene];",
        "            var Shift = inputs[(int)InputId.Shift].Eval(context).Value;",
        "            var StraightRegionStart = inputs[(int)InputId.StraightRegionStart].Eval(context).Value;",
        "            var StraightRegionEnd = inputs[(int)InputId.StraightRegionEnd].Eval(context).Value;",
        "            var StraightRegionBlend = inputs[(int)InputId.StraightRegionBlend].Eval(context).Value;",
        "            var StraightRegion = new Vector3(StraightRegionStart, StraightRegionEnd, StraightRegionBlend);",
        "            var RibbonWidth = inputs[(int)InputId.RibbonWidth].Eval(context).Value;",
        "            var StraightSpacing = inputs[(int)InputId.StraightSpacing].Eval(context).Value;",
        "            var SpinRegionStart = inputs[(int)InputId.SpinRegionStart].Eval(context).Value;",
        "            var SpinRegionEnd = inputs[(int)InputId.SpinRegionEnd].Eval(context).Value;",
        "            var SpinRegionBlend = inputs[(int)InputId.SpinRegionBlend].Eval(context).Value;",
        "            var SpinRegion = new Vector3(SpinRegionStart, SpinRegionEnd, SpinRegionBlend);",
        "            var SpinPeriod = inputs[(int)InputId.SpinPeriod].Eval(context).Value;",
        "            var SpinPhase = inputs[(int)InputId.SpinPhase].Eval(context).Value;",
        "            var SpinRibbonOffset = inputs[(int)InputId.SpinRibbonOffset].Eval(context).Value;",
        "            var Spin = new Vector3(SpinPeriod, SpinPhase, SpinRibbonOffset);",
        "            var RibbonShift = inputs[(int)InputId.RibbonShift].Eval(context).Value;",
        "            var SinRegionStart = inputs[(int)InputId.SinRegionStart].Eval(context).Value;",
        "            var SinRegionEnd = inputs[(int)InputId.SinRegionEnd].Eval(context).Value;",
        "            var SinRegionBlend = inputs[(int)InputId.SinRegionBlend].Eval(context).Value;",
        "            var SinRegion = new Vector3(SinRegionStart, SinRegionEnd, SinRegionBlend);",
        "            var PeriodAX = inputs[(int)InputId.PeriodAX].Eval(context).Value;",
        "            var PeriodAY = inputs[(int)InputId.PeriodAY].Eval(context).Value;",
        "            var PeriodAZ = inputs[(int)InputId.PeriodAZ].Eval(context).Value;",
        "            var PeriodA = new Vector3(PeriodAX, PeriodAY, PeriodAZ);",
        "            var AmplitudeAX = inputs[(int)InputId.AmplitudeAX].Eval(context).Value;",
        "            var AmplitudeAY = inputs[(int)InputId.AmplitudeAY].Eval(context).Value;",
        "            var AmplitudeAZ = inputs[(int)InputId.AmplitudeAZ].Eval(context).Value;",
        "            var AmplitudeA = new Vector3(AmplitudeAX, AmplitudeAY, AmplitudeAZ);",
        "            var PhaseAX = inputs[(int)InputId.PhaseAX].Eval(context).Value;",
        "            var PhaseAY = inputs[(int)InputId.PhaseAY].Eval(context).Value;",
        "            var PhaseAZ = inputs[(int)InputId.PhaseAZ].Eval(context).Value;",
        "            var PhaseA = new Vector3(PhaseAX, PhaseAY, PhaseAZ);",
        "            var PeriodBX = inputs[(int)InputId.PeriodBX].Eval(context).Value;",
        "            var PeriodBY = inputs[(int)InputId.PeriodBY].Eval(context).Value;",
        "            var PeriodBZ = inputs[(int)InputId.PeriodBZ].Eval(context).Value;",
        "            var PeriodB = new Vector3(PeriodBX, PeriodBY, PeriodBZ);",
        "            var AmplitudeBX = inputs[(int)InputId.AmplitudeBX].Eval(context).Value;",
        "            var AmplitudeBY = inputs[(int)InputId.AmplitudeBY].Eval(context).Value;",
        "            var AmplitudeBZ = inputs[(int)InputId.AmplitudeBZ].Eval(context).Value;",
        "            var AmplitudeB = new Vector3(AmplitudeBX, AmplitudeBY, AmplitudeBZ);",
        "            var PhaseBX = inputs[(int)InputId.PhaseBX].Eval(context).Value;",
        "            var PhaseBY = inputs[(int)InputId.PhaseBY].Eval(context).Value;",
        "            var PhaseBZ = inputs[(int)InputId.PhaseBZ].Eval(context).Value;",
        "            var PhaseB = new Vector3(PhaseBX, PhaseBY, PhaseBZ);",
        "            var CircleRegionStart = inputs[(int)InputId.CircleRegionStart].Eval(context).Value;",
        "            var CircleRegionEnd = inputs[(int)InputId.CircleRegionEnd].Eval(context).Value;",
        "            var CircleRegionBlend = inputs[(int)InputId.CircleRegionBlend].Eval(context).Value;",
        "            var CircleRegion = new Vector3(CircleRegionStart, CircleRegionEnd, CircleRegionBlend);",
        "            var CircleRadius = inputs[(int)InputId.CircleRadius].Eval(context).Value;",
        "            var CircleCircumfence = inputs[(int)InputId.CircleCircumfence].Eval(context).Value;",
        "            var CircleSpin = inputs[(int)InputId.CircleSpin].Eval(context).Value;",
        "            var StraightOffset = inputs[(int)InputId.StraightOffset].Eval(context).Value;",
        "            var StraightDirectionX = inputs[(int)InputId.StraightDirectionX].Eval(context).Value;",
        "            var StraightDirectionY = inputs[(int)InputId.StraightDirectionY].Eval(context).Value;",
        "            var StraightDirectionZ = inputs[(int)InputId.StraightDirectionZ].Eval(context).Value;",
        "            var StraightDirection = new Vector3(StraightDirectionX, StraightDirectionY, StraightDirectionZ);",
        "            var SinSplitA = inputs[(int)InputId.SinSplitA].Eval(context).Value;",
        "            var SinSplitB = inputs[(int)InputId.SinSplitB].Eval(context).Value;",
        "            var SinSplit = new Vector2(SinSplitA, SinSplitB);",
        "            //<<< _params",
        "",
        "            if (Scene.Func.Changed || _mesh.Vertices == null)",
        "            {",
        "                //Logger.Info(this, \"collect meshes\");",
        "                _meshCollector.Collect(Scene);",
        "                Scene.Func.Changed = false;",
        "            }",
        "",
        "            var inputMesh = _meshCollector.FirstMeshOrDefault;",
        "            if (inputMesh == null)",
        "                return;",
        "",
        "            _mesh.AttributesSize = inputMesh.AttributesSize;",
        "            _mesh.NumTriangles = inputMesh.NumTriangles;",
        "            _mesh.InputElements = inputMesh.InputElements;",
        "            if (_mesh.Vertices == null || _mesh.Vertices.Description.SizeInBytes != inputMesh.Vertices.Description.SizeInBytes)",
        "            {",
        "                if (_mesh.Vertices != null)",
        "                    _mesh.Vertices.Dispose();",
        "",
        "                _mesh.Vertices = new Buffer(D3DDevice.Device, new BufferDescription()",
        "                                                                    {",
        "                                                                        BindFlags = BindFlags.StreamOutput | BindFlags.VertexBuffer,",
        "                                                                        CpuAccessFlags = CpuAccessFlags.None,",
        "                                                                        OptionFlags = ResourceOptionFlags.None,",
        "                                                                        SizeInBytes = _mesh.NumTriangles*inputMesh.AttributesSize*3,",
        "                                                                        Usage = ResourceUsage.Default",
        "                                                                    });",
        "            }",
        "            //var noiseTextureView = new ShaderResourceView(context.D3DDevice, RGBANoise);",
        "            //_effect.GetVariableByName(\"RGBANoise\").AsShaderResource().SetResource(noiseTextureView);",
        "            _usedViewport= context.Viewport;",
        "            ",
        "            //>>> _setup",
        "            {",
        "                _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                _effect.GetVariableByName(\"Shift\").AsScalar().Set(Shift);",
        "                _effect.GetVariableByName(\"StraightRegion\").AsVector().Set(new Vector3(StraightRegionStart, StraightRegionEnd, StraightRegionBlend));",
        "                _effect.GetVariableByName(\"RibbonWidth\").AsScalar().Set(RibbonWidth);",
        "                _effect.GetVariableByName(\"StraightSpacing\").AsScalar().Set(StraightSpacing);",
        "                _effect.GetVariableByName(\"SpinRegion\").AsVector().Set(new Vector3(SpinRegionStart, SpinRegionEnd, SpinRegionBlend));",
        "                _effect.GetVariableByName(\"Spin\").AsVector().Set(new Vector3(SpinPeriod, SpinPhase, SpinRibbonOffset));",
        "                _effect.GetVariableByName(\"RibbonShift\").AsScalar().Set(RibbonShift);",
        "                _effect.GetVariableByName(\"SinRegion\").AsVector().Set(new Vector3(SinRegionStart, SinRegionEnd, SinRegionBlend));",
        "                _effect.GetVariableByName(\"PeriodA\").AsVector().Set(new Vector3(PeriodAX, PeriodAY, PeriodAZ));",
        "                _effect.GetVariableByName(\"AmplitudeA\").AsVector().Set(new Vector3(AmplitudeAX, AmplitudeAY, AmplitudeAZ));",
        "                _effect.GetVariableByName(\"PhaseA\").AsVector().Set(new Vector3(PhaseAX, PhaseAY, PhaseAZ));",
        "                _effect.GetVariableByName(\"PeriodB\").AsVector().Set(new Vector3(PeriodBX, PeriodBY, PeriodBZ));",
        "                _effect.GetVariableByName(\"AmplitudeB\").AsVector().Set(new Vector3(AmplitudeBX, AmplitudeBY, AmplitudeBZ));",
        "                _effect.GetVariableByName(\"PhaseB\").AsVector().Set(new Vector3(PhaseBX, PhaseBY, PhaseBZ));",
        "                _effect.GetVariableByName(\"CircleRegion\").AsVector().Set(new Vector3(CircleRegionStart, CircleRegionEnd, CircleRegionBlend));",
        "                _effect.GetVariableByName(\"CircleRadius\").AsScalar().Set(CircleRadius);",
        "                _effect.GetVariableByName(\"CircleCircumfence\").AsScalar().Set(CircleCircumfence);",
        "                _effect.GetVariableByName(\"CircleSpin\").AsScalar().Set(CircleSpin);",
        "                _effect.GetVariableByName(\"StraightOffset\").AsScalar().Set(StraightOffset);",
        "                _effect.GetVariableByName(\"StraightDirection\").AsVector().Set(new Vector3(StraightDirectionX, StraightDirectionY, StraightDirectionZ));",
        "                _effect.GetVariableByName(\"SinSplit\").AsVector().Set(new Vector2(SinSplitA, SinSplitB));",
        "            //<<< _setup",
        "            }",
        "",
        "            context.D3DDevice.ImmediateContext.StreamOutput.SetTargets(new [] { new StreamOutputBufferBinding(_mesh.Vertices, 0) });",
        "            context.D3DDevice.ImmediateContext.OutputMerger.DepthStencilState = new DepthStencilState(context.D3DDevice,",
        "                                                                                                        new DepthStencilStateDescription()",
        "                                                                                                            {",
        "                                                                                                                IsDepthEnabled = false,",
        "                                                                                                                IsStencilEnabled = false",
        "                                                                                                            });",
        "            context.D3DDevice.ImmediateContext.InputAssembler.InputLayout = context.InputLayout;",
        "            context.D3DDevice.ImmediateContext.InputAssembler.PrimitiveTopology = PrimitiveTopology.TriangleList;",
        "            context.D3DDevice.ImmediateContext.InputAssembler.SetVertexBuffers(0, new VertexBufferBinding(inputMesh.Vertices, inputMesh.AttributesSize, 0));",
        "            var technique = _effect.GetTechniqueByIndex(0);",
        "            technique.GetPassByIndex(0).Apply(context.D3DDevice.ImmediateContext);",
        "            context.D3DDevice.ImmediateContext.Draw(_mesh.NumTriangles*3, 0);",
        "            context.D3DDevice.ImmediateContext.StreamOutput.SetTargets(new [] { new StreamOutputBufferBinding(null, 0) });",
        "",
        "            Changed = false;",
        "        }",
        "        ",
        "        private SharpDX.ViewportF _usedViewport;",
        "",
        "        private Mesh _mesh = new Mesh();",
        "        private MeshCollector _meshCollector;",
        "    }",
        "}",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6b184ec6-832a-4523-a503-2ff112d3688f"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c0d7cc53-0040-4a1d-9785-dafe85a56830",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "411bb86a-055c-48f0-ae73-5f0406b97284",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "57d4f536-3727-4ea4-98f1-a23ec0061616",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0ba7d483-8876-40d8-a78d-8d17e7dffe93",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4c73fa68-4f16-40da-afdd-f310e27e43c3",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0afaf52f-068a-4966-9f33-f35a6c338ffd",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "98507e02-7c94-420e-b54a-ea1935442861",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9db16303-3dbb-44ea-878d-94b5b51340d9",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ccccada3-a957-4ab1-ae3d-096a2d97dd14",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a3899bc7-4c15-469e-bbc5-747a61ca8186",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e59bf57f-3868-4d1e-9b7b-f3b4f1c0b116",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "edf02442-0c7c-48fa-9825-c3449cee7b47",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "1b3789a6-4de4-41b9-aa75-ab20044674b4",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "1ebab5af-8685-4aa9-8802-81ba461bded6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "712adcdf-d3dc-40b0-9d13-758c421f5add",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5dff0702-9074-4195-a1cc-8c407c37cd41",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5a04bcae-240d-42ab-8189-d9a0d46bf91d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "be7d77cd-2a6c-42db-9097-929443754f78",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "830df1f3-ad0b-4ccf-80f8-feb16432a1c7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0d5ad523-b38a-44db-bcf3-1811b35e0ffc",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "082eec01-5e6c-4f13-b826-9feaea765158",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9400f934-d973-4327-988d-c6f5df3aaad4",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "21a9ce2f-c12e-4b72-aefd-73158f4ab3d0",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4ed19349-ec9e-4e1e-a1fc-6b84aac6e839",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "995ae8e8-90c4-4631-b454-914fa26f3282",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "59282c7f-8dcd-4b2b-a433-bfa2cf3956ae",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8609bcab-91ad-48ec-a92b-214697069dd0",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "03543f89-0a2b-4332-8369-b84984a242c2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "fedd9ebe-4df1-49ba-b57f-f39570751e2d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "264b1e09-26bd-469b-ba81-c9e9f0f6e246",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "020b97b4-cb52-4399-bed1-101e346dd7d0",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "3b729a52-8265-436e-a028-04b287c7af93",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d8e5b43b-f9b3-44d3-b9c1-0f5605974ca4",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9bd08b04-0e3a-483c-beda-29b97c9456c7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "fbbdf5ed-0aac-493d-84fb-4f97136e6eec",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "da4043bb-d727-4c04-9ccd-4b375cb9f1aa",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e1e23ed9-5bfd-40b9-88f6-d2139d37c5a9",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ecfabdb1-60c0-42b4-bc2b-98438b254f7b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "afb4ed6c-78b5-4404-b571-1f8565c7cea2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "68ce2700-d21f-4c5b-b3fe-ac64f61fd099",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "3a16e8a2-b1a4-46df-9bf9-9df500aa22a9",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2b5f98ea-32b3-4641-97ef-5528b0c81ab8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "935eacf9-015f-4247-afdc-26262f52baa6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c1417f6c-3be6-407c-a02a-d88de2b8ec59",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "064204f5-4ab9-4bae-906f-4364f4821cff",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "88f8a93e-dda8-49a6-9193-320c97b86b2f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4fc3d89f-467d-4661-8591-eb9805877362",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "81400883-690a-49e2-8685-81719eda3963",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4b7bb107-5b77-44c0-8630-70d9e5274a2b"
    }
  ]
}