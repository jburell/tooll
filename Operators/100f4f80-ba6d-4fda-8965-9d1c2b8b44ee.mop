{
  "Name": "RasterReplace",
  "_id": "100f4f80-ba6d-4fda-8965-9d1c2b8b44ee",
  "Namespace": "projects.igravity.shaders",
  "Description": "This is a local effect operator for \"We Follow\" that combines an image texture with a diagonal grid-element atlas to achieve an effect like... http://www.pinterest.com/pin/425730970999397167/",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "17d7b868-3a49-49ae-9c79-8e65e48f4741",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D Displacement;",
          "Texture2D Image;",
          "float Radius;",
          "float2 Size;",
          "float SampleCount;",
          "float2 Shift;",
          "//<<< _parameters\r",
          " \r",
          "//>>> setup\r",
          "SamplerState samLinear\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_LINEAR;\r",
          "    AddressU = Wrap;\r",
          "    AddressV = Wrap;\r",
          "};\r",
          "//<<< setup\r",
          "\r",
          "//>>> declarations\r",
          "struct VS_IN\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "    float2 texCoord : TEXCOORD;\r",
          "};\r",
          "\r",
          "struct PS_IN\r",
          "{\r",
          "    float4 pos : SV_POSITION;\r",
          "    float2 texCoord: TEXCOORD0;\t    \r",
          "    float3 worldTViewPos: TEXCOORD1;\r",
          "    float3 worldTViewDir: TEXCOORD2;\r",
          "};\r",
          "//<<< declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    //float2 p=round(input.texCoord * Size)/Size;\r",
          "    float2 p = input.texCoord + Shift;\r",
          "    \r",
          "    \r",
          "    //float2 tile = float2( p.x % (1.0/Size.x) * Size.x  , 1);\r",
          "    float2 tileFrag = p % (1.0/Size) * Size;\r",
          "    if(tileFrag.x < 0) tileFrag.x += 1/Size.x;\r",
          "    if(tileFrag.y < 0) tileFrag.y += 1/Size.y;\r",
          "    \r",
          "    float2 tile= p - tileFrag/Size;\r",
          "\r",
          "    float4 c= Displacement.Sample(samLinear, tile); \r",
          "    float gray = (c.r+c.g+c.b)/3;\r",
          "\r",
          "    return c;\r",
          "    //return float4( tile.x, tile.y,0,1);\r",
          "    \r",
          "    \r",
          "    //float tile=0.1;\r",
          "    //if( gray < 0.4) {\r",
          "    //    tile=1;\r",
          "    //}\r",
          "    //else if (gray < 0.6) {\r",
          "    //    tile = ((p*Size).x + (p*Size).y % 4)  ;\r",
          "    //}\r",
          "\r",
          "    //return Image.Sample( samLinear, p+tile/8);\r",
          "    \r",
          "\r",
          "    //float a = t0.a + t1.a - t0.a * t1.a;\r",
          "    //float3 rgb=  t0.rgb * t1.a * t1.rgb;   \r",
          "    \r",
          "    //return col1+col2;\r",
          "    \r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Displacement",
      "MetaInstanceID": "f91cd6de-3b1f-4e88-8fe5-905e7492dc6c",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Image",
      "MetaInstanceID": "0f189869-fc7f-42e4-82e9-9014922790da",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Size.X",
      "MetaInstanceID": "b6808f50-d37f-4f12-8526-8e7ec5bf5d3f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Size.Y",
      "MetaInstanceID": "5ce80f43-f1d3-4479-98a8-e5b3ff3df5bd",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Shift.X",
      "MetaInstanceID": "61df68ec-f919-4372-baf8-1bfd85502e5f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Shift.Y",
      "MetaInstanceID": "bbb326c0-ece3-4753-9491-3c0c7cfff837",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "41fdbad1-8d80-4728-9c8f-caee32d54a5d",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "0ad8a805-64aa-40e8-8644-a10fd4d7d9fd",
      "MetaID": "549c04f6-75ca-4e4b-99a9-7b990865d853",
      "Name": "RasterReplaceFunc",
      "Version": "48764767-d8d2-4910-8120-ddbba80965d5",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID549c04f6_75ca_4e4b_99a9_7b990865d853",
        "{",
        "    public class Class_RasterReplace : FXImageFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Displacement = 1,",
        "            Image = 2,",
        "            SizeX = 3,",
        "            SizeY = 4,",
        "            ShiftX = 5,",
        "            ShiftY = 6",
        "        }",
        "        //<<< _inputids",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Displacement = inputs[(int)InputId.Displacement].Eval(context).Image; if (Displacement == null) return context;",
        "            var Image = inputs[(int)InputId.Image].Eval(context).Image; if (Image == null) return context;",
        "            var SizeX = inputs[(int)InputId.SizeX].Eval(context).Value;",
        "            var SizeY = inputs[(int)InputId.SizeY].Eval(context).Value;",
        "            var Size = new Vector2(SizeX, SizeY);",
        "            var ShiftX = inputs[(int)InputId.ShiftX].Eval(context).Value;",
        "            var ShiftY = inputs[(int)InputId.ShiftY].Eval(context).Value;",
        "            var Shift = new Vector2(ShiftX, ShiftY);",
        "            //<<< _params",
        "",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                using (var DisplacementView = new ShaderResourceView(context.D3DDevice, Displacement))",
        "                using (var ImageView = new ShaderResourceView(context.D3DDevice, Image))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Displacement\").AsShaderResource().SetResource(DisplacementView);",
        "                    _effect.GetVariableByName(\"Image\").AsShaderResource().SetResource(ImageView);",
        "                    _effect.GetVariableByName(\"Size\").AsVector().Set(new Vector2(SizeX, SizeY));",
        "                    _effect.GetVariableByName(\"Shift\").AsVector().Set(new Vector2(ShiftX, ShiftY));",
        "                //<<< _setup",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0ad8a805-64aa-40e8-8644-a10fd4d7d9fd",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "41fdbad1-8d80-4728-9c8f-caee32d54a5d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "17d7b868-3a49-49ae-9c79-8e65e48f4741",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0ad8a805-64aa-40e8-8644-a10fd4d7d9fd"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f91cd6de-3b1f-4e88-8fe5-905e7492dc6c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0ad8a805-64aa-40e8-8644-a10fd4d7d9fd"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0f189869-fc7f-42e4-82e9-9014922790da",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0ad8a805-64aa-40e8-8644-a10fd4d7d9fd"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b6808f50-d37f-4f12-8526-8e7ec5bf5d3f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0ad8a805-64aa-40e8-8644-a10fd4d7d9fd"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5ce80f43-f1d3-4479-98a8-e5b3ff3df5bd",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0ad8a805-64aa-40e8-8644-a10fd4d7d9fd"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "61df68ec-f919-4372-baf8-1bfd85502e5f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0ad8a805-64aa-40e8-8644-a10fd4d7d9fd"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "bbb326c0-ece3-4753-9491-3c0c7cfff837",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0ad8a805-64aa-40e8-8644-a10fd4d7d9fd"
    }
  ]
}