{
  "Name": "dof2",
  "_id": "bac4e74e-6908-4452-bbdb-2baf6bd34ee5",
  "Namespace": "lib.image.blur",
  "Description": "",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "d2967d56-35df-47c3-8213-03bf62576d25",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D Image;",
          "float Brightness;",
          "float Contrast;",
          "float Size;",
          "float2 Center;",
          "float NumberofSamples;",
          "float Offset;",
          "//<<< _parameters\r",
          "\r",
          "//>>> setup\r",
          "SamplerState samLinear\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_LINEAR;\r",
          "    AddressU = Clamp;\r",
          "    AddressV = Clamp;\r",
          "};\r",
          "//<<< setup\r",
          "\r",
          "//>>> declarations\r",
          "struct VS_IN\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "    float2 texCoord : TEXCOORD;\r",
          "};\r",
          "\r",
          "struct PS_IN\r",
          "{\r",
          "    float4 pos : SV_POSITION;\r",
          "    float2 texCoord: TEXCOORD0;\t    \r",
          "    float3 worldTViewPos: TEXCOORD1;\r",
          "    float3 worldTViewDir: TEXCOORD2;\r",
          "};\r",
          "//<<< declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "static const int NUMWT = 222;\r",
          "static const float PoissonDisc[222*2] = \r",
          "{\r",
          "-0.7221389f, -0.2349981f,\r",
          "-0.6450169f, -0.08657946f,\r",
          "-0.5946385f, -0.2160851f,\r",
          "-0.7642362f, -0.4029739f,\r",
          "-0.8135399f, -0.1674976f,\r",
          "-0.8213334f, -0.2726217f,\r",
          "-0.6552856f, -0.3696782f,\r",
          "-0.5534582f, -0.3180093f,\r",
          "-0.7545289f, -0.08094383f,\r",
          "-0.9009522f, -0.3552104f,\r",
          "-0.940279f, -0.2577411f,\r",
          "-0.9501851f, -0.1319251f,\r",
          "-0.7869623f, 0.01379909f,\r",
          "-0.903738f, -0.02323047f,\r",
          "-0.6617134f, 0.06216415f,\r",
          "-0.5840392f, -0.005701326f,\r",
          "-0.8948824f, 0.106663f,\r",
          "-0.9826009f, 0.0425628f,\r",
          "-0.7735512f, 0.1252436f,\r",
          "-0.4726707f, -0.1572337f,\r",
          "-0.4746312f, -0.0001852541f,\r",
          "-0.7841474f, 0.2367316f,\r",
          "-0.6114464f, 0.1810336f,\r",
          "-0.9292312f, 0.2374151f,\r",
          "-0.6723174f, 0.2967349f,\r",
          "-0.3970515f, 0.06631126f,\r",
          "-0.3433676f, -0.05506318f,\r",
          "-0.514098f, 0.1283549f,\r",
          "-0.6782358f, -0.4798407f,\r",
          "-0.6032877f, -0.5500194f,\r",
          "-0.4754057f, -0.4309652f,\r",
          "-0.5788718f, -0.4354014f,\r",
          "-0.5016924f, 0.3050331f,\r",
          "-0.412739f, 0.1820673f,\r",
          "-0.180673f, 0.04732266f,\r",
          "-0.2349541f, -0.1341648f,\r",
          "-0.3409364f, -0.2478929f,\r",
          "-0.1487862f, -0.04885372f,\r",
          "-0.2892784f, 0.02959763f,\r",
          "-0.7541821f, 0.4073591f,\r",
          "-0.6022263f, 0.467193f,\r",
          "-0.4634652f, -0.6181632f,\r",
          "-0.4097908f, -0.3426332f,\r",
          "-0.2998768f, -0.508875f,\r",
          "-0.3115641f, -0.3849243f,\r",
          "-0.2232322f, -0.3345297f,\r",
          "-0.1495039f, -0.2653556f,\r",
          "-0.5936491f, 0.3617029f,\r",
          "-0.3992631f, -0.5341831f,\r",
          "-0.4667162f, -0.2601293f,\r",
          "-0.8474916f, -0.4945664f,\r",
          "-0.775716f, -0.5924223f,\r",
          "-0.3481894f, -0.6703531f,\r",
          "-0.2408546f, -0.6482531f,\r",
          "-0.1779798f, -0.4638044f,\r",
          "-0.06008218f, -0.368742f,\r",
          "-0.231671f, 0.1659194f,\r",
          "-0.3285657f, 0.2497011f,\r",
          "0.08908649f, -0.3570597f,\r",
          "0.004722279f, -0.4596557f,\r",
          "0.02085422f, -0.2834704f,\r",
          "-0.06466988f, -0.2048983f,\r",
          "-0.05433286f, -0.5623392f,\r",
          "-0.5912691f, -0.6850015f,\r",
          "-0.7194148f, -0.6891913f,\r",
          "-0.4754449f, 0.4383986f,\r",
          "-0.3480173f, 0.3917386f,\r",
          "-0.166678f, -0.5663946f,\r",
          "-0.2787196f, -0.7551732f,\r",
          "-0.1277772f, -0.7290536f,\r",
          "-0.1918828f, -0.8350177f,\r",
          "-0.02813187f, -0.8703181f,\r",
          "0.04241658f, -0.7823551f,\r",
          "-0.01295197f, -0.6871505f,\r",
          "0.1069066f, -0.6703213f,\r",
          "0.04744059f, -0.5756441f,\r",
          "0.1176784f, -0.4828225f,\r",
          "-0.8431036f, 0.3478692f,\r",
          "0.2086186f, -0.6608312f,\r",
          "0.2138124f, -0.3420919f,\r",
          "0.2580546f, -0.5508043f,\r",
          "0.2897676f, -0.4478604f,\r",
          "-0.05721712f, 0.05230344f,\r",
          "-0.04635067f, -0.06177058f,\r",
          "-0.1073373f, 0.1736941f,\r",
          "-0.6091111f, -0.7883849f,\r",
          "-0.9001583f, 0.4301235f,\r",
          "-0.8285848f, 0.5557993f,\r",
          "-0.7123448f, 0.5947085f,\r",
          "-0.4832799f, 0.5539493f,\r",
          "-0.3159725f, 0.5039535f,\r",
          "-0.599324f, 0.586816f,\r",
          "0.4034407f, -0.5662471f,\r",
          "0.3492602f, -0.6617939f,\r",
          "0.4189905f, -0.4582724f,\r",
          "0.1628975f, -0.23067f,\r",
          "0.1142332f, 0.05450449f,\r",
          "0.08070108f, -0.06991072f,\r",
          "0.05359304f, 0.199795f,\r",
          "0.2761109f, -0.1987586f,\r",
          "0.1790459f, -0.1075632f,\r",
          "0.05068216f, -0.1666252f,\r",
          "0.3576527f, -0.2757356f,\r",
          "0.2615373f, -0.00144356f,\r",
          "-0.9853888f, 0.1518408f,\r",
          "-0.6192073f, 0.7120073f,\r",
          "-0.5172531f, 0.6506175f,\r",
          "-0.4427909f, 0.7783856f,\r",
          "-0.548931f, 0.8197715f,\r",
          "0.2212543f, -0.8036473f,\r",
          "0.1091655f, -0.8588175f,\r",
          "0.4284557f, -0.1771083f,\r",
          "0.4058638f, -0.06016751f,\r",
          "0.2986778f, -0.09553039f,\r",
          "0.5116057f, -0.002767598f,\r",
          "0.5539309f, -0.222138f,\r",
          "0.4564219f, -0.2925912f,\r",
          "0.5050592f, -0.1092537f,\r",
          "0.1540435f, -0.9527217f,\r",
          "0.03456522f, -0.9979506f,\r",
          "0.2591582f, -0.9450604f,\r",
          "0.4110387f, 0.1010664f,\r",
          "0.3014831f, 0.09112559f,\r",
          "0.6049808f, -0.04982753f,\r",
          "0.4090337f, -0.7625754f,\r",
          "0.3903625f, -0.8878905f,\r",
          "-0.09972139f, -0.9547268f,\r",
          "0.6330059f, -0.3106496f,\r",
          "0.6755134f, -0.1972146f,\r",
          "0.5623145f, -0.4013806f,\r",
          "0.4779867f, -0.6672996f,\r",
          "0.5391649f, -0.8277994f,\r",
          "0.2258809f, 0.2500121f,\r",
          "0.3874718f, 0.236962f,\r",
          "0.2040288f, 0.133255f,\r",
          "-0.3521207f, -0.9176182f,\r",
          "-0.3756777f, -0.8033249f,\r",
          "-0.2436233f, -0.9517408f,\r",
          "0.7052015f, -0.03988546f,\r",
          "0.7987552f, -0.1031633f,\r",
          "0.8613266f, -0.1981231f,\r",
          "0.8325032f, -0.3203844f,\r",
          "0.7025108f, -0.3831708f,\r",
          "0.3215697f, 0.3538188f,\r",
          "0.535944f, 0.1787634f,\r",
          "0.5248695f, 0.3059932f,\r",
          "0.412445f, 0.4131352f,\r",
          "-0.06373108f, 0.3123547f,\r",
          "-0.2252896f, 0.3116667f,\r",
          "0.840536f, -0.441753f,\r",
          "0.9498083f, -0.2990178f,\r",
          "0.7298446f, -0.4810172f,\r",
          "0.6722865f, -0.5703459f,\r",
          "0.5574856f, -0.5450321f,\r",
          "0.786458f, -0.5758718f,\r",
          "0.9654529f, -0.05787297f,\r",
          "0.963228f, -0.1922784f,\r",
          "-0.3365173f, 0.7155553f,\r",
          "-0.3589381f, 0.6163105f,\r",
          "-0.4960062f, -0.7623413f,\r",
          "0.6788805f, 0.1380522f,\r",
          "0.6873372f, 0.2794679f,\r",
          "0.7435057f, -0.6679207f,\r",
          "0.5882154f, -0.7193882f,\r",
          "-0.46168f, -0.8859891f,\r",
          "-0.2003942f, 0.8551705f,\r",
          "-0.3462552f, 0.8929975f,\r",
          "-0.2351614f, 0.6896784f,\r",
          "-0.1461054f, 0.7416567f,\r",
          "-0.2088317f, 0.576461f,\r",
          "0.5982891f, 0.05054441f,\r",
          "-0.003655762f, 0.455238f,\r",
          "-0.1082972f, 0.427687f,\r",
          "0.05834707f, 0.3402283f,\r",
          "0.3270587f, 0.506546f,\r",
          "0.4633293f, 0.5253279f,\r",
          "0.5403504f, 0.4089652f,\r",
          "0.3817447f, 0.5962278f,\r",
          "0.2193266f, 0.4080253f,\r",
          "-0.2693261f, 0.957227f,\r",
          "0.7946384f, 0.08725628f,\r",
          "0.8669149f, -0.02263802f,\r",
          "0.4676855f, 0.6482784f,\r",
          "0.632449f, 0.6296481f,\r",
          "0.6519275f, 0.4661911f,\r",
          "0.563587f, 0.5489777f,\r",
          "-0.1115106f, 0.62785f,\r",
          "-0.2903997f, 0.808736f,\r",
          "0.3660468f, 0.7269089f,\r",
          "0.2372203f, 0.614616f,\r",
          "0.4707316f, 0.7677352f,\r",
          "0.1550984f, 0.5145711f,\r",
          "0.8076792f, 0.2003516f,\r",
          "-0.253433f, 0.4243018f,\r",
          "-0.006009313f, 0.5852107f,\r",
          "-0.04449837f, 0.7757778f,\r",
          "-0.1679569f, 0.9673667f,\r",
          "-0.01074364f, 0.896194f,\r",
          "0.125958f, 0.8818254f,\r",
          "0.1068906f, 0.7359828f,\r",
          "0.06511401f, 0.9622355f,\r",
          "0.2288454f, 0.7156832f,\r",
          "0.1284877f, 0.6193908f,\r",
          "0.7211738f, 0.3933714f,\r",
          "0.7080402f, 0.5533854f,\r",
          "0.5695559f, 0.7309306f,\r",
          "0.7957254f, 0.3180491f,\r",
          "0.8297002f, 0.535619f,\r",
          "0.8943982f, 0.3502229f,\r",
          "0.8203685f, 0.4252868f,\r",
          "0.9617386f, 0.2149782f,\r",
          "0.349122f, 0.9041787f,\r",
          "0.7364963f, -0.2828036f,\r",
          "0.2278855f, 0.8400377f,\r",
          "0.6746189f, 0.7311209f,\r",
          "0.9628794f, 0.07376079f,\r",
          "0.1720274f, 0.9715696f,\r",
          "0.00892928f, 0.6885665f,\r",
          "0.7714609f, 0.6355816f,\r",
          "0.4603517f, 0.868766f,\r",
          "0.5541424f, 0.830988f,\r",
          "-0.06947925f, 0.9955862f\r",
          "};\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float2 r = input.texCoord - Center;    \r",
          "    float4 c= float4(0,0,0,0);\r",
          "    float totalWeight = 0;\r",
          "   \r",
          "const float amplification = 5.0;\r",
          "    for (int i = 0; i < NumberofSamples*2; i += 2) \r",
          "    {\r",
          "//        float ir = i/floor(NumberofSamples);\r",
          "//        float weightIndex = (int)(abs(ir*2-1)*1 * (NUMWT-1));\r",
          "//        float weight = lerp(Gauss[weightIndex], Gauss[(int)weightIndex + 1], frac(weightIndex));\r",
          "        float2 samplePos = float2(PoissonDisc[i], PoissonDisc[i + 1])/Size;\r",
          "    \r",
          "//        float f= max(0, (ir - 0.5 + Offset) * 0.01*Size +1);\r",
          "//        float2 p = Center + f * r ;\r",
          "        float4 color = Image.Sample(samLinear, input.texCoord + samplePos);\r",
          "        color=pow(color, amplification);\r",
          "        c += color;\r",
          "        totalWeight += 1;\r",
          "    }\r",
          "\r",
          "    c.rgba = pow(c.rgba/totalWeight, 1.0/amplification);\r",
          "    c.a = c.a;\r",
          "\r",
          "    return c;\r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Image",
      "MetaInstanceID": "78319f4e-6605-4075-9af1-ec5779d8f8bc",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Brightness",
      "MetaInstanceID": "58f8675c-9614-4485-b20d-e77f2b982808",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0.001",
      "Max": "10",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Contrast",
      "MetaInstanceID": "e0d954e3-3022-4789-b85d-2e848d779401",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10",
      "Max": "10",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Size",
      "MetaInstanceID": "873a34b9-c203-44bd-92fb-e0a7b4759659",
      "DefaultValue": {
        "Type": "Float",
        "Value": "10"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "1",
      "Max": "1024",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Center.X",
      "MetaInstanceID": "08da6b9e-cae9-443a-a33e-bda0d6a8fefb",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100",
      "Max": "100",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Center.Y",
      "MetaInstanceID": "f76f2026-6939-4a36-b63b-966e565ab08a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100",
      "Max": "100",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Number of Samples",
      "MetaInstanceID": "5098b0f2-bce3-4085-b87a-d5b271c387f5",
      "DefaultValue": {
        "Type": "Float",
        "Value": "9"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "1",
      "Max": "222",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Offset",
      "MetaInstanceID": "4cc3e96b-5ba5-4abc-af3f-7be1ed13b5c4",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "7fd8e8ee-761b-493b-9657-17abe7a86d0b",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "838f803f-85d1-41a0-b771-a70388910960",
      "MetaID": "1d8941d4-fe5f-44fe-b8bc-1613b41f7811",
      "Name": "dof2Func",
      "Version": "eb33eefa-a42f-4f80-a2d5-3f6eda3db686",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID1d8941d4_fe5f_44fe_b8bc_1613b41f7811",
        "{",
        "    public class Class_dof2 : FXImageFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Image = 1,",
        "            Brightness = 2,",
        "            Contrast = 3,",
        "            Size = 4,",
        "            CenterX = 5,",
        "            CenterY = 6,",
        "            NumberofSamples = 7,",
        "            Offset = 8",
        "        }",
        "        //<<< _inputids",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Image = inputs[(int)InputId.Image].Eval(context).Image; if (Image == null) return context;",
        "            var Brightness = inputs[(int)InputId.Brightness].Eval(context).Value;",
        "            var Contrast = inputs[(int)InputId.Contrast].Eval(context).Value;",
        "            var Size = inputs[(int)InputId.Size].Eval(context).Value;",
        "            var CenterX = inputs[(int)InputId.CenterX].Eval(context).Value;",
        "            var CenterY = inputs[(int)InputId.CenterY].Eval(context).Value;",
        "            var Center = new Vector2(CenterX, CenterY);",
        "            var NumberofSamples = inputs[(int)InputId.NumberofSamples].Eval(context).Value;",
        "            var Offset = inputs[(int)InputId.Offset].Eval(context).Value;",
        "            //<<< _params",
        "",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(1, 1, 1, 0));",
        "",
        "                //>>> _setup",
        "                using (var ImageView = new ShaderResourceView(context.D3DDevice, Image))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Image\").AsShaderResource().SetResource(ImageView);",
        "                    _effect.GetVariableByName(\"Brightness\").AsScalar().Set(Brightness);",
        "                    _effect.GetVariableByName(\"Contrast\").AsScalar().Set(Contrast);",
        "                    _effect.GetVariableByName(\"Size\").AsScalar().Set(Size);",
        "                    _effect.GetVariableByName(\"Center\").AsVector().Set(new Vector2(CenterX, CenterY));",
        "                    _effect.GetVariableByName(\"NumberofSamples\").AsScalar().Set(NumberofSamples);",
        "                    _effect.GetVariableByName(\"Offset\").AsScalar().Set(Offset);",
        "                //<<< _setup",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "838f803f-85d1-41a0-b771-a70388910960",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7fd8e8ee-761b-493b-9657-17abe7a86d0b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d2967d56-35df-47c3-8213-03bf62576d25",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "838f803f-85d1-41a0-b771-a70388910960"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "78319f4e-6605-4075-9af1-ec5779d8f8bc",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "838f803f-85d1-41a0-b771-a70388910960"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "58f8675c-9614-4485-b20d-e77f2b982808",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "838f803f-85d1-41a0-b771-a70388910960"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e0d954e3-3022-4789-b85d-2e848d779401",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "838f803f-85d1-41a0-b771-a70388910960"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "873a34b9-c203-44bd-92fb-e0a7b4759659",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "838f803f-85d1-41a0-b771-a70388910960"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "08da6b9e-cae9-443a-a33e-bda0d6a8fefb",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "838f803f-85d1-41a0-b771-a70388910960"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f76f2026-6939-4a36-b63b-966e565ab08a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "838f803f-85d1-41a0-b771-a70388910960"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5098b0f2-bce3-4085-b87a-d5b271c387f5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "838f803f-85d1-41a0-b771-a70388910960"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4cc3e96b-5ba5-4abc-af3f-7be1ed13b5c4",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "838f803f-85d1-41a0-b771-a70388910960"
    }
  ]
}