{
  "Name": "GrayScottDiffusion1",
  "_id": "94091185-37f0-4a3c-a6c4-5df812bf62d6",
  "Namespace": "projects.feedback.shaders",
  "Description": "",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "452fba8c-1fcf-4a19-a978-5e4365a5c136",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D Image;",
          "float2 Diffusion;",
          "float2 F;",
          "float2 k;",
          "float ResetTrigger;",
          "//<<< _parameters\r",
          " \r",
          "//>>> setup\r",
          "SamplerState samLinear\r",
          "{\r",
          "    Filter = MIN_MAG_LINEAR_MIP_POINT;\r",
          "    //Filter = D3D11_FILTER_MIN_MAG_MIP_POINT;\r",
          "    AddressU = Clamp;\r",
          "    AddressV = Clamp;\r",
          "};\r",
          "//<<< setup\r",
          "\r",
          "//>>> declarations\r",
          "struct VS_IN\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "    float2 texCoord : TEXCOORD;\r",
          "};\r",
          "\r",
          "struct PS_IN\r",
          "{\r",
          "    float4 pos : SV_POSITION;\r",
          "    float2 texCoord: TEXCOORD0;\t    \r",
          "    float3 worldTViewPos: TEXCOORD1;\r",
          "    float3 worldTViewDir: TEXCOORD2;\r",
          "};\r",
          "//<<< declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "// Ported from https://www.shadertoy.com/view/MdVGRh / knighty\r",
          "\r",
          "\r",
          "//const float2 Diffusion = float2(0.08,0.03);\r",
          "//const float F = 0.04;\r",
          "//const float k = 0.06;\r",
          "const float dt = 2;\r",
          "\r",
          "float rand(float2 co){\r",
          "\t// implementation found at: lumina.sourceforge.net/Tutorials/Noise.html\r",
          "\treturn (sin(dot(co.xy ,float2(12.9898,78.233))) * 43758.5453 ) % 1;\r",
          "}\r",
          "\r",
          "// nine point stencil\r",
          "float2 laplacian1(float2 position, float size) {\r",
          "    float2 pixelSize = size / RenderTargetSize.xy;\r",
          "    \r",
          "    float4 P = float4(pixelSize, 0.0, -pixelSize.x);\r",
          "\treturn  \r",
          "\t0.5*    Image.Sample(samLinear,  position - P.xy ).xy // first row\r",
          "\t+       Image.Sample(samLinear,  position - P.zy ).xy\r",
          "\t+  0.5* Image.Sample(samLinear,  position - P.wy ).xy\r",
          "\t+       Image.Sample(samLinear,  position - P.xz ).xy // seond row\r",
          "\t - 6.0* Image.Sample(samLinear,  position        ).xy\r",
          "\t+       Image.Sample(samLinear,  position + P.xz ).xy\r",
          "\t+  0.5* Image.Sample(samLinear,  position + P.wy ).xy  // third row\r",
          "\t+       Image.Sample(samLinear,  position + P.zy ).xy\r",
          "\t+   0.5*Image.Sample(samLinear,  position + P.xy ).xy;\t\r",
          "}\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    //float2 uv = input.pos.xy / RenderTargetSize.xy;\r",
          "    float2 uv = input.texCoord;\r",
          "    //return float4(uv.x, uv.y, 0,1);\r",
          "    \r",
          "    float4 fragColor = float4(0.0,0.0,0.0,1.0);\r",
          "    if(ResetTrigger > 0) {\r",
          "        //float rnd=rand(uv)+(sin(50.*uv.x)+sin(50.*uv.y))*0.;\r",
          "        float rnd = (uv.x * 3.1456 / uv.y * 121.4123) % 1;\r",
          "        if(rnd>0.5) fragColor.x=.1;\r",
          "        else fragColor.y=.7;\r",
          "        return fragColor;\r",
          "    }\r",
          "        \r",
          "    float f1 = F.x  + (uv.x ) * F.y;\r",
          "    float k1 = k.x  + (uv.y ) * k.y;\r",
          "    float4 data = Image.Sample(samLinear, uv);\r",
          "    data = clamp( data, 0.0001,1);\r",
          "    float u = data.x;\r",
          "    float v = data.y;\r",
          "    float2 Duv = (    1 * laplacian1(uv, 1) \r",
          "    //                + 0.5 * laplacian1(uv, 1  ) \r",
          "                 ) *Diffusion;\r",
          "    float du = Duv.x - u*v*v + f1*(1. - u);\r",
          "    float dv = Duv.y + u*v*v - (f1+k1)*v;\r",
          "    fragColor.xy = clamp(float2(u+du*dt, v+dv*dt), 0, 1);\r",
          "\r",
          "    return fragColor;\r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Image",
      "MetaInstanceID": "709ad20d-6733-4910-a388-90163b7af0bd",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Diffusion.X",
      "MetaInstanceID": "64980b0a-b108-4409-a2ec-55ac9c6b1044",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.08"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Diffusion.Y",
      "MetaInstanceID": "e160aac0-c3fc-460b-876f-dbf3e5ea8eb5",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.03"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "F.value",
      "MetaInstanceID": "9e0d954f-8dde-4f08-ba40-a1feea9764b5",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.0001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "k.value",
      "MetaInstanceID": "b7f6c968-273d-411a-b333-96b8c57ad16a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.025"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.0001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "F.dx",
      "MetaInstanceID": "e852c648-7322-4c4c-87ec-9aedcfb296f3",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.05"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "k.dx",
      "MetaInstanceID": "73369c52-842e-417e-a4ac-5d2743fab939",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.05"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ResetTrigger",
      "MetaInstanceID": "399cf25f-f992-491e-a456-d8360d2b3b7e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "f777acf4-9ea4-4395-9547-3a6eb8a262a1",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "49bbc5e1-a34e-4d93-8886-c0c92b6fc31c",
      "MetaID": "08a150e6-2d6d-4a5d-b203-ea9e417e71d0",
      "Name": "GrayScottDiffusion1Func",
      "Version": "77ede1cc-6407-42c3-9cfb-ddc270f0c606",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID08a150e6_2d6d_4a5d_b203_ea9e417e71d0",
        "{",
        "    public class Class_GrayScottDiffusion1 : FXImageFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Image = 1,",
        "            DiffusionX = 2,",
        "            DiffusionY = 3,",
        "            FValue = 4,",
        "            kValue = 5,",
        "            FDx = 6,",
        "            kDx = 7,",
        "            ResetTrigger = 8",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx)",
        "        {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Image = inputs[(int)InputId.Image].Eval(context).Image; // Needs to be checked for null!",
        "            var DiffusionX = inputs[(int)InputId.DiffusionX].Eval(context).Value;",
        "            var DiffusionY = inputs[(int)InputId.DiffusionY].Eval(context).Value;",
        "            var Diffusion = new Vector2(DiffusionX, DiffusionY);",
        "            var FValue = inputs[(int)InputId.FValue].Eval(context).Value;",
        "            var FDx = inputs[(int)InputId.FDx].Eval(context).Value;",
        "            var F = new Vector2(FValue, FDx);",
        "            var kValue = inputs[(int)InputId.kValue].Eval(context).Value;",
        "            var kDx = inputs[(int)InputId.kDx].Eval(context).Value;",
        "            var k = new Vector2(kValue, kDx);",
        "            var ResetTrigger = inputs[(int)InputId.ResetTrigger].Eval(context).Value;",
        "            //<<< _params",
        "",
        "",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                using (var ImageView = new ShaderResourceView(context.D3DDevice, Image))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Image\").AsShaderResource().SetResource(ImageView);",
        "                    _effect.GetVariableByName(\"Diffusion\").AsVector().Set(new Vector2(DiffusionX, DiffusionY));",
        "                    _effect.GetVariableByName(\"F\").AsVector().Set(new Vector2(FValue, FDx));",
        "                    _effect.GetVariableByName(\"k\").AsVector().Set(new Vector2(kValue, kDx));",
        "                    _effect.GetVariableByName(\"ResetTrigger\").AsScalar().Set(ResetTrigger);",
        "                //<<< _setup",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "49bbc5e1-a34e-4d93-8886-c0c92b6fc31c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f777acf4-9ea4-4395-9547-3a6eb8a262a1"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "452fba8c-1fcf-4a19-a978-5e4365a5c136",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "49bbc5e1-a34e-4d93-8886-c0c92b6fc31c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "709ad20d-6733-4910-a388-90163b7af0bd",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "49bbc5e1-a34e-4d93-8886-c0c92b6fc31c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "64980b0a-b108-4409-a2ec-55ac9c6b1044",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "49bbc5e1-a34e-4d93-8886-c0c92b6fc31c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e160aac0-c3fc-460b-876f-dbf3e5ea8eb5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "49bbc5e1-a34e-4d93-8886-c0c92b6fc31c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9e0d954f-8dde-4f08-ba40-a1feea9764b5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "49bbc5e1-a34e-4d93-8886-c0c92b6fc31c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b7f6c968-273d-411a-b333-96b8c57ad16a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "49bbc5e1-a34e-4d93-8886-c0c92b6fc31c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e852c648-7322-4c4c-87ec-9aedcfb296f3",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "49bbc5e1-a34e-4d93-8886-c0c92b6fc31c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "73369c52-842e-417e-a4ac-5d2743fab939",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "49bbc5e1-a34e-4d93-8886-c0c92b6fc31c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "399cf25f-f992-491e-a456-d8360d2b3b7e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "49bbc5e1-a34e-4d93-8886-c0c92b6fc31c"
    }
  ]
}