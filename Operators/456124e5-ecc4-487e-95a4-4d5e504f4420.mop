{
  "Name": "FlatShaderNearestFilter",
  "_id": "456124e5-ecc4-487e-95a4-4d5e504f4420",
  "Namespace": "projects.glitch.shaders",
  "Description": "Flatshader without texture filtering",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "896c6283-5b37-4320-badf-560ad6b5a824",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "float4x4 worldToCameraMatrix;\r",
          "float4x4 projMatrix;\r",
          "float4x4 textureMatrix;\r",
          "\r",
          "float4 ColorMul;",
          "\r",
          "Texture2D txDiffuse;\r",
          "\r",
          "SamplerState samLinear\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_POINT;\r",
          "    AddressU = Wrap;\r",
          "    AddressV = Wrap;\r",
          "};\r",
          "\r",
          "struct VS_IN\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "    float3 normal: NORMAL;\r",
          "    float4 col : COLOR;\r",
          "    float2 texCoord : TEXCOORD;\r",
          "    float3 tangent: TANGENT;\r",
          "    float3 binormal: BINORMAL;\r",
          "};\r",
          "\r",
          "struct PS_IN\r",
          "{\r",
          "    \r",
          "    float4 pos : SV_POSITION;\r",
          "    float4 col : COLOR;\r",
          "    float2 texCoord: TEXCOORD0;\r",
          "};\r",
          "\r",
          "PS_IN VS( VS_IN input )\r",
          "{\r",
          "    PS_IN output = (PS_IN)0;\r",
          "\r",
          "    output.pos = mul(input.pos, worldToCameraMatrix);\r",
          "    output.pos = mul(output.pos, projMatrix);\r",
          "    output.col = input.col;\r",
          "    output.texCoord = mul(float4(input.texCoord.xy, 0, 1), textureMatrix).xy;\r",
          "\r",
          "    return output;\r",
          "}\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float4 colr=txDiffuse.Sample(samLinear, input.texCoord) * input.col*ColorMul;\r",
          "\r",
          "    return  colr;\r",
          "}\r",
          "\r",
          "technique10 Render\r",
          "{\r",
          "    pass P0\r",
          "    {\r",
          "        SetGeometryShader( 0 );\r",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );\r",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );\r",
          "    }\r",
          "}\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scene",
      "MetaInstanceID": "2eee7d84-a3d6-4db1-b28a-fea135f28ee0",
      "DefaultValue": {
        "Type": "Scene",
        "Value": "Framefield.Core.Scene"
      },
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ColorMul.R",
      "MetaInstanceID": "361a9112-444f-43c3-a417-8c3caccf4bd0",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ColorMul.G",
      "MetaInstanceID": "5bc8a60e-021e-41fa-b4fb-267fa25914db",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ColorMul.B",
      "MetaInstanceID": "b7052a6c-cf39-4541-b78e-165d5ed862a0",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ColorMul.A",
      "MetaInstanceID": "a60464a7-ad9d-4a68-9ce2-49ca2b13c5be",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "OverrideAlpha",
      "MetaInstanceID": "2b91193b-daaf-458e-8c77-577ca7162fc4",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": [
        {
          "Name": "Override",
          "Value": "0"
        },
        {
          "Name": "Multiply",
          "Value": "1"
        }
      ]
    }
  ],
  "Outputs": [
    {
      "Name": "Scene",
      "MetaInstanceID": "e6c6c4c7-4827-43a4-a06a-e632089eb75d",
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "c4c0456b-c98e-4b98-916c-75b5369b49ec",
      "MetaID": "66b07e47-1541-47f5-a085-35f8dadfd6d7",
      "Name": "FlatShaderNearestFilterFunc",
      "Version": "c866239e-70d7-4902-89dd-f726f9f68ff8",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "using System;",
        "using System.Collections.Generic;",
        "using System.Runtime.InteropServices;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using Framefield.Core.Rendering;",
        "using Buffer = SharpDX.Direct3D11.Buffer;",
        "",
        "namespace Framefield.Core.ID66b07e47_1541_47f5_a085_35f8dadfd6d7",
        "{",
        "    public class Class_FlatShaderNearestFilter : FXSourceCodeFunction, IFXSceneSourceCode, IMaterial",
        "    {",
        "",
        "        class Renderer : BaseRenderer",
        "        {",
        "        }",
        "",
        "        public override void Dispose() {",
        "            Utilities.DisposeObj(ref _renderer);",
        "            base.Dispose();",
        "        }",
        "",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Scene = 1,",
        "            ColorMulR = 2,",
        "            ColorMulG = 3,",
        "            ColorMulB = 4,",
        "            ColorMulA = 5,",
        "            OverrideAlpha = 6",
        "        }",
        "        //<<< _inputids",
        "        bool _firstEval = true;",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Scene = inputs[(int)InputId.Scene];",
        "            var ColorMulR = inputs[(int)InputId.ColorMulR].Eval(context).Value;",
        "            var ColorMulG = inputs[(int)InputId.ColorMulG].Eval(context).Value;",
        "            var ColorMulB = inputs[(int)InputId.ColorMulB].Eval(context).Value;",
        "            var ColorMulA = inputs[(int)InputId.ColorMulA].Eval(context).Value;",
        "            var ColorMul = new Color4(ColorMulR, ColorMulG, ColorMulB, ColorMulA);",
        "            var OverrideAlpha = (int) inputs[(int)InputId.OverrideAlpha].Eval(context).Value;",
        "            //<<< _params",
        "        ",
        "            if (_firstEval) {",
        "                for (int i = 0; i < NumCodes(); ++i)",
        "                    Compile(i);",
        "                _firstEval = false;",
        "                Changed = true;",
        "            }",
        "",
        "            var prevEffect = context.Effect;",
        "            var prevRenderer = context.Renderer;",
        "            context.Effect = _effect;",
        "            context.Renderer = _renderer;",
        "",
        "            var prevMaterial = (IMaterial) context.Objects[OperatorPartContext.MATERIAL_ID];",
        "            context.Objects[OperatorPartContext.MATERIAL_ID] = this;",
        "            if (OverrideAlpha > 0.5f) ",
        "            {",
        "                ColorMulA *= prevMaterial.Diffuse.Alpha;",
        "                ColorMul.Alpha = ColorMulA;",
        "            }",
        "            Diffuse = ColorMul;",
        "",
        "            _effect.GetVariableByName(\"ColorMul\").AsVector().Set(new Vector4(ColorMulR, ColorMulG, ColorMulB,ColorMulA)); ",
        "",
        "            Scene.Eval(context);",
        "            context.Objects[OperatorPartContext.MATERIAL_ID] = prevMaterial;",
        "            context.Effect = prevEffect;",
        "            context.Renderer = prevRenderer;",
        "",
        "            return context;",
        "        }",
        "",
        "        private Renderer _renderer = new Renderer();",
        "",
        "        public Color4 Ambient { get; private set; }",
        "        public Color4 Diffuse { get; private set; }",
        "        public Color4 Specular { get; private set; }",
        "        public Color4 Emission { get; private set; }",
        "        public float Shininess { get; private set; }",
        "    }",
        "}",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c4c0456b-c98e-4b98-916c-75b5369b49ec",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6c6c4c7-4827-43a4-a06a-e632089eb75d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "896c6283-5b37-4320-badf-560ad6b5a824",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c4c0456b-c98e-4b98-916c-75b5369b49ec"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2eee7d84-a3d6-4db1-b28a-fea135f28ee0",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c4c0456b-c98e-4b98-916c-75b5369b49ec"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "361a9112-444f-43c3-a417-8c3caccf4bd0",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c4c0456b-c98e-4b98-916c-75b5369b49ec"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5bc8a60e-021e-41fa-b4fb-267fa25914db",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c4c0456b-c98e-4b98-916c-75b5369b49ec"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b7052a6c-cf39-4541-b78e-165d5ed862a0",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c4c0456b-c98e-4b98-916c-75b5369b49ec"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a60464a7-ad9d-4a68-9ce2-49ca2b13c5be",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c4c0456b-c98e-4b98-916c-75b5369b49ec"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2b91193b-daaf-458e-8c77-577ca7162fc4",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c4c0456b-c98e-4b98-916c-75b5369b49ec"
    }
  ]
}