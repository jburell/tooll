{
  "Name": "MemoryAsImage",
  "_id": "7a98905a-8d01-44ef-952d-bdbff26501f3",
  "Namespace": "lib.image.experimental",
  "Description": "Interprets the binary input as an image file.\r\n\r\nWe support most file-types. Use the two additional outputs for Width and Height. \r\n\r\nUse a combination like this to use Image as texture:\r\n\r\n[SetTexture           ]\r\n[Rectange] [Image]\r\n",
  "Inputs": [
    {
      "Name": "Binary",
      "MetaInstanceID": "044a7b68-f880-49a8-afe4-e90be5044783",
      "DefaultValue": {
        "Type": "Dynamic",
        "Value": "Framefield.Core.Dynamic"
      },
      "MetaID": "9701d534-b3ff-4889-a250-84aece4a7d76",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "1114a725-bb91-4c86-ac9d-e9e2674adeaa",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    },
    {
      "Name": "Size.X",
      "MetaInstanceID": "03850bc8-020b-4bfa-b4f1-e6e4fcef438c",
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506"
    },
    {
      "Name": "Size.Y",
      "MetaInstanceID": "8236690b-ea4e-4245-9419-485a3f76388e",
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "54e9e45f-5a73-4ee1-b530-5738700ab987",
      "MetaID": "3ebbf2a6-8058-4729-969c-6f864cfa5744",
      "Name": "MemoryAsImageFunc",
      "Version": "daf10428-3ec1-4104-9dba-b93cb58bb8e9",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "using System.Dynamic;",
        "",
        "namespace Framefield.Core.ID3ebbf2a6_8058_4729_969c_6f864cfa5744",
        "{",
        "    public class Class_MemoryAsImage : OperatorPart.Function",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Binary = 0",
        "        }",
        "        //<<< _inputids",
        "",
        "        //>>> _outputids",
        "        private enum OutputId",
        "        {",
        "            Image = 0,",
        "            SizeX = 1,",
        "            SizeY = 2",
        "        }",
        "        //<<< _outputids",
        "",
        "        public override void Dispose()",
        "        {",
        "            Utilities.DisposeObj(ref _image);",
        "        }",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) ",
        "        {",
        "            //>>> __params",
        "            var Binary = inputs[(int)InputId.Binary].Eval(context).Dynamic;",
        "            //<<< __params",
        "",
        "             if (Binary == null)",
        "             {",
        "                context.Image = null;",
        "                return context;",
        "             }",
        " ",
        "            if (Changed)",
        "            {",
        "                Dispose();",
        "                try",
        "                {",
        "                    _image = SharpDX.Direct3D11.Resource.FromMemory<Texture2D>(D3DDevice.Device, Binary.Data);",
        "                    _size = new Vector2(_image.Description.Width, _image.Description.Height); ",
        "                }",
        "                catch (Exception e)",
        "                {",
        "                    Logger.Error(this, \"binary data could not be treated as image: {0}\", e.Message);",
        "                    _image = null;",
        "                } ",
        "",
        "                Changed = false;",
        "            }",
        "",
        "            if (_image != null)",
        "            {",
        "                switch ((OutputId)outputIdx)",
        "                {",
        "                    case OutputId.Image:",
        "                        context.Image = _image;",
        "                        break;",
        "                    case OutputId.SizeX:",
        "                        context.Value = _size.X;",
        "                        break;",
        "                    case OutputId.SizeY:",
        "                        context.Value = _size.Y;",
        "                        break;",
        "                }",
        "            }",
        "            else",
        "            {",
        "                switch (outputIdx)",
        "                {",
        "                    case (int)OutputId.Image:",
        "                        context.Image = null;",
        "                        break;",
        "                    case (int)OutputId.SizeX:",
        "                        context.Value = 0;",
        "                        break;",
        "                    case (int)OutputId.SizeY:",
        "                        context.Value = 0;",
        "                        break;",
        "                }",
        "            }",
        "",
        "            return context;",
        "        }",
        "",
        "        Texture2D _image;",
        "        Vector2 _size;",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "54e9e45f-5a73-4ee1-b530-5738700ab987",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "1114a725-bb91-4c86-ac9d-e9e2674adeaa"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "54e9e45f-5a73-4ee1-b530-5738700ab987",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "03850bc8-020b-4bfa-b4f1-e6e4fcef438c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "54e9e45f-5a73-4ee1-b530-5738700ab987",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "8236690b-ea4e-4245-9419-485a3f76388e"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "044a7b68-f880-49a8-afe4-e90be5044783",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "54e9e45f-5a73-4ee1-b530-5738700ab987"
    }
  ]
}