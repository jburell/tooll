{
  "Name": "BlockNoise",
  "_id": "6e12670b-44c4-485d-8463-77cd211a0c08",
  "Namespace": "lib.image",
  "Description": "",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "76ddf9d1-4f8c-479e-9d37-72fb642610e6",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "float2 Shift;",
          "float2 FrequencyA;",
          "float2 FrequencyB;",
          "float2 FrequencyC;",
          "float2 Progress;",
          "float2 SubDivideRatio;",
          "//<<< _parameters\r",
          " \r",
          "//>>> setup\r",
          "SamplerState samLinear\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_LINEAR;\r",
          "    AddressU = Wrap;\r",
          "    AddressV = Wrap;\r",
          "};\r",
          "//<<< setup\r",
          "\r",
          "//>>> declarations\r",
          "struct VS_IN\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "    float2 texCoord : TEXCOORD;\r",
          "};\r",
          "\r",
          "struct PS_IN\r",
          "{\r",
          "    float4 pos : SV_POSITION;\r",
          "    float2 texCoord: TEXCOORD0;\t    \r",
          "    float3 worldTViewPos: TEXCOORD1;\r",
          "    float3 worldTViewDir: TEXCOORD2;\r",
          "};\r",
          "//<<< declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "float random( float2 p )\r",
          "{\r",
          "  // We need irrationals for pseudo randomness.\r",
          "  // Most (all?) known transcendental numbers will (generally) work.\r",
          "  const float2 r = float2(\r",
          "    23.1406926327792690,  // e^pi (Gelfond's constant)\r",
          "     2.6651441426902251); // 2^sqrt(2) (Gelfondâ€“Schneider constant)\r",
          "  return frac( cos( fmod( 123456789., 1e-7 + 256. * dot(p,r) ) ) );  \r",
          "}\r",
          "\r",
          "\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float2 p=input.texCoord + Shift;\r",
          "    \r",
          "    \r",
          "    float dx =  random(   float2(  \r",
          "                            floor(   sin(  floor( cos(p.y ) * FrequencyA.x) *   p.x * FrequencyB.x + Progress.x )    * FrequencyC.x), \r",
          "                            floor(   cos(  floor( sin(p.y  * FrequencyA.y) *  FrequencyB.y - Progress.y) +   p.x  + Progress.x) * FrequencyC.y)\r",
          "    ));\r",
          "    \r",
          "    if ( (dx + p.x)%1 > SubDivideRatio.x) {\r",
          "        p += float2(p.x, p.y) * 1.4;\r",
          "        dx =  random(   float2(  \r",
          "                            floor(   sin(  floor( cos(p.y +  Progress.y * 10) * FrequencyA.x) *   p.x * FrequencyB.x + Progress.x )    * FrequencyC.x), \r",
          "                            floor(   cos(  floor( sin(p.y  * FrequencyA.y) *  FrequencyB.y) +   p.x ) * FrequencyC.y)\r",
          "        ));\r",
          "\r",
          "    }\r",
          "    if ( (dx + p.y)%1 > SubDivideRatio.y * 2 ) {\r",
          "        p += float2(p.x, p.y) * 4 * dx;\r",
          "        dx =  random(   float2(  \r",
          "                            floor(   sin(  floor( cos(p.y +  Progress.y) * FrequencyA.x) *   p.x * FrequencyB.x + Progress.x )    * FrequencyC.x), \r",
          "                            floor(   cos(  floor( sin(p.y  * FrequencyA.y) *  FrequencyB.y) +   p.x ) * FrequencyC.y)\r",
          "        ));\r",
          "    }\r",
          "    \r",
          "\r",
          "        \r",
          "    p= float2(dx,0);    \r",
          "    \r",
          "    float b = p.x-p.y;\r",
          "    float4 c = float4(b, b,b, 1);\r",
          "    return c;    \r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Shift.X",
      "MetaInstanceID": "8a31eaaf-7389-4eb9-9c92-1830fd64938f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Shift.Y",
      "MetaInstanceID": "964d71c8-c87a-4b04-9581-9bc8a54a0e08",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "FrequencyA.X",
      "MetaInstanceID": "ffafb1ea-e1bc-4f14-9327-9dbefd55dad8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "FrequencyA.Y",
      "MetaInstanceID": "f114f4e6-921f-4ebf-92e5-101f99e988f3",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "FrequencyB.X",
      "MetaInstanceID": "bcd9bc13-86ef-48a3-83df-698f95fe40e6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "FrequencyB.Y",
      "MetaInstanceID": "e8e94128-e396-457e-8c24-a08960a0a48b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "FrequencyC.X",
      "MetaInstanceID": "a7ad7ba7-97cf-4f53-82cd-9e9d7e30fb96",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "FrequencyC.Y",
      "MetaInstanceID": "e2aa28f4-69b8-4ea2-ab70-36d87dd6efd9",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Progress.X",
      "MetaInstanceID": "d0427305-b6e9-4256-899a-8693e82304e6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Progress.Y",
      "MetaInstanceID": "7e915197-2abb-4bd9-838a-eee21a0738d5",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SubDivideRatio.X",
      "MetaInstanceID": "ace7e2e0-831c-4019-b0f2-1f8d9d809a5c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SubDivideRatio.Y",
      "MetaInstanceID": "2c22ee13-9d48-485b-9602-50e0e6d77d96",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "69924465-275a-4e7e-8302-315e2dbb987a",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "1cad465a-db5f-4624-933f-a427843e217a",
      "MetaID": "2d99e715-2e79-4a74-8431-aa34148c5571",
      "Name": "BlockNoiseFunc",
      "Version": "184ec134-fff2-4e70-89fd-efaf376ed0e6",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID2d99e715_2e79_4a74_8431_aa34148c5571",
        "{",
        "    public class Class_BlockNoise : FXImageFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            ShiftX = 1,",
        "            ShiftY = 2,",
        "            FrequencyAX = 3,",
        "            FrequencyAY = 4,",
        "            FrequencyBX = 5,",
        "            FrequencyBY = 6,",
        "            FrequencyCX = 7,",
        "            FrequencyCY = 8,",
        "            ProgressX = 9,",
        "            ProgressY = 10,",
        "            SubDivideRatioX = 11,",
        "            SubDivideRatioY = 12",
        "        }",
        "        //<<< _inputids",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var ShiftX = inputs[(int)InputId.ShiftX].Eval(context).Value;",
        "            var ShiftY = inputs[(int)InputId.ShiftY].Eval(context).Value;",
        "            var Shift = new Vector2(ShiftX, ShiftY);",
        "            var FrequencyAX = inputs[(int)InputId.FrequencyAX].Eval(context).Value;",
        "            var FrequencyAY = inputs[(int)InputId.FrequencyAY].Eval(context).Value;",
        "            var FrequencyA = new Vector2(FrequencyAX, FrequencyAY);",
        "            var FrequencyBX = inputs[(int)InputId.FrequencyBX].Eval(context).Value;",
        "            var FrequencyBY = inputs[(int)InputId.FrequencyBY].Eval(context).Value;",
        "            var FrequencyB = new Vector2(FrequencyBX, FrequencyBY);",
        "            var FrequencyCX = inputs[(int)InputId.FrequencyCX].Eval(context).Value;",
        "            var FrequencyCY = inputs[(int)InputId.FrequencyCY].Eval(context).Value;",
        "            var FrequencyC = new Vector2(FrequencyCX, FrequencyCY);",
        "            var ProgressX = inputs[(int)InputId.ProgressX].Eval(context).Value;",
        "            var ProgressY = inputs[(int)InputId.ProgressY].Eval(context).Value;",
        "            var Progress = new Vector2(ProgressX, ProgressY);",
        "            var SubDivideRatioX = inputs[(int)InputId.SubDivideRatioX].Eval(context).Value;",
        "            var SubDivideRatioY = inputs[(int)InputId.SubDivideRatioY].Eval(context).Value;",
        "            var SubDivideRatio = new Vector2(SubDivideRatioX, SubDivideRatioY);",
        "            //<<< _params",
        "",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Shift\").AsVector().Set(new Vector2(ShiftX, ShiftY));",
        "                    _effect.GetVariableByName(\"FrequencyA\").AsVector().Set(new Vector2(FrequencyAX, FrequencyAY));",
        "                    _effect.GetVariableByName(\"FrequencyB\").AsVector().Set(new Vector2(FrequencyBX, FrequencyBY));",
        "                    _effect.GetVariableByName(\"FrequencyC\").AsVector().Set(new Vector2(FrequencyCX, FrequencyCY));",
        "                    _effect.GetVariableByName(\"Progress\").AsVector().Set(new Vector2(ProgressX, ProgressY));",
        "                    _effect.GetVariableByName(\"SubDivideRatio\").AsVector().Set(new Vector2(SubDivideRatioX, SubDivideRatioY));",
        "                //<<< _setup",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "1cad465a-db5f-4624-933f-a427843e217a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "69924465-275a-4e7e-8302-315e2dbb987a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "76ddf9d1-4f8c-479e-9d37-72fb642610e6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "1cad465a-db5f-4624-933f-a427843e217a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8a31eaaf-7389-4eb9-9c92-1830fd64938f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "1cad465a-db5f-4624-933f-a427843e217a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "964d71c8-c87a-4b04-9581-9bc8a54a0e08",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "1cad465a-db5f-4624-933f-a427843e217a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ffafb1ea-e1bc-4f14-9327-9dbefd55dad8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "1cad465a-db5f-4624-933f-a427843e217a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f114f4e6-921f-4ebf-92e5-101f99e988f3",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "1cad465a-db5f-4624-933f-a427843e217a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "bcd9bc13-86ef-48a3-83df-698f95fe40e6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "1cad465a-db5f-4624-933f-a427843e217a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e8e94128-e396-457e-8c24-a08960a0a48b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "1cad465a-db5f-4624-933f-a427843e217a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a7ad7ba7-97cf-4f53-82cd-9e9d7e30fb96",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "1cad465a-db5f-4624-933f-a427843e217a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e2aa28f4-69b8-4ea2-ab70-36d87dd6efd9",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "1cad465a-db5f-4624-933f-a427843e217a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d0427305-b6e9-4256-899a-8693e82304e6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "1cad465a-db5f-4624-933f-a427843e217a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7e915197-2abb-4bd9-838a-eee21a0738d5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "1cad465a-db5f-4624-933f-a427843e217a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ace7e2e0-831c-4019-b0f2-1f8d9d809a5c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "1cad465a-db5f-4624-933f-a427843e217a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2c22ee13-9d48-485b-9602-50e0e6d77d96",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "1cad465a-db5f-4624-933f-a427843e217a"
    }
  ]
}